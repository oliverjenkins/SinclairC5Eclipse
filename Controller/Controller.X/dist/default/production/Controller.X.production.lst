

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Apr 21 10:43:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     _ADCON0	set	4034
    39  0000                     _ADCON0bits	set	4034
    40  0000                     _ADCON1	set	4033
    41  0000                     _ADCON2	set	4032
    42  0000                     _ADRESH	set	4036
    43  0000                     _ANSEL	set	3966
    44  0000                     _ANSELH	set	3967
    45  0000                     _CCP1CON	set	4029
    46  0000                     _CCPR1L	set	4030
    47  0000                     _INTCON2bits	set	4081
    48  0000                     _INTCON3bits	set	4080
    49  0000                     _INTCONbits	set	4082
    50  0000                     _LATBbits	set	3978
    51  0000                     _LATC	set	3979
    52  0000                     _LATD	set	3980
    53  0000                     _LATDbits	set	3980
    54  0000                     _LATEbits	set	3981
    55  0000                     _PORTB	set	3969
    56  0000                     _PORTD	set	3971
    57  0000                     _PR2	set	4043
    58  0000                     _RCONbits	set	4048
    59  0000                     _T2CON	set	4042
    60  0000                     _TRISA	set	3986
    61  0000                     _TRISAbits	set	3986
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISCbits	set	3988
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISEbits	set	3990
    66  0000                     _WPUBbits	set	3964
    67                           
    68                           	psect	smallconst
    69  000600                     __psmallconst:
    70                           	opt stack 0
    71  000600  00                 	db	0
    72  000601                     STR_2:
    73  000601  4C                 	db	76	;'L'
    74  000602  69                 	db	105	;'i'
    75  000603  6E                 	db	110	;'n'
    76  000604  65                 	db	101	;'e'
    77  000605  20                 	db	32
    78  000606  30                 	db	48	;'0'
    79  000607  30                 	db	48	;'0'
    80  000608  30                 	db	48	;'0'
    81  000609  20                 	db	32
    82  00060A  00                 	db	0
    83  00060B                     STR_1:
    84  00060B  54                 	db	84	;'T'
    85  00060C  65                 	db	101	;'e'
    86  00060D  73                 	db	115	;'s'
    87  00060E  74                 	db	116	;'t'
    88  00060F  69                 	db	105	;'i'
    89  000610  6E                 	db	110	;'n'
    90  000611  67                 	db	103	;'g'
    91  000612  20                 	db	32
    92  000613  00                 	db	0
    93                           
    94                           ; #config settings
    95  000614  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           	psect	cinit
    98  000C8C                     __pcinit:
    99                           	opt stack 0
   100  000C8C                     start_initialization:
   101                           	opt stack 0
   102  000C8C                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Clear objects allocated to COMRAM (2 bytes)
   106  000C8C  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   107  000C8E  6A36               	clrf	__pbssCOMRAM& (0+255),c
   108  000C90                     end_of_initialization:
   109                           	opt stack 0
   110  000C90                     __end_of__initialization:
   111                           	opt stack 0
   112  000C90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   113  000C92  6EF8               	movwf	tblptru,c
   114  000C94  0100               	movlb	0
   115  000C96  EF7C  F004         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           
   118                           	psect	bssCOMRAM
   119  000036                     __pbssCOMRAM:
   120                           	opt stack 0
   121  000036                     _ADC_Value:
   122                           	opt stack 0
   123  000036                     	ds	1
   124  000037                     _PortBValue:
   125                           	opt stack 0
   126  000037                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           
   129                           	psect	cstackCOMRAM
   130  000001                     __pcstackCOMRAM:
   131                           	opt stack 0
   132  000001                     ??_XC8_LowISR_Handler:
   133  000001                     
   134                           ; 1 bytes @ 0x0
   135  000001                     	ds	17
   136  000012                     ??_XC8_HighISR_Handler:
   137                           
   138                           ; 0 bytes @ 0x11
   139  000012                     	ds	14
   140  000020                     ??_Delay10KTCYx:
   141  000020                     ?___lwdiv:
   142                           	opt stack 0
   143  000020                     ?___lwmod:
   144                           	opt stack 0
   145  000020                     Delay100TCYx@unit:
   146                           	opt stack 0
   147  000020                     Delay1TCYx@unit:
   148                           	opt stack 0
   149  000020                     ___lwdiv@dividend:
   150                           	opt stack 0
   151  000020                     ___lwmod@dividend:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x1F
   155  000020                     	ds	1
   156  000021                     ??_SetLCDDDRamAddr:
   157  000021                     ??_SetLCDCGRamAddr:
   158  000021                     WriteCmdLCD@cmd:
   159                           	opt stack 0
   160  000021                     WriteDataLCD@data:
   161                           	opt stack 0
   162  000021                     Delay10KTCYx@unit:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x20
   166  000021                     	ds	1
   167  000022                     putLCD@buffer:
   168                           	opt stack 0
   169  000022                     ___lwdiv@divisor:
   170                           	opt stack 0
   171  000022                     ___lwmod@divisor:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x21
   175  000022                     	ds	2
   176  000024                     SetLCDDDRamAddr@DDaddr:
   177                           	opt stack 0
   178  000024                     SetLCDCGRamAddr@CGaddr:
   179                           	opt stack 0
   180  000024                     ___lwmod@counter:
   181                           	opt stack 0
   182  000024                     ___lwdiv@quotient:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x23
   186  000024                     	ds	1
   187  000025                     OpenLCD@lcdtype:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x24
   191  000025                     	ds	1
   192  000026                     ___lwdiv@counter:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x25
   196  000026                     	ds	1
   197  000027                     utoa@buf:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x26
   201  000027                     	ds	2
   202  000029                     utoa@val:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x28
   206  000029                     	ds	2
   207  00002B                     utoa@base:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x2A
   211  00002B                     	ds	2
   212  00002D                     utoa@v:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2C
   216  00002D                     	ds	2
   217  00002F                     utoa@c:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x2E
   221  00002F                     	ds	1
   222  000030                     putIntLCD@n:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x2F
   226  000030                     	ds	2
   227  000032                     putIntLCD@result:
   228                           	opt stack 0
   229                           
   230                           ; 4 bytes @ 0x31
   231  000032                     	ds	4
   232  000036                     tblptru	equ	0xFF8
   233                           
   234                           ; 0 bytes @ 0x35
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 56 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;		None               void
   247 ;; Registers used:
   248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   254 ;;      Params:         0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called:    8
   260 ;; This function calls:
   261 ;;		_ADC_Convert
   262 ;;		_InitAnalogueInputs
   263 ;;		_InitInterrupts
   264 ;;		_InitLCD
   265 ;;		_InitMotorPWM
   266 ;;		_InitPorts
   267 ;;		_LCDInitialDisplay
   268 ;;		_SetLCDDDRamAddr
   269 ;;		_WriteDataLCD
   270 ;;		_putIntLCD
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  0008F8                     __ptext0:
   278                           	opt stack 0
   279  0008F8                     _main:
   280                           	opt stack 23
   281                           
   282                           ;main.c: 58: InitPorts();
   283                           
   284                           ;incstack = 0
   285  0008F8  EC0F  F006         	call	_InitPorts	;wreg free
   286                           
   287                           ;main.c: 59: InitInterrupts();
   288  0008FC  EC4D  F006         	call	_InitInterrupts	;wreg free
   289                           
   290                           ;main.c: 60: InitMotorPWM();
   291  000900  EC3E  F006         	call	_InitMotorPWM	;wreg free
   292                           
   293                           ;main.c: 61: InitLCD();
   294  000904  EC30  F005         	call	_InitLCD	;wreg free
   295                           
   296                           ;main.c: 62: InitAnalogueInputs();
   297  000908  EC2B  F006         	call	_InitAnalogueInputs	;wreg free
   298                           
   299                           ;main.c: 63: LCDInitialDisplay();
   300  00090C  EC6A  F003         	call	_LCDInitialDisplay	;wreg free
   301                           
   302                           ;main.c: 67: CCPR1L = 16;
   303  000910  0E10               	movlw	16
   304  000912  6EBE               	movwf	4030,c	;volatile
   305                           
   306                           ;main.c: 70: LATD = 0;
   307  000914  0E00               	movlw	0
   308  000916  6E8C               	movwf	3980,c	;volatile
   309                           
   310                           ;main.c: 71: LATC = 0;
   311  000918  0E00               	movlw	0
   312  00091A  6E8B               	movwf	3979,c	;volatile
   313  00091C  D000               	goto	l1400
   314  00091E                     l1400:
   315                           
   316                           ;main.c: 74: {
   317                           ;main.c: 76: CCPR1L = CCPR1L + 2;
   318  00091E  50BE               	movf	4030,w,c	;volatile
   319  000920  0F02               	addlw	2
   320  000922  6EBE               	movwf	4030,c	;volatile
   321                           
   322                           ;main.c: 77: ADC_Value = ADC_Convert();
   323  000924  EC54  F006         	call	_ADC_Convert	;wreg free
   324  000928  6E36               	movwf	_ADC_Value,c
   325                           
   326                           ;main.c: 78: ADC_Value = ADC_Value >> 4;
   327  00092A  3836               	swapf	_ADC_Value,w,c
   328  00092C  0B0F               	andlw	15
   329  00092E  6E36               	movwf	_ADC_Value,c
   330                           
   331                           ;main.c: 80: SetLCDDDRamAddr(0x040);
   332  000930  0E40               	movlw	64
   333  000932  EC06  F005         	call	_SetLCDDDRamAddr
   334                           
   335                           ;main.c: 81: if (ADC_Value < 10) {
   336  000936  0E0A               	movlw	10
   337  000938  6036               	cpfslt	_ADC_Value,c
   338  00093A  D004               	goto	l1412
   339                           
   340                           ;main.c: 82: WriteDataLCD('0');
   341  00093C  0E30               	movlw	48
   342  00093E  EC7E  F005         	call	_WriteDataLCD
   343  000942  D000               	goto	l1412
   344  000944                     l1412:
   345                           
   346                           ;main.c: 83: }
   347                           ;main.c: 84: putIntLCD(ADC_Value);
   348  000944  C036  F030         	movff	_ADC_Value,putIntLCD@n
   349  000948  6A31               	clrf	putIntLCD@n+1,c
   350  00094A  ECFA  F005         	call	_putIntLCD	;wreg free
   351                           
   352                           ;main.c: 86: LATDbits.LATD7 = ~LATDbits.LATD7;
   353  00094E  7E8C               	btg	3980,7,c	;volatile
   354  000950  D7E6               	goto	l1400
   355  000952  EF60  F000         	goto	start
   356  000956                     __end_of_main:
   357                           	opt stack 0
   358                           tblptru	equ	0xFF8
   359                           
   360 ;; *************** function _LCDInitialDisplay *****************
   361 ;; Defined at:
   362 ;;		line 7 in file "lcddisplay.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;		None               void
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   376 ;;      Params:         0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    7
   383 ;; This function calls:
   384 ;;		_SetLCDCGRamAddr
   385 ;;		_SetLCDDDRamAddr
   386 ;;		_WriteCmdLCD
   387 ;;		_WriteDataLCD
   388 ;;		_putIntLCD
   389 ;;		_putLCD
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  0006D4                     __ptext1:
   397                           	opt stack 0
   398  0006D4                     _LCDInitialDisplay:
   399                           	opt stack 23
   400                           
   401                           ;lcddisplay.c: 12: SetLCDCGRamAddr(0x00);
   402                           
   403                           ;incstack = 0
   404  0006D4  0E00               	movlw	0
   405  0006D6  ECD9  F004         	call	_SetLCDCGRamAddr
   406                           
   407                           ;lcddisplay.c: 13: WriteDataLCD(0b00000);
   408  0006DA  0E00               	movlw	0
   409  0006DC  EC7E  F005         	call	_WriteDataLCD
   410                           
   411                           ;lcddisplay.c: 14: WriteDataLCD(0b01111);
   412  0006E0  0E0F               	movlw	15
   413  0006E2  EC7E  F005         	call	_WriteDataLCD
   414                           
   415                           ;lcddisplay.c: 15: WriteDataLCD(0b10001);
   416  0006E6  0E11               	movlw	17
   417  0006E8  EC7E  F005         	call	_WriteDataLCD
   418                           
   419                           ;lcddisplay.c: 16: WriteDataLCD(0b10001);
   420  0006EC  0E11               	movlw	17
   421  0006EE  EC7E  F005         	call	_WriteDataLCD
   422                           
   423                           ;lcddisplay.c: 17: WriteDataLCD(0b10001);
   424  0006F2  0E11               	movlw	17
   425  0006F4  EC7E  F005         	call	_WriteDataLCD
   426                           
   427                           ;lcddisplay.c: 18: WriteDataLCD(0b01111);
   428  0006F8  0E0F               	movlw	15
   429  0006FA  EC7E  F005         	call	_WriteDataLCD
   430                           
   431                           ;lcddisplay.c: 19: WriteDataLCD(0b00111);
   432  0006FE  0E07               	movlw	7
   433  000700  EC7E  F005         	call	_WriteDataLCD
   434                           
   435                           ;lcddisplay.c: 20: WriteDataLCD(0b00111);
   436  000704  0E07               	movlw	7
   437  000706  EC7E  F005         	call	_WriteDataLCD
   438                           
   439                           ;lcddisplay.c: 23: SetLCDCGRamAddr(0x08);
   440  00070A  0E08               	movlw	8
   441  00070C  ECD9  F004         	call	_SetLCDCGRamAddr
   442                           
   443                           ;lcddisplay.c: 24: WriteDataLCD(0b11111);
   444  000710  0E1F               	movlw	31
   445  000712  EC7E  F005         	call	_WriteDataLCD
   446                           
   447                           ;lcddisplay.c: 25: WriteDataLCD(0b10001);
   448  000716  0E11               	movlw	17
   449  000718  EC7E  F005         	call	_WriteDataLCD
   450                           
   451                           ;lcddisplay.c: 26: WriteDataLCD(0b10001);
   452  00071C  0E11               	movlw	17
   453  00071E  EC7E  F005         	call	_WriteDataLCD
   454                           
   455                           ;lcddisplay.c: 27: WriteDataLCD(0b10101);
   456  000722  0E15               	movlw	21
   457  000724  EC7E  F005         	call	_WriteDataLCD
   458                           
   459                           ;lcddisplay.c: 28: WriteDataLCD(0b10001);
   460  000728  0E11               	movlw	17
   461  00072A  EC7E  F005         	call	_WriteDataLCD
   462                           
   463                           ;lcddisplay.c: 29: WriteDataLCD(0b10001);
   464  00072E  0E11               	movlw	17
   465  000730  EC7E  F005         	call	_WriteDataLCD
   466                           
   467                           ;lcddisplay.c: 30: WriteDataLCD(0b10001);
   468  000734  0E11               	movlw	17
   469  000736  EC7E  F005         	call	_WriteDataLCD
   470                           
   471                           ;lcddisplay.c: 31: WriteDataLCD(0b11111);
   472  00073A  0E1F               	movlw	31
   473  00073C  EC7E  F005         	call	_WriteDataLCD
   474                           
   475                           ;lcddisplay.c: 33: WriteCmdLCD(0b00000010);
   476  000740  0E02               	movlw	2
   477  000742  EC9E  F005         	call	_WriteCmdLCD
   478                           
   479                           ;lcddisplay.c: 34: putLCD( (unsigned char *)"Testing ");
   480  000746  0E0B               	movlw	low STR_1
   481  000748  6E22               	movwf	putLCD@buffer,c
   482  00074A  0E06               	movlw	high STR_1
   483  00074C  6E23               	movwf	putLCD@buffer+1,c
   484  00074E  EC4C  F004         	call	_putLCD	;wreg free
   485                           
   486                           ;lcddisplay.c: 36: putIntLCD(3455);
   487  000752  0E0D               	movlw	13
   488  000754  6E31               	movwf	putIntLCD@n+1,c
   489  000756  0E7F               	movlw	127
   490  000758  6E30               	movwf	putIntLCD@n,c
   491  00075A  ECFA  F005         	call	_putIntLCD	;wreg free
   492                           
   493                           ;lcddisplay.c: 38: SetLCDDDRamAddr(0x040);
   494  00075E  0E40               	movlw	64
   495  000760  EC06  F005         	call	_SetLCDDDRamAddr
   496                           
   497                           ;lcddisplay.c: 39: putLCD( (unsigned char *)"Line 000 ");
   498  000764  0E01               	movlw	low STR_2
   499  000766  6E22               	movwf	putLCD@buffer,c
   500  000768  0E06               	movlw	high STR_2
   501  00076A  6E23               	movwf	putLCD@buffer+1,c
   502  00076C  EC4C  F004         	call	_putLCD	;wreg free
   503                           
   504                           ;lcddisplay.c: 41: WriteDataLCD(0);
   505  000770  0E00               	movlw	0
   506  000772  EC7E  F005         	call	_WriteDataLCD
   507                           
   508                           ;lcddisplay.c: 42: WriteDataLCD(1);
   509  000776  0E01               	movlw	1
   510  000778  EC7E  F005         	call	_WriteDataLCD
   511  00077C  0012               	return		;funcret
   512  00077E                     __end_of_LCDInitialDisplay:
   513                           	opt stack 0
   514                           tblptru	equ	0xFF8
   515                           
   516 ;; *************** function _putIntLCD *****************
   517 ;; Defined at:
   518 ;;		line 378 in file "lcddisplay.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;  n               2   47[COMRAM] short 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  result          4   49[COMRAM] unsigned char [4]
   523 ;; Return value:  Size  Location     Type
   524 ;;		None               void
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   532 ;;      Params:         2       0       0       0       0       0       0
   533 ;;      Locals:         4       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0
   535 ;;      Totals:         6       0       0       0       0       0       0
   536 ;;Total ram usage:        6 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    6
   539 ;; This function calls:
   540 ;;		_putLCD
   541 ;;		_utoa
   542 ;; This function is called by:
   543 ;;		_main
   544 ;;		_LCDInitialDisplay
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text2
   549  000BF4                     __ptext2:
   550                           	opt stack 0
   551  000BF4                     _putIntLCD:
   552                           	opt stack 24
   553                           
   554                           ;lcddisplay.c: 379: unsigned char result[4];
   555                           ;lcddisplay.c: 380: utoa((char*)result, n, 10);
   556                           
   557                           ;incstack = 0
   558  000BF4  0E32               	movlw	low putIntLCD@result
   559  000BF6  6E27               	movwf	utoa@buf,c
   560  000BF8  0E00               	movlw	high putIntLCD@result
   561  000BFA  6E28               	movwf	utoa@buf+1,c
   562  000BFC  C030  F029         	movff	putIntLCD@n,utoa@val
   563  000C00  C031  F02A         	movff	putIntLCD@n+1,utoa@val+1
   564  000C04  0E00               	movlw	0
   565  000C06  6E2C               	movwf	utoa@base+1,c
   566  000C08  0E0A               	movlw	10
   567  000C0A  6E2B               	movwf	utoa@base,c
   568  000C0C  ECBF  F003         	call	_utoa	;wreg free
   569                           
   570                           ;lcddisplay.c: 381: putLCD(result);
   571  000C10  0E32               	movlw	low putIntLCD@result
   572  000C12  6E22               	movwf	putLCD@buffer,c
   573  000C14  0E00               	movlw	high putIntLCD@result
   574  000C16  6E23               	movwf	putLCD@buffer+1,c
   575  000C18  EC4C  F004         	call	_putLCD	;wreg free
   576  000C1C  0012               	return		;funcret
   577  000C1E                     __end_of_putIntLCD:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           
   581 ;; *************** function _utoa *****************
   582 ;; Defined at:
   583 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  buf             2   38[COMRAM] PTR unsigned char 
   586 ;;		 -> putIntLCD@result(4), 
   587 ;;  val             2   40[COMRAM] unsigned int 
   588 ;;  base            2   42[COMRAM] int 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  v               2   44[COMRAM] unsigned int 
   591 ;;  c               1   46[COMRAM] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2   38[COMRAM] PTR unsigned char 
   594 ;; Registers used:
   595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         6       0       0       0       0       0       0
   602 ;;      Locals:         3       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         9       0       0       0       0       0       0
   605 ;;Total ram usage:        9 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		___lwdiv
   610 ;;		___lwmod
   611 ;; This function is called by:
   612 ;;		_putIntLCD
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text3
   617  00077E                     __ptext3:
   618                           	opt stack 0
   619  00077E                     _utoa:
   620                           	opt stack 26
   621                           
   622                           ;incstack = 0
   623  00077E  C029  F02D         	movff	utoa@val,utoa@v
   624  000782  C02A  F02E         	movff	utoa@val+1,utoa@v+1
   625  000786  D000               	goto	l1336
   626  000788                     l1336:
   627  000788  C02D  F020         	movff	utoa@v,___lwdiv@dividend
   628  00078C  C02E  F021         	movff	utoa@v+1,___lwdiv@dividend+1
   629  000790  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   630  000794  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   631  000798  ECAB  F004         	call	___lwdiv	;wreg free
   632  00079C  C020  F02D         	movff	?___lwdiv,utoa@v
   633  0007A0  C021  F02E         	movff	?___lwdiv+1,utoa@v+1
   634  0007A4  4A27               	infsnz	utoa@buf,f,c
   635  0007A6  2A28               	incf	utoa@buf+1,f,c
   636  0007A8  502D               	movf	utoa@v,w,c
   637  0007AA  102E               	iorwf	utoa@v+1,w,c
   638  0007AC  A4D8               	btfss	status,2,c
   639  0007AE  D7EC               	goto	l1336
   640  0007B0  C027  FFD9         	movff	utoa@buf,fsr2l
   641  0007B4  C028  FFDA         	movff	utoa@buf+1,fsr2h
   642  0007B8  0E00               	movlw	0
   643  0007BA  6EDF               	movwf	indf2,c
   644  0007BC  0627               	decf	utoa@buf,f,c
   645  0007BE  A0D8               	btfss	status,0,c
   646  0007C0  0628               	decf	utoa@buf+1,f,c
   647  0007C2  D000               	goto	l1346
   648  0007C4                     l1346:
   649  0007C4  C029  F020         	movff	utoa@val,___lwmod@dividend
   650  0007C8  C02A  F021         	movff	utoa@val+1,___lwmod@dividend+1
   651  0007CC  C02B  F022         	movff	utoa@base,___lwmod@divisor
   652  0007D0  C02C  F023         	movff	utoa@base+1,___lwmod@divisor+1
   653  0007D4  EC58  F005         	call	___lwmod	;wreg free
   654  0007D8  5020               	movf	?___lwmod,w,c
   655  0007DA  6E2F               	movwf	utoa@c,c
   656  0007DC  C029  F020         	movff	utoa@val,___lwdiv@dividend
   657  0007E0  C02A  F021         	movff	utoa@val+1,___lwdiv@dividend+1
   658  0007E4  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   659  0007E8  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   660  0007EC  ECAB  F004         	call	___lwdiv	;wreg free
   661  0007F0  C020  F029         	movff	?___lwdiv,utoa@val
   662  0007F4  C021  F02A         	movff	?___lwdiv+1,utoa@val+1
   663  0007F8  0E09               	movlw	9
   664  0007FA  642F               	cpfsgt	utoa@c,c
   665  0007FC  D002               	goto	l695
   666  0007FE  0E07               	movlw	7
   667  000800  262F               	addwf	utoa@c,f,c
   668  000802                     l695:
   669  000802  0E30               	movlw	48
   670  000804  262F               	addwf	utoa@c,f,c
   671  000806  C027  FFD9         	movff	utoa@buf,fsr2l
   672  00080A  C028  FFDA         	movff	utoa@buf+1,fsr2h
   673  00080E  C02F  FFDF         	movff	utoa@c,indf2
   674  000812  0627               	decf	utoa@buf,f,c
   675  000814  A0D8               	btfss	status,0,c
   676  000816  0628               	decf	utoa@buf+1,f,c
   677  000818  5029               	movf	utoa@val,w,c
   678  00081A  102A               	iorwf	utoa@val+1,w,c
   679  00081C  A4D8               	btfss	status,2,c
   680  00081E  D7D2               	goto	l1346
   681                           
   682                           ;	Return value of _utoa is never used
   683  000820  4A27               	infsnz	utoa@buf,f,c
   684  000822  2A28               	incf	utoa@buf+1,f,c
   685  000824  0012               	return	
   686  000826  0012               	return		;funcret
   687  000828                     __end_of_utoa:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           indf2	equ	0xFDF
   691                           fsr2h	equ	0xFDA
   692                           fsr2l	equ	0xFD9
   693                           status	equ	0xFD8
   694                           
   695 ;; *************** function ___lwmod *****************
   696 ;; Defined at:
   697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  dividend        2   31[COMRAM] unsigned int 
   700 ;;  divisor         2   33[COMRAM] unsigned int 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  counter         1   35[COMRAM] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  2   31[COMRAM] unsigned int 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   712 ;;      Params:         4       0       0       0       0       0       0
   713 ;;      Locals:         1       0       0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0
   715 ;;      Totals:         5       0       0       0       0       0       0
   716 ;;Total ram usage:        5 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    2
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_utoa
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text4
   727  000AB0                     __ptext4:
   728                           	opt stack 0
   729  000AB0                     ___lwmod:
   730                           	opt stack 26
   731                           
   732                           ;incstack = 0
   733  000AB0  5022               	movf	___lwmod@divisor,w,c
   734  000AB2  1023               	iorwf	___lwmod@divisor+1,w,c
   735  000AB4  B4D8               	btfsc	status,2,c
   736  000AB6  D01D               	goto	l799
   737  000AB8  0E01               	movlw	1
   738  000ABA  6E24               	movwf	___lwmod@counter,c
   739  000ABC  D005               	goto	l1314
   740  000ABE                     l1312:
   741  000ABE  90D8               	bcf	status,0,c
   742  000AC0  3622               	rlcf	___lwmod@divisor,f,c
   743  000AC2  3623               	rlcf	___lwmod@divisor+1,f,c
   744  000AC4  2A24               	incf	___lwmod@counter,f,c
   745  000AC6  D000               	goto	l1314
   746  000AC8                     l1314:
   747  000AC8  BE23               	btfsc	___lwmod@divisor+1,7,c
   748  000ACA  D002               	goto	l1316
   749  000ACC  D7F8               	goto	l1312
   750  000ACE  D000               	goto	l1316
   751  000AD0                     l1316:
   752  000AD0  5022               	movf	___lwmod@divisor,w,c
   753  000AD2  5C20               	subwf	___lwmod@dividend,w,c
   754  000AD4  5023               	movf	___lwmod@divisor+1,w,c
   755  000AD6  5821               	subwfb	___lwmod@dividend+1,w,c
   756  000AD8  A0D8               	btfss	status,0,c
   757  000ADA  D005               	goto	l1320
   758  000ADC  5022               	movf	___lwmod@divisor,w,c
   759  000ADE  5E20               	subwf	___lwmod@dividend,f,c
   760  000AE0  5023               	movf	___lwmod@divisor+1,w,c
   761  000AE2  5A21               	subwfb	___lwmod@dividend+1,f,c
   762  000AE4  D000               	goto	l1320
   763  000AE6                     l1320:
   764  000AE6  90D8               	bcf	status,0,c
   765  000AE8  3223               	rrcf	___lwmod@divisor+1,f,c
   766  000AEA  3222               	rrcf	___lwmod@divisor,f,c
   767  000AEC  2E24               	decfsz	___lwmod@counter,f,c
   768  000AEE  D7F0               	goto	l1316
   769  000AF0  D000               	goto	l799
   770  000AF2                     l799:
   771  000AF2  C020  F020         	movff	___lwmod@dividend,?___lwmod
   772  000AF6  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
   773  000AFA  0012               	return		;funcret
   774  000AFC                     __end_of___lwmod:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           indf2	equ	0xFDF
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function ___lwdiv *****************
   783 ;; Defined at:
   784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  dividend        2   31[COMRAM] unsigned int 
   787 ;;  divisor         2   33[COMRAM] unsigned int 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  quotient        2   35[COMRAM] unsigned int 
   790 ;;  counter         1   37[COMRAM] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2   31[COMRAM] unsigned int 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         4       0       0       0       0       0       0
   801 ;;      Locals:         3       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0
   803 ;;      Totals:         7       0       0       0       0       0       0
   804 ;;Total ram usage:        7 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    2
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_utoa
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text5
   815  000956                     __ptext5:
   816                           	opt stack 0
   817  000956                     ___lwdiv:
   818                           	opt stack 26
   819                           
   820                           ;incstack = 0
   821  000956  0E00               	movlw	0
   822  000958  6E25               	movwf	___lwdiv@quotient+1,c
   823  00095A  0E00               	movlw	0
   824  00095C  6E24               	movwf	___lwdiv@quotient,c
   825  00095E  5022               	movf	___lwdiv@divisor,w,c
   826  000960  1023               	iorwf	___lwdiv@divisor+1,w,c
   827  000962  B4D8               	btfsc	status,2,c
   828  000964  D021               	goto	l789
   829  000966  0E01               	movlw	1
   830  000968  6E26               	movwf	___lwdiv@counter,c
   831  00096A  D005               	goto	l1294
   832  00096C                     l1292:
   833  00096C  90D8               	bcf	status,0,c
   834  00096E  3622               	rlcf	___lwdiv@divisor,f,c
   835  000970  3623               	rlcf	___lwdiv@divisor+1,f,c
   836  000972  2A26               	incf	___lwdiv@counter,f,c
   837  000974  D000               	goto	l1294
   838  000976                     l1294:
   839  000976  BE23               	btfsc	___lwdiv@divisor+1,7,c
   840  000978  D002               	goto	l1296
   841  00097A  D7F8               	goto	l1292
   842  00097C  D000               	goto	l1296
   843  00097E                     l1296:
   844  00097E  90D8               	bcf	status,0,c
   845  000980  3624               	rlcf	___lwdiv@quotient,f,c
   846  000982  3625               	rlcf	___lwdiv@quotient+1,f,c
   847  000984  5022               	movf	___lwdiv@divisor,w,c
   848  000986  5C20               	subwf	___lwdiv@dividend,w,c
   849  000988  5023               	movf	___lwdiv@divisor+1,w,c
   850  00098A  5821               	subwfb	___lwdiv@dividend+1,w,c
   851  00098C  A0D8               	btfss	status,0,c
   852  00098E  D006               	goto	l1304
   853  000990  5022               	movf	___lwdiv@divisor,w,c
   854  000992  5E20               	subwf	___lwdiv@dividend,f,c
   855  000994  5023               	movf	___lwdiv@divisor+1,w,c
   856  000996  5A21               	subwfb	___lwdiv@dividend+1,f,c
   857  000998  8024               	bsf	___lwdiv@quotient,0,c
   858  00099A  D000               	goto	l1304
   859  00099C                     l1304:
   860  00099C  90D8               	bcf	status,0,c
   861  00099E  3223               	rrcf	___lwdiv@divisor+1,f,c
   862  0009A0  3222               	rrcf	___lwdiv@divisor,f,c
   863  0009A2  2E26               	decfsz	___lwdiv@counter,f,c
   864  0009A4  D7EC               	goto	l1296
   865  0009A6  D000               	goto	l789
   866  0009A8                     l789:
   867  0009A8  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
   868  0009AC  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
   869  0009B0  0012               	return		;funcret
   870  0009B2                     __end_of___lwdiv:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           indf2	equ	0xFDF
   874                           fsr2h	equ	0xFDA
   875                           fsr2l	equ	0xFD9
   876                           status	equ	0xFD8
   877                           
   878 ;; *************** function _putLCD *****************
   879 ;; Defined at:
   880 ;;		line 385 in file "lcddisplay.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  buffer          2   33[COMRAM] PTR unsigned char 
   883 ;;		 -> putIntLCD@result(4), STR_2(10), STR_1(9), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;		None               void
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   895 ;;      Params:         2       0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0
   898 ;;      Totals:         2       0       0       0       0       0       0
   899 ;;Total ram usage:        2 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    5
   902 ;; This function calls:
   903 ;;		_BusyLCD
   904 ;;		_WriteDataLCD
   905 ;; This function is called by:
   906 ;;		_LCDInitialDisplay
   907 ;;		_putIntLCD
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text6
   912  000898                     __ptext6:
   913                           	opt stack 0
   914  000898                     _putLCD:
   915                           	opt stack 24
   916                           
   917                           ;lcddisplay.c: 387: while(*buffer)
   918                           
   919                           ;incstack = 0
   920  000898  D01B               	goto	l1332
   921                           
   922                           ;lcddisplay.c: 388: {
   923                           ;lcddisplay.c: 389: while(BusyLCD());
   924  00089A  D000               	goto	l1326
   925  00089C                     l1326:
   926  00089C  ECDC  F005         	call	_BusyLCD	;wreg free
   927  0008A0  0900               	iorlw	0
   928  0008A2  A4D8               	btfss	status,2,c
   929  0008A4  D7FB               	goto	l1326
   930                           
   931                           ;lcddisplay.c: 390: WriteDataLCD(*buffer);
   932  0008A6  C022  FFF6         	movff	putLCD@buffer,tblptrl
   933  0008AA  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   934  0008AE  6AF8               	clrf	tblptru,c
   935  0008B0  0E05               	movlw	(high __ramtop+-1)
   936  0008B2  64F7               	cpfsgt	tblptrh,c
   937  0008B4  D003               	bra	u437
   938  0008B6  0008               	tblrd		*
   939  0008B8  50F5               	movf	tablat,w,c
   940  0008BA  D005               	bra	u430
   941  0008BC                     u437:
   942  0008BC  CFF6 FFE9          	movff	tblptrl,fsr0l
   943  0008C0  CFF7 FFEA          	movff	tblptrh,fsr0h
   944  0008C4  50EF               	movf	indf0,w,c
   945  0008C6                     u430:
   946  0008C6  EC7E  F005         	call	_WriteDataLCD
   947                           
   948                           ;lcddisplay.c: 391: buffer++;
   949  0008CA  4A22               	infsnz	putLCD@buffer,f,c
   950  0008CC  2A23               	incf	putLCD@buffer+1,f,c
   951  0008CE  D000               	goto	l1332
   952  0008D0                     l1332:
   953  0008D0  C022  FFF6         	movff	putLCD@buffer,tblptrl
   954  0008D4  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   955  0008D8  6AF8               	clrf	tblptru,c
   956  0008DA  0E05               	movlw	(high __ramtop+-1)
   957  0008DC  64F7               	cpfsgt	tblptrh,c
   958  0008DE  D003               	bra	u447
   959  0008E0  0008               	tblrd		*
   960  0008E2  50F5               	movf	tablat,w,c
   961  0008E4  D005               	bra	u440
   962  0008E6                     u447:
   963  0008E6  CFF6 FFE9          	movff	tblptrl,fsr0l
   964  0008EA  CFF7 FFEA          	movff	tblptrh,fsr0h
   965  0008EE  50EF               	movf	indf0,w,c
   966  0008F0                     u440:
   967  0008F0  0900               	iorlw	0
   968  0008F2  A4D8               	btfss	status,2,c
   969  0008F4  D7D3               	goto	l1326
   970                           
   971                           ;lcddisplay.c: 392: }
   972                           ;lcddisplay.c: 393: return;
   973  0008F6  0012               	return		;funcret
   974  0008F8                     __end_of_putLCD:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           indf0	equ	0xFEF
   981                           fsr0h	equ	0xFEA
   982                           fsr0l	equ	0xFE9
   983                           indf2	equ	0xFDF
   984                           fsr2h	equ	0xFDA
   985                           fsr2l	equ	0xFD9
   986                           status	equ	0xFD8
   987                           
   988 ;; *************** function _WriteDataLCD *****************
   989 ;; Defined at:
   990 ;;		line 396 in file "lcddisplay.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  data            1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  data            1   32[COMRAM] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;		None               void
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1004 ;;      Params:         0       0       0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0
  1007 ;;      Totals:         1       0       0       0       0       0       0
  1008 ;;Total ram usage:        1 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    4
  1011 ;; This function calls:
  1012 ;;		_DelayFor18TCY
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;;		_LCDInitialDisplay
  1016 ;;		_putLCD
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text7
  1021  000AFC                     __ptext7:
  1022                           	opt stack 0
  1023  000AFC                     _WriteDataLCD:
  1024                           	opt stack 24
  1025                           
  1026                           ;incstack = 0
  1027                           ;WriteDataLCD@data stored from wreg
  1028  000AFC  6E21               	movwf	WriteDataLCD@data,c
  1029                           
  1030                           ;lcddisplay.c: 415: TRISD &= 0xf0;
  1031  000AFE  0EF0               	movlw	240
  1032  000B00  1695               	andwf	3989,f,c	;volatile
  1033                           
  1034                           ;lcddisplay.c: 416: PORTD &= 0xf0;
  1035  000B02  0EF0               	movlw	240
  1036  000B04  1683               	andwf	3971,f,c	;volatile
  1037                           
  1038                           ;lcddisplay.c: 417: PORTD |= ((data>>4)&0x0f);
  1039  000B06  3821               	swapf	WriteDataLCD@data,w,c
  1040  000B08  0B0F               	andlw	15
  1041  000B0A  0B0F               	andlw	15
  1042  000B0C  1283               	iorwf	3971,f,c	;volatile
  1043                           
  1044                           ;lcddisplay.c: 419: LATEbits.LATE0 = 1;
  1045  000B0E  808D               	bsf	3981,0,c	;volatile
  1046                           
  1047                           ;lcddisplay.c: 420: LATEbits.LATE1 = 0;
  1048  000B10  928D               	bcf	3981,1,c	;volatile
  1049                           
  1050                           ;lcddisplay.c: 421: DelayFor18TCY();
  1051  000B12  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1052                           
  1053                           ;lcddisplay.c: 422: LATEbits.LATE2 = 1;
  1054  000B16  848D               	bsf	3981,2,c	;volatile
  1055                           
  1056                           ;lcddisplay.c: 423: DelayFor18TCY();
  1057  000B18  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1058                           
  1059                           ;lcddisplay.c: 424: LATEbits.LATE2 = 0;
  1060  000B1C  948D               	bcf	3981,2,c	;volatile
  1061                           
  1062                           ;lcddisplay.c: 429: PORTD &= 0xf0;
  1063  000B1E  0EF0               	movlw	240
  1064  000B20  1683               	andwf	3971,f,c	;volatile
  1065                           
  1066                           ;lcddisplay.c: 430: PORTD |= (data&0x0f);
  1067  000B22  5021               	movf	WriteDataLCD@data,w,c
  1068  000B24  0B0F               	andlw	15
  1069  000B26  1283               	iorwf	3971,f,c	;volatile
  1070                           
  1071                           ;lcddisplay.c: 432: DelayFor18TCY();
  1072  000B28  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1073                           
  1074                           ;lcddisplay.c: 433: LATEbits.LATE2 = 1;
  1075  000B2C  848D               	bsf	3981,2,c	;volatile
  1076                           
  1077                           ;lcddisplay.c: 434: DelayFor18TCY();
  1078  000B2E  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1079                           
  1080                           ;lcddisplay.c: 435: LATEbits.LATE2 = 0;
  1081  000B32  948D               	bcf	3981,2,c	;volatile
  1082                           
  1083                           ;lcddisplay.c: 439: TRISD |= 0x0f;
  1084  000B34  0E0F               	movlw	15
  1085  000B36  1295               	iorwf	3989,f,c	;volatile
  1086  000B38  0012               	return	
  1087                           
  1088                           ;lcddisplay.c: 443: return;
  1089  000B3A  0012               	return		;funcret
  1090  000B3C                     __end_of_WriteDataLCD:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           indf0	equ	0xFEF
  1097                           fsr0h	equ	0xFEA
  1098                           fsr0l	equ	0xFE9
  1099                           indf2	equ	0xFDF
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _SetLCDCGRamAddr *****************
  1105 ;; Defined at:
  1106 ;;		line 326 in file "lcddisplay.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  CGaddr          1    wreg     unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  CGaddr          1   35[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1120 ;;      Params:         0       0       0       0       0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0
  1122 ;;      Temps:          3       0       0       0       0       0       0
  1123 ;;      Totals:         4       0       0       0       0       0       0
  1124 ;;Total ram usage:        4 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    4
  1127 ;; This function calls:
  1128 ;;		_DelayFor18TCY
  1129 ;; This function is called by:
  1130 ;;		_LCDInitialDisplay
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text8
  1135  0009B2                     __ptext8:
  1136                           	opt stack 0
  1137  0009B2                     _SetLCDCGRamAddr:
  1138                           	opt stack 25
  1139                           
  1140                           ;incstack = 0
  1141                           ;SetLCDCGRamAddr@CGaddr stored from wreg
  1142  0009B2  6E24               	movwf	SetLCDCGRamAddr@CGaddr,c
  1143                           
  1144                           ;lcddisplay.c: 345: TRISD &= 0xf0;
  1145  0009B4  0EF0               	movlw	240
  1146  0009B6  1695               	andwf	3989,f,c	;volatile
  1147                           
  1148                           ;lcddisplay.c: 346: PORTD &= 0xf0;
  1149  0009B8  0EF0               	movlw	240
  1150  0009BA  1683               	andwf	3971,f,c	;volatile
  1151                           
  1152                           ;lcddisplay.c: 347: PORTD |= (((CGaddr |0b01000000)>>4) & 0x0f);
  1153  0009BC  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1154  0009BE  6E21               	movwf	??_SetLCDCGRamAddr& (0+255),c
  1155  0009C0  6A22               	clrf	(??_SetLCDCGRamAddr+1)& (0+255),c
  1156  0009C2  0E40               	movlw	64
  1157  0009C4  1221               	iorwf	??_SetLCDCGRamAddr,f,c
  1158  0009C6  0E00               	movlw	0
  1159  0009C8  1222               	iorwf	??_SetLCDCGRamAddr+1,f,c
  1160  0009CA  0E04               	movlw	4
  1161  0009CC  6E23               	movwf	(??_SetLCDCGRamAddr+2)& (0+255),c
  1162  0009CE                     u175:
  1163  0009CE  3422               	rlcf	??_SetLCDCGRamAddr+1,w,c
  1164  0009D0  3222               	rrcf	??_SetLCDCGRamAddr+1,f,c
  1165  0009D2  3221               	rrcf	??_SetLCDCGRamAddr,f,c
  1166  0009D4  2E23               	decfsz	(??_SetLCDCGRamAddr+2)& (0+255),f,c
  1167  0009D6  D7FB               	goto	u175
  1168  0009D8  5021               	movf	??_SetLCDCGRamAddr,w,c
  1169  0009DA  0B0F               	andlw	15
  1170  0009DC  1283               	iorwf	3971,f,c	;volatile
  1171                           
  1172                           ;lcddisplay.c: 349: LATEbits.LATE1 = 0;
  1173  0009DE  928D               	bcf	3981,1,c	;volatile
  1174                           
  1175                           ;lcddisplay.c: 350: LATEbits.LATE0 = 0;
  1176  0009E0  908D               	bcf	3981,0,c	;volatile
  1177                           
  1178                           ;lcddisplay.c: 351: DelayFor18TCY();
  1179  0009E2  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1180                           
  1181                           ;lcddisplay.c: 352: LATEbits.LATE2 = 1;
  1182  0009E6  848D               	bsf	3981,2,c	;volatile
  1183                           
  1184                           ;lcddisplay.c: 353: DelayFor18TCY();
  1185  0009E8  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1186                           
  1187                           ;lcddisplay.c: 354: LATEbits.LATE2 = 0;
  1188  0009EC  948D               	bcf	3981,2,c	;volatile
  1189                           
  1190                           ;lcddisplay.c: 359: PORTD &= 0xf0;
  1191  0009EE  0EF0               	movlw	240
  1192  0009F0  1683               	andwf	3971,f,c	;volatile
  1193                           
  1194                           ;lcddisplay.c: 360: PORTD |= (CGaddr&0x0f);
  1195  0009F2  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1196  0009F4  0B0F               	andlw	15
  1197  0009F6  1283               	iorwf	3971,f,c	;volatile
  1198                           
  1199                           ;lcddisplay.c: 362: DelayFor18TCY();
  1200  0009F8  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1201                           
  1202                           ;lcddisplay.c: 363: LATEbits.LATE2 = 1;
  1203  0009FC  848D               	bsf	3981,2,c	;volatile
  1204                           
  1205                           ;lcddisplay.c: 364: DelayFor18TCY();
  1206  0009FE  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1207                           
  1208                           ;lcddisplay.c: 365: LATEbits.LATE2 = 0;
  1209  000A02  948D               	bcf	3981,2,c	;volatile
  1210                           
  1211                           ;lcddisplay.c: 369: TRISD |= 0x0f;
  1212  000A04  0E0F               	movlw	15
  1213  000A06  1295               	iorwf	3989,f,c	;volatile
  1214  000A08  0012               	return	
  1215                           
  1216                           ;lcddisplay.c: 373: return;
  1217  000A0A  0012               	return		;funcret
  1218  000A0C                     __end_of_SetLCDCGRamAddr:
  1219                           	opt stack 0
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           indf0	equ	0xFEF
  1225                           fsr0h	equ	0xFEA
  1226                           fsr0l	equ	0xFE9
  1227                           indf2	equ	0xFDF
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _InitPorts *****************
  1233 ;; Defined at:
  1234 ;;		line 42 in file "ports.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1248 ;;      Params:         0       0       0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0
  1251 ;;      Totals:         0       0       0       0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    2
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text9
  1263  000C1E                     __ptext9:
  1264                           	opt stack 0
  1265  000C1E                     _InitPorts:
  1266                           	opt stack 28
  1267                           
  1268                           ;ports.c: 44: ANSEL = 0;
  1269                           
  1270                           ;incstack = 0
  1271  000C1E  0E00               	movlw	0
  1272  000C20  6E7E               	movwf	3966,c	;volatile
  1273                           
  1274                           ;ports.c: 45: ANSELH = 0;
  1275  000C22  0E00               	movlw	0
  1276  000C24  6E7F               	movwf	3967,c	;volatile
  1277                           
  1278                           ;ports.c: 57: TRISA = 0b11100000;
  1279  000C26  0EE0               	movlw	224
  1280  000C28  6E92               	movwf	3986,c	;volatile
  1281                           
  1282                           ;ports.c: 58: ANSEL = 0b11100000;
  1283  000C2A  0EE0               	movlw	224
  1284  000C2C  6E7E               	movwf	3966,c	;volatile
  1285                           
  1286                           ;ports.c: 70: INTCON2bits.RBPU = 0;
  1287  000C2E  9EF1               	bcf	intcon2,7,c	;volatile
  1288                           
  1289                           ;ports.c: 71: WPUBbits.WPUB0 = 1;
  1290  000C30  807C               	bsf	3964,0,c	;volatile
  1291                           
  1292                           ;ports.c: 73: TRISB = 0b00110111;
  1293  000C32  0E37               	movlw	55
  1294  000C34  6E93               	movwf	3987,c	;volatile
  1295                           
  1296                           ;ports.c: 77: TRISCbits.RC2 = 0;
  1297  000C36  9494               	bcf	3988,2,c	;volatile
  1298                           
  1299                           ;ports.c: 90: TRISD = 0b00010000;
  1300  000C38  0E10               	movlw	16
  1301  000C3A  6E95               	movwf	3989,c	;volatile
  1302  000C3C  0012               	return		;funcret
  1303  000C3E                     __end_of_InitPorts:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           tblptrh	equ	0xFF7
  1307                           tblptrl	equ	0xFF6
  1308                           tablat	equ	0xFF5
  1309                           intcon2	equ	0xFF1
  1310                           indf0	equ	0xFEF
  1311                           fsr0h	equ	0xFEA
  1312                           fsr0l	equ	0xFE9
  1313                           indf2	equ	0xFDF
  1314                           fsr2h	equ	0xFDA
  1315                           fsr2l	equ	0xFD9
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _InitMotorPWM *****************
  1319 ;; Defined at:
  1320 ;;		line 106 in file "ports.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;		None               void
  1327 ;; Registers used:
  1328 ;;		wreg, status,2
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    2
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text10
  1349  000C7C                     __ptext10:
  1350                           	opt stack 0
  1351  000C7C                     _InitMotorPWM:
  1352                           	opt stack 28
  1353                           
  1354                           ;ports.c: 108: CCP1CON = 0b00001100;
  1355                           
  1356                           ;incstack = 0
  1357  000C7C  0E0C               	movlw	12
  1358  000C7E  6EBD               	movwf	4029,c	;volatile
  1359                           
  1360                           ;ports.c: 111: PR2 = 255;
  1361  000C80  68CB               	setf	4043,c	;volatile
  1362                           
  1363                           ;ports.c: 114: T2CON = 0b00001100;
  1364  000C82  0E0C               	movlw	12
  1365  000C84  6ECA               	movwf	4042,c	;volatile
  1366                           
  1367                           ;ports.c: 117: CCPR1L = 0;
  1368  000C86  0E00               	movlw	0
  1369  000C88  6EBE               	movwf	4030,c	;volatile
  1370  000C8A  0012               	return		;funcret
  1371  000C8C                     __end_of_InitMotorPWM:
  1372                           	opt stack 0
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           intcon2	equ	0xFF1
  1378                           indf0	equ	0xFEF
  1379                           fsr0h	equ	0xFEA
  1380                           fsr0l	equ	0xFE9
  1381                           indf2	equ	0xFDF
  1382                           fsr2h	equ	0xFDA
  1383                           fsr2l	equ	0xFD9
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _InitLCD *****************
  1387 ;; Defined at:
  1388 ;;		line 47 in file "lcddisplay.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1402 ;;      Params:         0       0       0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    6
  1409 ;; This function calls:
  1410 ;;		_BusyLCD
  1411 ;;		_OpenLCD
  1412 ;;		_WriteCmdLCD
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text11
  1419  000A60                     __ptext11:
  1420                           	opt stack 0
  1421  000A60                     _InitLCD:
  1422                           	opt stack 24
  1423                           
  1424                           ;lcddisplay.c: 48: OpenLCD(0b00101100 & 0b00111000);
  1425                           
  1426                           ;incstack = 0
  1427  000A60  0E28               	movlw	40
  1428  000A62  EC0B  F003         	call	_OpenLCD
  1429                           
  1430                           ;lcddisplay.c: 49: while(BusyLCD());
  1431  000A66  D000               	goto	l1198
  1432  000A68                     l1198:
  1433  000A68  ECDC  F005         	call	_BusyLCD	;wreg free
  1434  000A6C  0900               	iorlw	0
  1435  000A6E  A4D8               	btfss	status,2,c
  1436  000A70  D7FB               	goto	l1198
  1437                           
  1438                           ;lcddisplay.c: 50: WriteCmdLCD(0x06);
  1439  000A72  0E06               	movlw	6
  1440  000A74  EC9E  F005         	call	_WriteCmdLCD
  1441                           
  1442                           ;lcddisplay.c: 51: while(BusyLCD());
  1443  000A78  D000               	goto	l1202
  1444  000A7A                     l1202:
  1445  000A7A  ECDC  F005         	call	_BusyLCD	;wreg free
  1446  000A7E  0900               	iorlw	0
  1447  000A80  A4D8               	btfss	status,2,c
  1448  000A82  D7FB               	goto	l1202
  1449                           
  1450                           ;lcddisplay.c: 52: WriteCmdLCD(0x0C);
  1451  000A84  0E0C               	movlw	12
  1452  000A86  EC9E  F005         	call	_WriteCmdLCD
  1453                           
  1454                           ;lcddisplay.c: 53: while(BusyLCD());
  1455  000A8A  D000               	goto	l1206
  1456  000A8C                     l1206:
  1457  000A8C  ECDC  F005         	call	_BusyLCD	;wreg free
  1458  000A90  0900               	iorlw	0
  1459  000A92  A4D8               	btfss	status,2,c
  1460  000A94  D7FB               	goto	l1206
  1461                           
  1462                           ;lcddisplay.c: 54: WriteCmdLCD(0x01);
  1463  000A96  0E01               	movlw	1
  1464  000A98  EC9E  F005         	call	_WriteCmdLCD
  1465                           
  1466                           ;lcddisplay.c: 55: while(BusyLCD());
  1467  000A9C  D000               	goto	l1210
  1468  000A9E                     l1210:
  1469  000A9E  ECDC  F005         	call	_BusyLCD	;wreg free
  1470  000AA2  0900               	iorlw	0
  1471  000AA4  A4D8               	btfss	status,2,c
  1472  000AA6  D7FB               	goto	l1210
  1473                           
  1474                           ;lcddisplay.c: 56: WriteCmdLCD(66);
  1475  000AA8  0E42               	movlw	66
  1476  000AAA  EC9E  F005         	call	_WriteCmdLCD
  1477  000AAE  0012               	return		;funcret
  1478  000AB0                     __end_of_InitLCD:
  1479                           	opt stack 0
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           intcon2	equ	0xFF1
  1485                           indf0	equ	0xFEF
  1486                           fsr0h	equ	0xFEA
  1487                           fsr0l	equ	0xFE9
  1488                           indf2	equ	0xFDF
  1489                           fsr2h	equ	0xFDA
  1490                           fsr2l	equ	0xFD9
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _OpenLCD *****************
  1494 ;; Defined at:
  1495 ;;		line 65 in file "lcddisplay.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  lcdtype         1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  lcdtype         1   36[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;		None               void
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1509 ;;      Params:         0       0       0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0
  1512 ;;      Totals:         1       0       0       0       0       0       0
  1513 ;;Total ram usage:        1 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    5
  1516 ;; This function calls:
  1517 ;;		_BusyLCD
  1518 ;;		_BusyXLCD
  1519 ;;		_Delay100TCYx
  1520 ;;		_Delay10KTCYx
  1521 ;;		_SetLCDDDRamAddr
  1522 ;;		_WriteCmdLCD
  1523 ;; This function is called by:
  1524 ;;		_InitLCD
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text12
  1529  000616                     __ptext12:
  1530                           	opt stack 0
  1531  000616                     _OpenLCD:
  1532                           	opt stack 24
  1533                           
  1534                           ;incstack = 0
  1535                           ;OpenLCD@lcdtype stored from wreg
  1536  000616  6E25               	movwf	OpenLCD@lcdtype,c
  1537                           
  1538                           ;lcddisplay.c: 68: Delay100TCYx(38);
  1539  000618  0E26               	movlw	38
  1540  00061A  EC35  F006         	call	_Delay100TCYx
  1541                           
  1542                           ;lcddisplay.c: 79: PORTD &= 0xf0;
  1543  00061E  0EF0               	movlw	240
  1544  000620  1683               	andwf	3971,f,c	;volatile
  1545                           
  1546                           ;lcddisplay.c: 80: TRISD &= 0xF0;
  1547  000622  0EF0               	movlw	240
  1548  000624  1695               	andwf	3989,f,c	;volatile
  1549                           
  1550                           ;lcddisplay.c: 83: TRISEbits.TRISE1 = 0;
  1551  000626  9296               	bcf	3990,1,c	;volatile
  1552                           
  1553                           ;lcddisplay.c: 84: TRISEbits.TRISE0 = 0;
  1554  000628  9096               	bcf	3990,0,c	;volatile
  1555                           
  1556                           ;lcddisplay.c: 85: TRISEbits.TRISE2 = 0;
  1557  00062A  9496               	bcf	3990,2,c	;volatile
  1558                           
  1559                           ;lcddisplay.c: 86: LATEbits.LATE1 = 0;
  1560  00062C  928D               	bcf	3981,1,c	;volatile
  1561                           
  1562                           ;lcddisplay.c: 87: LATEbits.LATE0 = 0;
  1563  00062E  908D               	bcf	3981,0,c	;volatile
  1564                           
  1565                           ;lcddisplay.c: 88: LATEbits.LATE2 = 0;
  1566  000630  948D               	bcf	3981,2,c	;volatile
  1567                           
  1568                           ;lcddisplay.c: 91: Delay100TCYx(38);
  1569  000632  0E26               	movlw	38
  1570  000634  EC35  F006         	call	_Delay100TCYx
  1571                           
  1572                           ;lcddisplay.c: 94: WriteCmdLCD(0x30);
  1573  000638  0E30               	movlw	48
  1574  00063A  EC9E  F005         	call	_WriteCmdLCD
  1575                           
  1576                           ;lcddisplay.c: 95: Delay10KTCYx(0x05);
  1577  00063E  0E05               	movlw	5
  1578  000640  EC1F  F006         	call	_Delay10KTCYx
  1579                           
  1580                           ;lcddisplay.c: 97: WriteCmdLCD(0x30);
  1581  000644  0E30               	movlw	48
  1582  000646  EC9E  F005         	call	_WriteCmdLCD
  1583                           
  1584                           ;lcddisplay.c: 98: Delay10KTCYx(0x01);
  1585  00064A  0E01               	movlw	1
  1586  00064C  EC1F  F006         	call	_Delay10KTCYx
  1587                           
  1588                           ;lcddisplay.c: 101: WriteCmdLCD(0x32);
  1589  000650  0E32               	movlw	50
  1590  000652  EC9E  F005         	call	_WriteCmdLCD
  1591                           
  1592                           ;lcddisplay.c: 102: while( BusyXLCD() );
  1593  000656  D000               	goto	l1154
  1594  000658                     l1154:
  1595  000658  ECBE  F005         	call	_BusyXLCD	;wreg free
  1596  00065C  0900               	iorlw	0
  1597  00065E  B4D8               	btfsc	status,2,c
  1598  000660  D002               	goto	l1156
  1599  000662  D7FA               	goto	l1154
  1600                           
  1601                           ;lcddisplay.c: 107: while(BusyLCD());
  1602  000664  D000               	goto	l1156
  1603  000666                     l1156:
  1604  000666  ECDC  F005         	call	_BusyLCD	;wreg free
  1605  00066A  0900               	iorlw	0
  1606  00066C  A4D8               	btfss	status,2,c
  1607  00066E  D7FB               	goto	l1156
  1608                           
  1609                           ;lcddisplay.c: 108: WriteCmdLCD(lcdtype);
  1610  000670  5025               	movf	OpenLCD@lcdtype,w,c
  1611  000672  EC9E  F005         	call	_WriteCmdLCD
  1612                           
  1613                           ;lcddisplay.c: 111: while(BusyLCD());
  1614  000676  D000               	goto	l1160
  1615  000678                     l1160:
  1616  000678  ECDC  F005         	call	_BusyLCD	;wreg free
  1617  00067C  0900               	iorlw	0
  1618  00067E  A4D8               	btfss	status,2,c
  1619  000680  D7FB               	goto	l1160
  1620                           
  1621                           ;lcddisplay.c: 112: WriteCmdLCD(0b00001011&0b00001101&0b00001110);
  1622  000682  0E08               	movlw	8
  1623  000684  EC9E  F005         	call	_WriteCmdLCD
  1624                           
  1625                           ;lcddisplay.c: 113: while(BusyLCD());
  1626  000688  D000               	goto	l1164
  1627  00068A                     l1164:
  1628  00068A  ECDC  F005         	call	_BusyLCD	;wreg free
  1629  00068E  0900               	iorlw	0
  1630  000690  A4D8               	btfss	status,2,c
  1631  000692  D7FB               	goto	l1164
  1632                           
  1633                           ;lcddisplay.c: 114: WriteCmdLCD(0b00001111&0b00001111&0b00001111);
  1634  000694  0E0F               	movlw	15
  1635  000696  EC9E  F005         	call	_WriteCmdLCD
  1636                           
  1637                           ;lcddisplay.c: 117: while(BusyLCD());
  1638  00069A  D000               	goto	l1168
  1639  00069C                     l1168:
  1640  00069C  ECDC  F005         	call	_BusyLCD	;wreg free
  1641  0006A0  0900               	iorlw	0
  1642  0006A2  A4D8               	btfss	status,2,c
  1643  0006A4  D7FB               	goto	l1168
  1644                           
  1645                           ;lcddisplay.c: 118: WriteCmdLCD(0x01);
  1646  0006A6  0E01               	movlw	1
  1647  0006A8  EC9E  F005         	call	_WriteCmdLCD
  1648                           
  1649                           ;lcddisplay.c: 121: while(BusyLCD());
  1650  0006AC  D000               	goto	l1172
  1651  0006AE                     l1172:
  1652  0006AE  ECDC  F005         	call	_BusyLCD	;wreg free
  1653  0006B2  0900               	iorlw	0
  1654  0006B4  A4D8               	btfss	status,2,c
  1655  0006B6  D7FB               	goto	l1172
  1656                           
  1657                           ;lcddisplay.c: 122: WriteCmdLCD(0b00000100);
  1658  0006B8  0E04               	movlw	4
  1659  0006BA  EC9E  F005         	call	_WriteCmdLCD
  1660                           
  1661                           ;lcddisplay.c: 125: while(BusyLCD());
  1662  0006BE  D000               	goto	l1176
  1663  0006C0                     l1176:
  1664  0006C0  ECDC  F005         	call	_BusyLCD	;wreg free
  1665  0006C4  0900               	iorlw	0
  1666  0006C6  A4D8               	btfss	status,2,c
  1667  0006C8  D7FB               	goto	l1176
  1668                           
  1669                           ;lcddisplay.c: 126: SetLCDDDRamAddr(0x80);
  1670  0006CA  0E80               	movlw	128
  1671  0006CC  EC06  F005         	call	_SetLCDDDRamAddr
  1672  0006D0  0012               	return	
  1673                           
  1674                           ;lcddisplay.c: 128: return;
  1675  0006D2  0012               	return		;funcret
  1676  0006D4                     __end_of_OpenLCD:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           intcon2	equ	0xFF1
  1683                           indf0	equ	0xFEF
  1684                           fsr0h	equ	0xFEA
  1685                           fsr0l	equ	0xFE9
  1686                           indf2	equ	0xFDF
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _WriteCmdLCD *****************
  1692 ;; Defined at:
  1693 ;;		line 131 in file "lcddisplay.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  cmd             1    wreg     unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  cmd             1   32[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;		None               void
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1707 ;;      Params:         0       0       0       0       0       0       0
  1708 ;;      Locals:         1       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0
  1710 ;;      Totals:         1       0       0       0       0       0       0
  1711 ;;Total ram usage:        1 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		_DelayFor18TCY
  1716 ;; This function is called by:
  1717 ;;		_LCDInitialDisplay
  1718 ;;		_InitLCD
  1719 ;;		_OpenLCD
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text13
  1724  000B3C                     __ptext13:
  1725                           	opt stack 0
  1726  000B3C                     _WriteCmdLCD:
  1727                           	opt stack 25
  1728                           
  1729                           ;incstack = 0
  1730                           ;WriteCmdLCD@cmd stored from wreg
  1731  000B3C  6E21               	movwf	WriteCmdLCD@cmd,c
  1732                           
  1733                           ;lcddisplay.c: 196: TRISD &= 0xf0;
  1734  000B3E  0EF0               	movlw	240
  1735  000B40  1695               	andwf	3989,f,c	;volatile
  1736                           
  1737                           ;lcddisplay.c: 197: PORTD &= 0xf0;
  1738  000B42  0EF0               	movlw	240
  1739  000B44  1683               	andwf	3971,f,c	;volatile
  1740                           
  1741                           ;lcddisplay.c: 198: PORTD |= (cmd>>4)&0x0f;
  1742  000B46  3821               	swapf	WriteCmdLCD@cmd,w,c
  1743  000B48  0B0F               	andlw	15
  1744  000B4A  0B0F               	andlw	15
  1745  000B4C  1283               	iorwf	3971,f,c	;volatile
  1746                           
  1747                           ;lcddisplay.c: 200: LATEbits.LATE1 = 0;
  1748  000B4E  928D               	bcf	3981,1,c	;volatile
  1749                           
  1750                           ;lcddisplay.c: 201: LATEbits.LATE0 = 0;
  1751  000B50  908D               	bcf	3981,0,c	;volatile
  1752                           
  1753                           ;lcddisplay.c: 202: DelayFor18TCY();
  1754  000B52  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1755                           
  1756                           ;lcddisplay.c: 203: LATEbits.LATE2 = 1;
  1757  000B56  848D               	bsf	3981,2,c	;volatile
  1758                           
  1759                           ;lcddisplay.c: 204: DelayFor18TCY();
  1760  000B58  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1761                           
  1762                           ;lcddisplay.c: 205: LATEbits.LATE2 = 0;
  1763  000B5C  948D               	bcf	3981,2,c	;volatile
  1764                           
  1765                           ;lcddisplay.c: 210: PORTD &= 0xf0;
  1766  000B5E  0EF0               	movlw	240
  1767  000B60  1683               	andwf	3971,f,c	;volatile
  1768                           
  1769                           ;lcddisplay.c: 211: PORTD |= cmd&0x0f;
  1770  000B62  5021               	movf	WriteCmdLCD@cmd,w,c
  1771  000B64  0B0F               	andlw	15
  1772  000B66  1283               	iorwf	3971,f,c	;volatile
  1773                           
  1774                           ;lcddisplay.c: 213: DelayFor18TCY();
  1775  000B68  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1776                           
  1777                           ;lcddisplay.c: 214: LATEbits.LATE2 = 1;
  1778  000B6C  848D               	bsf	3981,2,c	;volatile
  1779                           
  1780                           ;lcddisplay.c: 215: DelayFor18TCY();
  1781  000B6E  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1782                           
  1783                           ;lcddisplay.c: 216: LATEbits.LATE2 = 0;
  1784  000B72  948D               	bcf	3981,2,c	;volatile
  1785                           
  1786                           ;lcddisplay.c: 220: TRISD |= 0x0f;
  1787  000B74  0E0F               	movlw	15
  1788  000B76  1295               	iorwf	3989,f,c	;volatile
  1789  000B78  0012               	return	
  1790                           
  1791                           ;lcddisplay.c: 224: return;
  1792  000B7A  0012               	return		;funcret
  1793  000B7C                     __end_of_WriteCmdLCD:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           intcon2	equ	0xFF1
  1800                           indf0	equ	0xFEF
  1801                           fsr0h	equ	0xFEA
  1802                           fsr0l	equ	0xFE9
  1803                           indf2	equ	0xFDF
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function _SetLCDDDRamAddr *****************
  1809 ;; Defined at:
  1810 ;;		line 276 in file "lcddisplay.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  DDaddr          1    wreg     unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  DDaddr          1   35[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;		None               void
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         0       0       0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0
  1826 ;;      Temps:          3       0       0       0       0       0       0
  1827 ;;      Totals:         4       0       0       0       0       0       0
  1828 ;;Total ram usage:        4 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		_DelayFor18TCY
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;;		_LCDInitialDisplay
  1836 ;;		_OpenLCD
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text14
  1841  000A0C                     __ptext14:
  1842                           	opt stack 0
  1843  000A0C                     _SetLCDDDRamAddr:
  1844                           	opt stack 26
  1845                           
  1846                           ;incstack = 0
  1847                           ;SetLCDDDRamAddr@DDaddr stored from wreg
  1848  000A0C  6E24               	movwf	SetLCDDDRamAddr@DDaddr,c
  1849                           
  1850                           ;lcddisplay.c: 295: TRISD &= 0xf0;
  1851  000A0E  0EF0               	movlw	240
  1852  000A10  1695               	andwf	3989,f,c	;volatile
  1853                           
  1854                           ;lcddisplay.c: 296: PORTD &= 0xf0;
  1855  000A12  0EF0               	movlw	240
  1856  000A14  1683               	andwf	3971,f,c	;volatile
  1857                           
  1858                           ;lcddisplay.c: 297: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1859  000A16  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1860  000A18  6E21               	movwf	??_SetLCDDDRamAddr& (0+255),c
  1861  000A1A  6A22               	clrf	(??_SetLCDDDRamAddr+1)& (0+255),c
  1862  000A1C  8E21               	bsf	??_SetLCDDDRamAddr,7,c
  1863  000A1E  0E04               	movlw	4
  1864  000A20  6E23               	movwf	(??_SetLCDDDRamAddr+2)& (0+255),c
  1865  000A22                     u85:
  1866  000A22  3422               	rlcf	??_SetLCDDDRamAddr+1,w,c
  1867  000A24  3222               	rrcf	??_SetLCDDDRamAddr+1,f,c
  1868  000A26  3221               	rrcf	??_SetLCDDDRamAddr,f,c
  1869  000A28  2E23               	decfsz	(??_SetLCDDDRamAddr+2)& (0+255),f,c
  1870  000A2A  D7FB               	goto	u85
  1871  000A2C  5021               	movf	??_SetLCDDDRamAddr,w,c
  1872  000A2E  0B0F               	andlw	15
  1873  000A30  1283               	iorwf	3971,f,c	;volatile
  1874                           
  1875                           ;lcddisplay.c: 299: LATEbits.LATE1 = 0;
  1876  000A32  928D               	bcf	3981,1,c	;volatile
  1877                           
  1878                           ;lcddisplay.c: 300: LATEbits.LATE0 = 0;
  1879  000A34  908D               	bcf	3981,0,c	;volatile
  1880                           
  1881                           ;lcddisplay.c: 301: DelayFor18TCY();
  1882  000A36  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1883                           
  1884                           ;lcddisplay.c: 302: LATEbits.LATE2 = 1;
  1885  000A3A  848D               	bsf	3981,2,c	;volatile
  1886                           
  1887                           ;lcddisplay.c: 303: DelayFor18TCY();
  1888  000A3C  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1889                           
  1890                           ;lcddisplay.c: 304: LATEbits.LATE2 = 0;
  1891  000A40  948D               	bcf	3981,2,c	;volatile
  1892                           
  1893                           ;lcddisplay.c: 309: PORTD &= 0xf0;
  1894  000A42  0EF0               	movlw	240
  1895  000A44  1683               	andwf	3971,f,c	;volatile
  1896                           
  1897                           ;lcddisplay.c: 310: PORTD |= (DDaddr&0x0f);
  1898  000A46  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1899  000A48  0B0F               	andlw	15
  1900  000A4A  1283               	iorwf	3971,f,c	;volatile
  1901                           
  1902                           ;lcddisplay.c: 312: DelayFor18TCY();
  1903  000A4C  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1904                           
  1905                           ;lcddisplay.c: 313: LATEbits.LATE2 = 1;
  1906  000A50  848D               	bsf	3981,2,c	;volatile
  1907                           
  1908                           ;lcddisplay.c: 314: DelayFor18TCY();
  1909  000A52  EC61  F006         	call	_DelayFor18TCY	;wreg free
  1910                           
  1911                           ;lcddisplay.c: 315: LATEbits.LATE2 = 0;
  1912  000A56  948D               	bcf	3981,2,c	;volatile
  1913                           
  1914                           ;lcddisplay.c: 319: TRISD |= 0x0f;
  1915  000A58  0E0F               	movlw	15
  1916  000A5A  1295               	iorwf	3989,f,c	;volatile
  1917  000A5C  0012               	return	
  1918                           
  1919                           ;lcddisplay.c: 323: return;
  1920  000A5E  0012               	return		;funcret
  1921  000A60                     __end_of_SetLCDDDRamAddr:
  1922                           	opt stack 0
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           intcon2	equ	0xFF1
  1928                           indf0	equ	0xFEF
  1929                           fsr0h	equ	0xFEA
  1930                           fsr0l	equ	0xFE9
  1931                           indf2	equ	0xFDF
  1932                           fsr2h	equ	0xFDA
  1933                           fsr2l	equ	0xFD9
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function _Delay10KTCYx *****************
  1937 ;; Defined at:
  1938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  unit            1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  unit            1   32[COMRAM] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0       0       0
  1954 ;;      Temps:          1       0       0       0       0       0       0
  1955 ;;      Totals:         2       0       0       0       0       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_OpenLCD
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text15
  1967  000C3E                     __ptext15:
  1968                           	opt stack 0
  1969  000C3E                     _Delay10KTCYx:
  1970                           	opt stack 26
  1971                           
  1972                           ;incstack = 0
  1973                           ;Delay10KTCYx@unit stored from wreg
  1974  000C3E  6E21               	movwf	Delay10KTCYx@unit,c
  1975  000C40  0E0D               	movlw	13
  1976  000C42  6E20               	movwf	??_Delay10KTCYx& (0+255),c
  1977  000C44  0EFC               	movlw	252
  1978  000C46                     u507:
  1979  000C46  2EE8               	decfsz	wreg,f,c
  1980  000C48  D7FE               	goto	u507
  1981  000C4A  2E20               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1982  000C4C  D7FC               	goto	u507
  1983  000C4E  2E21               	decfsz	Delay10KTCYx@unit,f,c
  1984  000C50  D7F7               	goto	l1030
  1985  000C52  0012               	return	
  1986  000C54  0012               	return		;funcret
  1987  000C56                     __end_of_Delay10KTCYx:
  1988                           	opt stack 0
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           intcon2	equ	0xFF1
  1994                           indf0	equ	0xFEF
  1995                           fsr0h	equ	0xFEA
  1996                           fsr0l	equ	0xFE9
  1997                           wreg	equ	0xFE8
  1998                           indf2	equ	0xFDF
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _Delay100TCYx *****************
  2004 ;; Defined at:
  2005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  unit            1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  unit            1   31[COMRAM] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2019 ;;      Params:         0       0       0       0       0       0       0
  2020 ;;      Locals:         1       0       0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0
  2022 ;;      Totals:         1       0       0       0       0       0       0
  2023 ;;Total ram usage:        1 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    2
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_OpenLCD
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text16
  2034  000C6A                     __ptext16:
  2035                           	opt stack 0
  2036  000C6A                     _Delay100TCYx:
  2037                           	opt stack 26
  2038                           
  2039                           ;incstack = 0
  2040                           ;Delay100TCYx@unit stored from wreg
  2041  000C6A  6E20               	movwf	Delay100TCYx@unit,c
  2042  000C6C  0E21               	movlw	33
  2043  000C6E                     u517:
  2044  000C6E  2EE8               	decfsz	wreg,f,c
  2045  000C70  D7FE               	goto	u517
  2046  000C72  F000               	nop	
  2047  000C74  2E20               	decfsz	Delay100TCYx@unit,f,c
  2048  000C76  D7FA               	goto	l1026
  2049  000C78  0012               	return	
  2050  000C7A  0012               	return		;funcret
  2051  000C7C                     __end_of_Delay100TCYx:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           intcon2	equ	0xFF1
  2058                           indf0	equ	0xFEF
  2059                           fsr0h	equ	0xFEA
  2060                           fsr0l	equ	0xFE9
  2061                           wreg	equ	0xFE8
  2062                           indf2	equ	0xFDF
  2063                           fsr2h	equ	0xFDA
  2064                           fsr2l	equ	0xFD9
  2065                           status	equ	0xFD8
  2066                           
  2067 ;; *************** function _BusyXLCD *****************
  2068 ;; Defined at:
  2069 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\XLCD\busyxlcd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      unsigned char 
  2076 ;; Registers used:
  2077 ;;		wreg, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2083 ;;      Params:         0       0       0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    4
  2090 ;; This function calls:
  2091 ;;		_DelayFor18TCY
  2092 ;; This function is called by:
  2093 ;;		_OpenLCD
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text17
  2098  000B7C                     __ptext17:
  2099                           	opt stack 0
  2100  000B7C                     _BusyXLCD:
  2101                           	opt stack 24
  2102                           
  2103                           ;incstack = 0
  2104  000B7C  8C8A               	bsf	3978,6,c	;volatile
  2105  000B7E  9A8A               	bcf	3978,5,c	;volatile
  2106  000B80  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2107  000B84  888A               	bsf	3978,4,c	;volatile
  2108  000B86  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2109  000B8A  A681               	btfss	3969,3,c	;volatile
  2110  000B8C  D00A               	goto	l231
  2111  000B8E  988A               	bcf	3978,4,c	;volatile
  2112  000B90  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2113  000B94  888A               	bsf	3978,4,c	;volatile
  2114  000B96  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2115  000B9A  988A               	bcf	3978,4,c	;volatile
  2116  000B9C  9C8A               	bcf	3978,6,c	;volatile
  2117  000B9E  0E01               	movlw	1
  2118  000BA0  0012               	return	
  2119  000BA2                     l231:
  2120  000BA2  988A               	bcf	3978,4,c	;volatile
  2121  000BA4  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2122  000BA8  888A               	bsf	3978,4,c	;volatile
  2123  000BAA  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2124  000BAE  988A               	bcf	3978,4,c	;volatile
  2125  000BB0  9C8A               	bcf	3978,6,c	;volatile
  2126  000BB2  0E00               	movlw	0
  2127  000BB4  0012               	return	
  2128  000BB6  0012               	return		;funcret
  2129  000BB8                     __end_of_BusyXLCD:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           intcon2	equ	0xFF1
  2136                           indf0	equ	0xFEF
  2137                           fsr0h	equ	0xFEA
  2138                           fsr0l	equ	0xFE9
  2139                           wreg	equ	0xFE8
  2140                           indf2	equ	0xFDF
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _BusyLCD *****************
  2146 ;; Defined at:
  2147 ;;		line 227 in file "lcddisplay.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      unsigned char 
  2154 ;; Registers used:
  2155 ;;		wreg, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2161 ;;      Params:         0       0       0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    4
  2168 ;; This function calls:
  2169 ;;		_DelayFor18TCY
  2170 ;; This function is called by:
  2171 ;;		_InitLCD
  2172 ;;		_OpenLCD
  2173 ;;		_putLCD
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text18
  2178  000BB8                     __ptext18:
  2179                           	opt stack 0
  2180  000BB8                     _BusyLCD:
  2181                           	opt stack 24
  2182                           
  2183                           ;lcddisplay.c: 229: LATEbits.LATE1 = 1;
  2184                           
  2185                           ;incstack = 0
  2186  000BB8  828D               	bsf	3981,1,c	;volatile
  2187                           
  2188                           ;lcddisplay.c: 230: LATEbits.LATE0 = 0;
  2189  000BBA  908D               	bcf	3981,0,c	;volatile
  2190                           
  2191                           ;lcddisplay.c: 231: DelayFor18TCY();
  2192  000BBC  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2193                           
  2194                           ;lcddisplay.c: 232: LATEbits.LATE2 = 1;
  2195  000BC0  848D               	bsf	3981,2,c	;volatile
  2196                           
  2197                           ;lcddisplay.c: 233: DelayFor18TCY();
  2198  000BC2  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2199                           
  2200                           ;lcddisplay.c: 251: if(PORTD&0x08)
  2201  000BC6  A683               	btfss	3971,3,c	;volatile
  2202  000BC8  D00A               	goto	l199
  2203                           
  2204                           ;lcddisplay.c: 253: {
  2205                           ;lcddisplay.c: 254: LATEbits.LATE2 = 0;
  2206  000BCA  948D               	bcf	3981,2,c	;volatile
  2207                           
  2208                           ;lcddisplay.c: 255: DelayFor18TCY();
  2209  000BCC  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2210                           
  2211                           ;lcddisplay.c: 256: LATEbits.LATE2 = 1;
  2212  000BD0  848D               	bsf	3981,2,c	;volatile
  2213                           
  2214                           ;lcddisplay.c: 257: DelayFor18TCY();
  2215  000BD2  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2216                           
  2217                           ;lcddisplay.c: 258: LATEbits.LATE2 = 0;
  2218  000BD6  948D               	bcf	3981,2,c	;volatile
  2219                           
  2220                           ;lcddisplay.c: 259: LATEbits.LATE1 = 0;
  2221  000BD8  928D               	bcf	3981,1,c	;volatile
  2222                           
  2223                           ;lcddisplay.c: 260: return 1;
  2224  000BDA  0E01               	movlw	1
  2225                           
  2226                           ;lcddisplay.c: 261: }
  2227  000BDC  0012               	return	
  2228  000BDE                     l199:
  2229                           
  2230                           ;lcddisplay.c: 262: else
  2231                           ;lcddisplay.c: 263: {
  2232                           ;lcddisplay.c: 264: LATEbits.LATE2 = 0;
  2233  000BDE  948D               	bcf	3981,2,c	;volatile
  2234                           
  2235                           ;lcddisplay.c: 265: DelayFor18TCY();
  2236  000BE0  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2237                           
  2238                           ;lcddisplay.c: 266: LATEbits.LATE2 = 1;
  2239  000BE4  848D               	bsf	3981,2,c	;volatile
  2240                           
  2241                           ;lcddisplay.c: 267: DelayFor18TCY();
  2242  000BE6  EC61  F006         	call	_DelayFor18TCY	;wreg free
  2243                           
  2244                           ;lcddisplay.c: 268: LATEbits.LATE2 = 0;
  2245  000BEA  948D               	bcf	3981,2,c	;volatile
  2246                           
  2247                           ;lcddisplay.c: 269: LATEbits.LATE1 = 0;
  2248  000BEC  928D               	bcf	3981,1,c	;volatile
  2249                           
  2250                           ;lcddisplay.c: 270: return 0;
  2251  000BEE  0E00               	movlw	0
  2252  000BF0  0012               	return	
  2253  000BF2  0012               	return		;funcret
  2254  000BF4                     __end_of_BusyLCD:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           intcon2	equ	0xFF1
  2261                           indf0	equ	0xFEF
  2262                           fsr0h	equ	0xFEA
  2263                           fsr0l	equ	0xFE9
  2264                           wreg	equ	0xFE8
  2265                           indf2	equ	0xFDF
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _DelayFor18TCY *****************
  2271 ;; Defined at:
  2272 ;;		line 59 in file "lcddisplay.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		_Delay1TCYx
  2295 ;; This function is called by:
  2296 ;;		_WriteCmdLCD
  2297 ;;		_BusyLCD
  2298 ;;		_SetLCDDDRamAddr
  2299 ;;		_SetLCDCGRamAddr
  2300 ;;		_WriteDataLCD
  2301 ;;		_BusyXLCD
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text19
  2306  000CC2                     __ptext19:
  2307                           	opt stack 0
  2308  000CC2                     _DelayFor18TCY:
  2309                           	opt stack 24
  2310                           
  2311                           ;lcddisplay.c: 61: Delay1TCYx(18);
  2312                           
  2313                           ;incstack = 0
  2314  000CC2  0E12               	movlw	18
  2315  000CC4  EC5B  F006         	call	_Delay1TCYx
  2316  000CC8  0012               	return		;funcret
  2317  000CCA                     __end_of_DelayFor18TCY:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           intcon2	equ	0xFF1
  2324                           indf0	equ	0xFEF
  2325                           fsr0h	equ	0xFEA
  2326                           fsr0l	equ	0xFE9
  2327                           wreg	equ	0xFE8
  2328                           indf2	equ	0xFDF
  2329                           fsr2h	equ	0xFDA
  2330                           fsr2l	equ	0xFD9
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _Delay1TCYx *****************
  2334 ;; Defined at:
  2335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  unit            1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  unit            1   31[COMRAM] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;		None               void
  2342 ;; Registers used:
  2343 ;;		wreg
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         0       0       0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0
  2352 ;;      Totals:         1       0       0       0       0       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    2
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_DelayFor18TCY
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text20
  2364  000CB6                     __ptext20:
  2365                           	opt stack 0
  2366  000CB6                     _Delay1TCYx:
  2367                           	opt stack 24
  2368                           
  2369                           ;incstack = 0
  2370                           ;Delay1TCYx@unit stored from wreg
  2371  000CB6  6E20               	movwf	Delay1TCYx@unit,c
  2372  000CB8                     l473:
  2373  000CB8  F000               	nop	
  2374  000CBA  2E20               	decfsz	Delay1TCYx@unit,f,c
  2375  000CBC  D7FD               	goto	l473
  2376  000CBE  0012               	return	
  2377  000CC0  0012               	return		;funcret
  2378  000CC2                     __end_of_Delay1TCYx:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           intcon2	equ	0xFF1
  2385                           indf0	equ	0xFEF
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           indf2	equ	0xFDF
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _InitInterrupts *****************
  2395 ;; Defined at:
  2396 ;;		line 93 in file "ports.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;		None               void
  2403 ;; Registers used:
  2404 ;;		None
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    2
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text21
  2425  000C9A                     __ptext21:
  2426                           	opt stack 0
  2427  000C9A                     _InitInterrupts:
  2428                           	opt stack 28
  2429                           
  2430                           ;ports.c: 96: INTCON2bits.INTEDG0 = 0;
  2431                           
  2432                           ;incstack = 0
  2433  000C9A  9CF1               	bcf	intcon2,6,c	;volatile
  2434                           
  2435                           ;ports.c: 97: INTCONbits.INT0IF = 0;
  2436  000C9C  92F2               	bcf	intcon,1,c	;volatile
  2437                           
  2438                           ;ports.c: 98: INTCONbits.INT0IE = 1;
  2439  000C9E  88F2               	bsf	intcon,4,c	;volatile
  2440                           
  2441                           ;ports.c: 101: RCONbits.IPEN = 1;
  2442  000CA0  8ED0               	bsf	4048,7,c	;volatile
  2443                           
  2444                           ;ports.c: 102: INTCONbits.GIEL = 1;
  2445  000CA2  8CF2               	bsf	intcon,6,c	;volatile
  2446                           
  2447                           ;ports.c: 103: INTCONbits.GIEH = 1;
  2448  000CA4  8EF2               	bsf	intcon,7,c	;volatile
  2449  000CA6  0012               	return		;funcret
  2450  000CA8                     __end_of_InitInterrupts:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           intcon	equ	0xFF2
  2457                           intcon2	equ	0xFF1
  2458                           indf0	equ	0xFEF
  2459                           fsr0h	equ	0xFEA
  2460                           fsr0l	equ	0xFE9
  2461                           wreg	equ	0xFE8
  2462                           indf2	equ	0xFDF
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _InitAnalogueInputs *****************
  2468 ;; Defined at:
  2469 ;;		line 120 in file "ports.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, status,2
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2483 ;;      Params:         0       0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text22
  2498  000C56                     __ptext22:
  2499                           	opt stack 0
  2500  000C56                     _InitAnalogueInputs:
  2501                           	opt stack 28
  2502                           
  2503                           ;ports.c: 123: TRISAbits.TRISA0 = 1;
  2504                           
  2505                           ;incstack = 0
  2506  000C56  8092               	bsf	3986,0,c	;volatile
  2507                           
  2508                           ;ports.c: 132: ANSEL = 0b00000001;
  2509  000C58  0E01               	movlw	1
  2510  000C5A  6E7E               	movwf	3966,c	;volatile
  2511                           
  2512                           ;ports.c: 135: ADCON1 = 0b00000000;
  2513  000C5C  0E00               	movlw	0
  2514  000C5E  6EC1               	movwf	4033,c	;volatile
  2515                           
  2516                           ;ports.c: 136: ADCON2 = 0b00111000;
  2517  000C60  0E38               	movlw	56
  2518  000C62  6EC0               	movwf	4032,c	;volatile
  2519                           
  2520                           ;ports.c: 154: ADCON0 = 0b00000001;
  2521  000C64  0E01               	movlw	1
  2522  000C66  6EC2               	movwf	4034,c	;volatile
  2523  000C68  0012               	return		;funcret
  2524  000C6A                     __end_of_InitAnalogueInputs:
  2525                           	opt stack 0
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           intcon	equ	0xFF2
  2531                           intcon2	equ	0xFF1
  2532                           indf0	equ	0xFEF
  2533                           fsr0h	equ	0xFEA
  2534                           fsr0l	equ	0xFE9
  2535                           wreg	equ	0xFE8
  2536                           indf2	equ	0xFDF
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _ADC_Convert *****************
  2542 ;; Defined at:
  2543 ;;		line 158 in file "ports.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      unsigned char 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2557 ;;      Params:         0       0       0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    2
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text23
  2572  000CA8                     __ptext23:
  2573                           	opt stack 0
  2574  000CA8                     _ADC_Convert:
  2575                           	opt stack 28
  2576                           
  2577                           ;ports.c: 160: ADCON0bits.GO_DONE = 1;
  2578                           
  2579                           ;incstack = 0
  2580  000CA8  82C2               	bsf	4034,1,c	;volatile
  2581                           
  2582                           ;ports.c: 161: while (ADCON0bits.GO_DONE == 1);
  2583  000CAA  D000               	goto	l111
  2584  000CAC                     l111:
  2585  000CAC  B2C2               	btfsc	4034,1,c	;volatile
  2586  000CAE  D7FE               	goto	l111
  2587                           
  2588                           ;ports.c: 162: return ADRESH;
  2589  000CB0  50C4               	movf	4036,w,c	;volatile
  2590  000CB2  0012               	return	
  2591  000CB4  0012               	return		;funcret
  2592  000CB6                     __end_of_ADC_Convert:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           intcon	equ	0xFF2
  2599                           intcon2	equ	0xFF1
  2600                           indf0	equ	0xFEF
  2601                           fsr0h	equ	0xFEA
  2602                           fsr0l	equ	0xFE9
  2603                           wreg	equ	0xFE8
  2604                           indf2	equ	0xFDF
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function _XC8_LowISR_Handler *****************
  2610 ;; Defined at:
  2611 ;;		line 128 in file "main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		None
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2625 ;;      Params:         0       0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0
  2627 ;;      Temps:         17       0       0       0       0       0       0
  2628 ;;      Totals:        17       0       0       0       0       0       0
  2629 ;;Total ram usage:       17 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		Interrupt level 1
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	intcodelo
  2640  000018                     __pintcodelo:
  2641                           	opt stack 0
  2642  000018                     _XC8_LowISR_Handler:
  2643                           	opt stack 23
  2644                           
  2645                           ;incstack = 0
  2646  000018  CFD8 F001          	movff	status,??_XC8_LowISR_Handler
  2647  00001C  CFE8 F002          	movff	wreg,??_XC8_LowISR_Handler+1
  2648  000020  CFE0 F003          	movff	bsr,??_XC8_LowISR_Handler+2
  2649  000024  CFFA F004          	movff	pclath,??_XC8_LowISR_Handler+3
  2650  000028  CFFB F005          	movff	pclatu,??_XC8_LowISR_Handler+4
  2651  00002C  CFE9 F006          	movff	fsr0l,??_XC8_LowISR_Handler+5
  2652  000030  CFEA F007          	movff	fsr0h,??_XC8_LowISR_Handler+6
  2653  000034  CFE1 F008          	movff	fsr1l,??_XC8_LowISR_Handler+7
  2654  000038  CFE2 F009          	movff	fsr1h,??_XC8_LowISR_Handler+8
  2655  00003C  CFD9 F00A          	movff	fsr2l,??_XC8_LowISR_Handler+9
  2656  000040  CFDA F00B          	movff	fsr2h,??_XC8_LowISR_Handler+10
  2657  000044  CFF3 F00C          	movff	prodl,??_XC8_LowISR_Handler+11
  2658  000048  CFF4 F00D          	movff	prodh,??_XC8_LowISR_Handler+12
  2659  00004C  CFF6 F00E          	movff	tblptrl,??_XC8_LowISR_Handler+13
  2660  000050  CFF7 F00F          	movff	tblptrh,??_XC8_LowISR_Handler+14
  2661  000054  CFF8 F010          	movff	tblptru,??_XC8_LowISR_Handler+15
  2662  000058  CFF5 F011          	movff	tablat,??_XC8_LowISR_Handler+16
  2663                           
  2664                           ;main.c: 132: if (INTCON3bits.INT1IF) {
  2665  00005C  A0F0               	btfss	intcon3,0,c	;volatile
  2666  00005E  D002               	goto	i1l52
  2667                           
  2668                           ;main.c: 133: INTCON3bits.INT1IF = 0;
  2669  000060  90F0               	bcf	intcon3,0,c	;volatile
  2670                           
  2671                           ;main.c: 134: LATDbits.LATD1 = ~LATDbits.LATD1;
  2672  000062  728C               	btg	3980,1,c	;volatile
  2673  000064                     i1l52:
  2674                           
  2675                           ;main.c: 135: }
  2676                           ;main.c: 137: if (INTCONbits.RBIF) {
  2677  000064  A0F2               	btfss	intcon,0,c	;volatile
  2678  000066  D009               	goto	i1l56
  2679                           
  2680                           ;main.c: 138: PortBValue = PORTB;
  2681  000068  CF81 F037          	movff	3969,_PortBValue	;volatile
  2682                           
  2683                           ;main.c: 139: INTCONbits.RBIF = 0;
  2684  00006C  90F2               	bcf	intcon,0,c	;volatile
  2685                           
  2686                           ;main.c: 140: if (PortBValue & 0b00010000) {
  2687  00006E  B837               	btfsc	_PortBValue,4,c
  2688                           
  2689                           ;main.c: 141: LATDbits.LATD4 = ~LATDbits.LATD4;
  2690  000070  788C               	btg	3980,4,c	;volatile
  2691                           
  2692                           ;main.c: 142: }
  2693                           ;main.c: 143: if (PortBValue & 0b00100000) {
  2694  000072  AA37               	btfss	_PortBValue,5,c
  2695  000074  D002               	goto	i1l56
  2696                           
  2697                           ;main.c: 144: LATDbits.LATD5 = ~LATDbits.LATD5;
  2698  000076  7A8C               	btg	3980,5,c	;volatile
  2699  000078  D000               	goto	i1l56
  2700  00007A                     i1l56:
  2701  00007A  C011  FFF5         	movff	??_XC8_LowISR_Handler+16,tablat
  2702  00007E  C010  FFF8         	movff	??_XC8_LowISR_Handler+15,tblptru
  2703  000082  C00F  FFF7         	movff	??_XC8_LowISR_Handler+14,tblptrh
  2704  000086  C00E  FFF6         	movff	??_XC8_LowISR_Handler+13,tblptrl
  2705  00008A  C00D  FFF4         	movff	??_XC8_LowISR_Handler+12,prodh
  2706  00008E  C00C  FFF3         	movff	??_XC8_LowISR_Handler+11,prodl
  2707  000092  C00B  FFDA         	movff	??_XC8_LowISR_Handler+10,fsr2h
  2708  000096  C00A  FFD9         	movff	??_XC8_LowISR_Handler+9,fsr2l
  2709  00009A  C009  FFE2         	movff	??_XC8_LowISR_Handler+8,fsr1h
  2710  00009E  C008  FFE1         	movff	??_XC8_LowISR_Handler+7,fsr1l
  2711  0000A2  C007  FFEA         	movff	??_XC8_LowISR_Handler+6,fsr0h
  2712  0000A6  C006  FFE9         	movff	??_XC8_LowISR_Handler+5,fsr0l
  2713  0000AA  C005  FFFB         	movff	??_XC8_LowISR_Handler+4,pclatu
  2714  0000AE  C004  FFFA         	movff	??_XC8_LowISR_Handler+3,pclath
  2715  0000B2  C003  FFE0         	movff	??_XC8_LowISR_Handler+2,bsr
  2716  0000B6  C002  FFE8         	movff	??_XC8_LowISR_Handler+1,wreg
  2717  0000BA  C001  FFD8         	movff	??_XC8_LowISR_Handler,status
  2718  0000BE  0010               	retfie	
  2719  0000C0                     __end_of_XC8_LowISR_Handler:
  2720                           	opt stack 0
  2721                           pclatu	equ	0xFFB
  2722                           pclath	equ	0xFFA
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           prodh	equ	0xFF4
  2728                           prodl	equ	0xFF3
  2729                           intcon	equ	0xFF2
  2730                           intcon2	equ	0xFF1
  2731                           intcon3	equ	0xFF0
  2732                           indf0	equ	0xFEF
  2733                           fsr0h	equ	0xFEA
  2734                           fsr0l	equ	0xFE9
  2735                           wreg	equ	0xFE8
  2736                           fsr1h	equ	0xFE2
  2737                           fsr1l	equ	0xFE1
  2738                           bsr	equ	0xFE0
  2739                           indf2	equ	0xFDF
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function _XC8_HighISR_Handler *****************
  2745 ;; Defined at:
  2746 ;;		line 96 in file "main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		None
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2760 ;;      Params:         0       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0
  2762 ;;      Temps:         14       0       0       0       0       0       0
  2763 ;;      Totals:        14       0       0       0       0       0       0
  2764 ;;Total ram usage:       14 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		Interrupt level 2
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	intcode
  2774  000008                     __pintcode:
  2775                           	opt stack 0
  2776  000008                     _XC8_HighISR_Handler:
  2777                           	opt stack 23
  2778                           
  2779                           ;incstack = 0
  2780  000008  CFFA F012          	movff	pclath,??_XC8_HighISR_Handler
  2781  00000C  CFFB F013          	movff	pclatu,??_XC8_HighISR_Handler+1
  2782  000010  CFE9 F014          	movff	fsr0l,??_XC8_HighISR_Handler+2
  2783  000014  EF14  F004         	goto	int_func
  2784                           pclatu	equ	0xFFB
  2785                           pclath	equ	0xFFA
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           prodh	equ	0xFF4
  2791                           prodl	equ	0xFF3
  2792                           intcon	equ	0xFF2
  2793                           intcon2	equ	0xFF1
  2794                           intcon3	equ	0xFF0
  2795                           indf0	equ	0xFEF
  2796                           fsr0h	equ	0xFEA
  2797                           fsr0l	equ	0xFE9
  2798                           wreg	equ	0xFE8
  2799                           fsr1h	equ	0xFE2
  2800                           fsr1l	equ	0xFE1
  2801                           bsr	equ	0xFE0
  2802                           indf2	equ	0xFDF
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807                           	psect	intcode_body
  2808  000828                     __pintcode_body:
  2809                           	opt stack 23
  2810  000828                     int_func:
  2811                           	opt stack 23
  2812  000828  CFEA F015          	movff	fsr0h,??_XC8_HighISR_Handler+3
  2813  00082C  CFE1 F016          	movff	fsr1l,??_XC8_HighISR_Handler+4
  2814  000830  CFE2 F017          	movff	fsr1h,??_XC8_HighISR_Handler+5
  2815  000834  CFD9 F018          	movff	fsr2l,??_XC8_HighISR_Handler+6
  2816  000838  CFDA F019          	movff	fsr2h,??_XC8_HighISR_Handler+7
  2817  00083C  CFF3 F01A          	movff	prodl,??_XC8_HighISR_Handler+8
  2818  000840  CFF4 F01B          	movff	prodh,??_XC8_HighISR_Handler+9
  2819  000844  CFF6 F01C          	movff	tblptrl,??_XC8_HighISR_Handler+10
  2820  000848  CFF7 F01D          	movff	tblptrh,??_XC8_HighISR_Handler+11
  2821  00084C  CFF8 F01E          	movff	tblptru,??_XC8_HighISR_Handler+12
  2822  000850  CFF5 F01F          	movff	tablat,??_XC8_HighISR_Handler+13
  2823                           
  2824                           ;main.c: 103: if (INTCONbits.INT0IF )
  2825  000854  A2F2               	btfss	intcon,1,c	;volatile
  2826  000856  D003               	goto	i2l49
  2827                           
  2828                           ;main.c: 104: {
  2829                           ;main.c: 106: INTCONbits.INT0IF = 0;
  2830  000858  92F2               	bcf	intcon,1,c	;volatile
  2831                           
  2832                           ;main.c: 108: LATDbits.LATD6 = ~LATDbits.LATD6;
  2833  00085A  7C8C               	btg	3980,6,c	;volatile
  2834  00085C  D000               	goto	i2l49
  2835  00085E                     i2l49:
  2836  00085E  C01F  FFF5         	movff	??_XC8_HighISR_Handler+13,tablat
  2837  000862  C01E  FFF8         	movff	??_XC8_HighISR_Handler+12,tblptru
  2838  000866  C01D  FFF7         	movff	??_XC8_HighISR_Handler+11,tblptrh
  2839  00086A  C01C  FFF6         	movff	??_XC8_HighISR_Handler+10,tblptrl
  2840  00086E  C01B  FFF4         	movff	??_XC8_HighISR_Handler+9,prodh
  2841  000872  C01A  FFF3         	movff	??_XC8_HighISR_Handler+8,prodl
  2842  000876  C019  FFDA         	movff	??_XC8_HighISR_Handler+7,fsr2h
  2843  00087A  C018  FFD9         	movff	??_XC8_HighISR_Handler+6,fsr2l
  2844  00087E  C017  FFE2         	movff	??_XC8_HighISR_Handler+5,fsr1h
  2845  000882  C016  FFE1         	movff	??_XC8_HighISR_Handler+4,fsr1l
  2846  000886  C015  FFEA         	movff	??_XC8_HighISR_Handler+3,fsr0h
  2847  00088A  C014  FFE9         	movff	??_XC8_HighISR_Handler+2,fsr0l
  2848  00088E  C013  FFFB         	movff	??_XC8_HighISR_Handler+1,pclatu
  2849  000892  C012  FFFA         	movff	??_XC8_HighISR_Handler,pclath
  2850  000896  0011               	retfie		f
  2851  000898                     __end_of_XC8_HighISR_Handler:
  2852                           	opt stack 0
  2853                           pclatu	equ	0xFFB
  2854                           pclath	equ	0xFFA
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           intcon2	equ	0xFF1
  2863                           intcon3	equ	0xFF0
  2864                           indf0	equ	0xFEF
  2865                           fsr0h	equ	0xFEA
  2866                           fsr0l	equ	0xFE9
  2867                           wreg	equ	0xFE8
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           bsr	equ	0xFE0
  2871                           indf2	equ	0xFDF
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           pclatu	equ	0xFFB
  2876                           pclath	equ	0xFFA
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           intcon	equ	0xFF2
  2884                           intcon2	equ	0xFF1
  2885                           intcon3	equ	0xFF0
  2886                           indf0	equ	0xFEF
  2887                           fsr0h	equ	0xFEA
  2888                           fsr0l	equ	0xFE9
  2889                           wreg	equ	0xFE8
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           bsr	equ	0xFE0
  2893                           indf2	equ	0xFDF
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898                           	psect	rparam
  2899  0000                     pclatu	equ	0xFFB
  2900                           pclath	equ	0xFFA
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           prodh	equ	0xFF4
  2906                           prodl	equ	0xFF3
  2907                           intcon	equ	0xFF2
  2908                           intcon2	equ	0xFF1
  2909                           intcon3	equ	0xFF0
  2910                           indf0	equ	0xFEF
  2911                           fsr0h	equ	0xFEA
  2912                           fsr0l	equ	0xFE9
  2913                           wreg	equ	0xFE8
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           bsr	equ	0xFE0
  2917                           indf2	equ	0xFDF
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    putLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> putIntLCD@result(COMRAM[4]), STR_2(CODE[10]), STR_1(CODE[9]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_putIntLCD
    _LCDInitialDisplay->_putIntLCD
    _putIntLCD->_utoa
    _utoa->___lwdiv
    _putLCD->_WriteDataLCD
    _InitLCD->_OpenLCD
    _OpenLCD->_SetLCDDDRamAddr
    _DelayFor18TCY->_Delay1TCYx

Critical Paths under _XC8_HighISR_Handler in COMRAM

    None.

Critical Paths under _XC8_LowISR_Handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _XC8_HighISR_Handler in BANK0

    None.

Critical Paths under _XC8_LowISR_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _XC8_HighISR_Handler in BANK1

    None.

Critical Paths under _XC8_LowISR_Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _XC8_HighISR_Handler in BANK2

    None.

Critical Paths under _XC8_LowISR_Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _XC8_HighISR_Handler in BANK3

    None.

Critical Paths under _XC8_LowISR_Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _XC8_HighISR_Handler in BANK4

    None.

Critical Paths under _XC8_LowISR_Handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _XC8_HighISR_Handler in BANK5

    None.

Critical Paths under _XC8_LowISR_Handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4490
                        _ADC_Convert
                 _InitAnalogueInputs
                     _InitInterrupts
                            _InitLCD
                       _InitMotorPWM
                          _InitPorts
                  _LCDInitialDisplay
                    _SetLCDDDRamAddr
                       _WriteDataLCD
                          _putIntLCD
 ---------------------------------------------------------------------------------
 (1) _LCDInitialDisplay                                    0     0      0    2326
                    _SetLCDCGRamAddr
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
                       _WriteDataLCD
                          _putIntLCD
                             _putLCD
 ---------------------------------------------------------------------------------
 (1) _putIntLCD                                            6     4      2    1849
                                             47 COMRAM     6     4      2
                             _putLCD
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1352
                                             38 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               2     0      2     297
                                             33 COMRAM     2     0      2
                            _BusyLCD
                       _WriteDataLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataLCD                                         1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetLCDCGRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitMotorPWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0     225
                            _BusyLCD
                            _OpenLCD
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _OpenLCD                                              1     1      0     165
                                             36 COMRAM     1     1      0
                            _BusyLCD
                           _BusyXLCD
                       _Delay100TCYx
                       _Delay10KTCYx
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdLCD                                          1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetLCDDDRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyLCD                                              0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0      15
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay1TCYx                                           1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAnalogueInputs                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _XC8_LowISR_Handler                                  17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _XC8_HighISR_Handler                                 14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
   _InitAnalogueInputs
   _InitInterrupts
   _InitLCD
     _BusyLCD
       _DelayFor18TCY
         _Delay1TCYx
     _OpenLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _BusyXLCD
         _DelayFor18TCY
           _Delay1TCYx
       _Delay100TCYx
       _Delay10KTCYx
       _SetLCDDDRamAddr
         _DelayFor18TCY
           _Delay1TCYx
       _WriteCmdLCD
         _DelayFor18TCY
           _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
   _InitMotorPWM
   _InitPorts
   _LCDInitialDisplay
     _SetLCDCGRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _SetLCDDDRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
     _WriteDataLCD
       _DelayFor18TCY
         _Delay1TCYx
     _putIntLCD
       _putLCD
         _BusyLCD
           _DelayFor18TCY
             _Delay1TCYx
         _WriteDataLCD
           _DelayFor18TCY
             _Delay1TCYx
       _utoa
         ___lwdiv
         ___lwmod
     _putLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _WriteDataLCD
         _DelayFor18TCY
           _Delay1TCYx
   _SetLCDDDRamAddr
     _DelayFor18TCY
       _Delay1TCYx
   _WriteDataLCD
     _DelayFor18TCY
       _Delay1TCYx
   _putIntLCD
     _putLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _WriteDataLCD
         _DelayFor18TCY
           _Delay1TCYx
     _utoa
       ___lwdiv
       ___lwmod

 _XC8_LowISR_Handler (ROOT)

 _XC8_HighISR_Handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      37       1       57.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      15        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Apr 21 10:43:18 2015

                          u85 0A22          __size_of_WriteCmdLCD 0040                            bsr 000FE0  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l111 0CAC                           l231 0BA2  
                         l199 0BDE                           l473 0CB8                           l695 0802  
                         l789 09A8                           l799 0AF2                  __CFG_CPB$OFF 000000  
                         u430 08C6                           _PR2 000FCB                           u175 09CE  
                         u440 08F0                  __CFG_CPD$OFF 000000                           u507 0C46  
                         u517 0C6E                           u437 08BC                           u447 08E6  
                __CFG_BORV$30 000000         __size_of_WriteDataLCD 0040                           wreg 000FE8  
                __CFG_LVP$OFF 000000          __size_of_ADC_Convert 000E                    _Delay1TCYx 0CB6  
                        l1030 0C40                          l1026 0C6C                          l1210 0A9E  
                        l1202 0A7A                          l1206 0A8C                          l1160 0678  
                        l1304 099C                          l1320 0AE6                          l1312 0ABE  
                        l1400 091E                          l1154 0658                          l1314 0AC8  
                        l1172 06AE                          l1164 068A                          l1156 0666  
                        l1332 08D0                          l1316 0AD0                          l1412 0944  
                        l1326 089C                          l1176 06C0                          l1168 069C  
                        l1336 0788                          l1346 07C4                          l1292 096C  
                        l1198 0A68                          l1294 0976                          l1296 097E  
                        STR_1 060B                          STR_2 0601                          _LATC 000F8B  
                        _LATD 000F8C                          i1l52 0064                          i1l56 007A  
                        i2l49 085E                          _main 08F8         SetLCDDDRamAddr@DDaddr 0024  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          _utoa 077E  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 00C0                 __CFG_IESO$OFF 000000                  ___param_bank 000010  
             __end_of_BusyLCD 0BF4               __end_of_InitLCD 0AB0                 ?_InitMotorPWM 0001  
             __end_of_OpenLCD 06D4                  _WriteDataLCD 0AFC                         ?_main 0001  
       __size_of_Delay100TCYx 0012                         _ANSEL 000F7E                         ?_utoa 0027  
                       _T2CON 000FCA               __end_of___lwdiv 09B2               __end_of___lwmod 0AFC  
                       _PORTB 000F81                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95         __size_of_Delay10KTCYx 0018  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         tablat 000FF5  
                       utoa@c 002F                         utoa@v 002D                         status 000FD8  
              __CFG_PBADEN$ON 000000             ??_SetLCDDDRamAddr 0021                __CFG_MCLRE$OFF 000000  
           ??_SetLCDCGRamAddr 0021               __initialization 0C8C                  _Delay100TCYx 0C6A  
              ??_InitMotorPWM 0020                  __end_of_main 0956                _InitInterrupts 0C9A  
                __end_of_utoa 0828              __end_of_BusyXLCD 0BB8                WriteCmdLCD@cmd 0021  
                _Delay10KTCYx 0C3E                        ??_main 0036                        ??_utoa 002D  
               __activetblptr 000002                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                   ?_Delay1TCYx 0001  
                      _CCPR1L 000FBE                        _ANSELH 000F7F                __CFG_WDTEN$OFF 000000  
          __size_of_InitPorts 0020                     ??_BusyLCD 0021                     ??_InitLCD 0026  
                   ??_OpenLCD 0025        __end_of_InitInterrupts 0CA8                __CFG_XINST$OFF 000000  
                  _PortBValue 0037                __CFG_STVREN$ON 000000                     ??___lwdiv 0024  
                   ??___lwmod 0024    __end_of_InitAnalogueInputs 0C6A    __end_of_XC8_LowISR_Handler 00C0  
                      _putLCD 0898                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0C90                 ___rparam_used 000001               ?_InitInterrupts 0001  
              __pcstackCOMRAM 0001           __size_of_Delay1TCYx 000C             __end_of_InitPorts 0C3E  
 __end_of_XC8_HighISR_Handler 0898               __CFG_LPT1OSC$ON 000000          __end_of_InitMotorPWM 0C8C  
      __size_of_DelayFor18TCY 0008                     ?_BusyXLCD 0001         SetLCDCGRamAddr@CGaddr 0024  
               ??_WriteCmdLCD 0021                       _CCP1CON 000FBD                       ?_putLCD 0022  
          __size_of_putIntLCD 002A                 ??_ADC_Convert 0020               _SetLCDDDRamAddr 0A0C  
             _SetLCDCGRamAddr 09B2                    ??_BusyXLCD 0021                       _BusyLCD 0BB8  
                     _InitLCD 0A60                     _ADC_Value 0036                       _OpenLCD 0616  
                     __Hparam 0000                       __Lparam 0000                 _DelayFor18TCY 0CC2  
                     ___lwdiv 0956                       ___lwmod 0AB0                  __psmallconst 0600  
                     __pcinit 0C8C                       __ramtop 0600               __size_of_putLCD 0060  
                     __ptext0 08F8                       __ptext1 06D4                       __ptext2 0BF4  
                     __ptext3 077E                       __ptext4 0AB0                       __ptext5 0956  
                     __ptext6 0898                       __ptext7 0AFC                       __ptext8 09B2  
                     __ptext9 0C1E           __end_of_WriteCmdLCD 0B7C                  ??_Delay1TCYx 0020  
              __pintcode_body 0828          end_of_initialization 0C90           __end_of_ADC_Convert 0CB6  
           _LCDInitialDisplay 06D4                 __Lmediumconst 0000                       int_func 0828  
          ?_LCDInitialDisplay 0001             __end_of_putIntLCD 0C1E                ?_DelayFor18TCY 0001  
         ??_LCDInitialDisplay 0036                       utoa@buf 0027                       utoa@val 0029  
          __end_of_Delay1TCYx 0CC2       __end_of_SetLCDDDRamAddr 0A60         __size_of_InitMotorPWM 0010  
     __end_of_SetLCDCGRamAddr 0A0C                     _TRISAbits 000F92                     _TRISCbits 000F94  
                   _TRISEbits 000F96            _InitAnalogueInputs 0C56            _XC8_LowISR_Handler 0018  
   __end_of_LCDInitialDisplay 077E              ??_InitInterrupts 0020           ?_InitAnalogueInputs 0001  
         ?_XC8_LowISR_Handler 0001              Delay100TCYx@unit 0020                   _WriteCmdLCD 0B3C  
                _InitMotorPWM 0C7C          ??_InitAnalogueInputs 0020          ??_XC8_LowISR_Handler 0001  
              __end_of_putLCD 08F8           start_initialization 0C8C                   _ADC_Convert 0CA8  
                   _InitPorts 0C1E             __size_of_BusyXLCD 003C               ??_DelayFor18TCY 0021  
               ?_WriteDataLCD 0001                      ??_putLCD 0024                OpenLCD@lcdtype 0025  
            ?_SetLCDDDRamAddr 0001              ?_SetLCDCGRamAddr 0001                   __pbssCOMRAM 0036  
                  ?_InitPorts 0001              WriteDataLCD@data 0021    __size_of_LCDInitialDisplay 00AA  
__size_of_XC8_HighISR_Handler 0890                      ?_BusyLCD 0001                      ?_InitLCD 0001  
                    ?_OpenLCD 0001              ___lwdiv@dividend 0020             __CFG_CCP2MX$PORTC 000000  
               ?_Delay100TCYx 0001                     __pintcode 0008                ??_WriteDataLCD 0021  
               ?_Delay10KTCYx 0001                      ?___lwdiv 0020                      ?___lwmod 0020  
                 __pintcodelo 0018                   __smallconst 0600              ___lwdiv@quotient 0024  
                    _LATBbits 000F8A                      _LATDbits 000F8C                      _LATEbits 000F8D  
              ??_Delay100TCYx 0020                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
              ??_Delay10KTCYx 0020                     _putIntLCD 0BF4                    putIntLCD@n 0030  
                  _ADCON0bits 000FC2                  putLCD@buffer 0022                      _WPUBbits 000F7C  
            Delay10KTCYx@unit 0021                   ??_InitPorts 0020                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                      _BusyXLCD 0B7C              __size_of_BusyLCD 003C  
            __size_of_InitLCD 0050                      __Hrparam 0000              __size_of_OpenLCD 00BE  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000                  ?_WriteCmdLCD 0001  
                  ?_putIntLCD 0030              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                ?_ADC_Convert 0001               ___lwdiv@divisor 0022               ___lwdiv@counter 0026  
                    __ptext10 0C7C                      __ptext11 0A60                      __ptext20 0CB6  
                    __ptext12 0616                      __ptext21 0C9A                      __ptext13 0B3C  
                    __ptext22 0C56                      __ptext14 0A0C                      __ptext23 0CA8  
                    __ptext15 0C3E                      __ptext16 0C6A                      __ptext17 0B7C  
                    __ptext18 0BB8                      __ptext19 0CC2          __end_of_WriteDataLCD 0B3C  
               __size_of_main 005E                 __size_of_utoa 00AA                Delay1TCYx@unit 0020  
         _XC8_HighISR_Handler 0008   __size_of_InitAnalogueInputs 0014   __size_of_XC8_LowISR_Handler 00A8  
                  _INTCONbits 000FF2          __end_of_Delay100TCYx 0C7C          __end_of_Delay10KTCYx 0C56  
                    intlevel1 0000                      intlevel2 0000          ?_XC8_HighISR_Handler 0001  
            ___lwmod@dividend 0020         __end_of_DelayFor18TCY 0CCA                   ??_putIntLCD 0032  
     __size_of_InitInterrupts 000E               putIntLCD@result 0032                      utoa@base 002B  
             ___lwmod@divisor 0022               ___lwmod@counter 0024      __size_of_SetLCDDDRamAddr 0054  
       ??_XC8_HighISR_Handler 0012      __size_of_SetLCDCGRamAddr 005A             __CFG_FOSC$INTIO67 000000  

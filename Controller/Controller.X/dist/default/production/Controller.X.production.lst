

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Apr 21 09:46:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _ANSEL	set	3966
    38  0000                     _ANSELH	set	3967
    39  0000                     _CCP1CON	set	4029
    40  0000                     _CCPR1L	set	4030
    41  0000                     _INTCON2bits	set	4081
    42  0000                     _INTCON3bits	set	4080
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATD	set	3980
    47  0000                     _LATDbits	set	3980
    48  0000                     _LATEbits	set	3981
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTD	set	3971
    51  0000                     _PR2	set	4043
    52  0000                     _RCONbits	set	4048
    53  0000                     _T2CON	set	4042
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISCbits	set	3988
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISEbits	set	3990
    58  0000                     _WPUBbits	set	3964
    59                           
    60                           	psect	smallconst
    61  000600                     __psmallconst:
    62                           	opt stack 0
    63  000600  00                 	db	0
    64  000601                     STR_2:
    65  000601  4C                 	db	76	;'L'
    66  000602  69                 	db	105	;'i'
    67  000603  6E                 	db	110	;'n'
    68  000604  65                 	db	101	;'e'
    69  000605  20                 	db	32
    70  000606  30                 	db	48	;'0'
    71  000607  30                 	db	48	;'0'
    72  000608  30                 	db	48	;'0'
    73  000609  20                 	db	32
    74  00060A  00                 	db	0
    75  00060B                     STR_1:
    76  00060B  54                 	db	84	;'T'
    77  00060C  65                 	db	101	;'e'
    78  00060D  73                 	db	115	;'s'
    79  00060E  74                 	db	116	;'t'
    80  00060F  69                 	db	105	;'i'
    81  000610  6E                 	db	110	;'n'
    82  000611  67                 	db	103	;'g'
    83  000612  20                 	db	32
    84  000613  00                 	db	0
    85                           
    86                           ; #config settings
    87  000614  00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           	psect	cinit
    90  000C68                     __pcinit:
    91                           	opt stack 0
    92  000C68                     start_initialization:
    93                           	opt stack 0
    94  000C68                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (1 bytes)
    98  000C68  6A36               	clrf	__pbssCOMRAM& (0+255),c
    99  000C6A                     end_of_initialization:
   100                           	opt stack 0
   101  000C6A                     __end_of__initialization:
   102                           	opt stack 0
   103  000C6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  000C6C  6EF8               	movwf	tblptru,c
   105  000C6E  0100               	movlb	0
   106  000C70  EFCB  F005         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           
   109                           	psect	bssCOMRAM
   110  000036                     __pbssCOMRAM:
   111                           	opt stack 0
   112  000036                     _PortBValue:
   113                           	opt stack 0
   114  000036                     	ds	1
   115                           tblptru	equ	0xFF8
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	opt stack 0
   120  000001                     ??_XC8_LowISR_Handler:
   121  000001                     
   122                           ; 1 bytes @ 0x0
   123  000001                     	ds	17
   124  000012                     ??_XC8_HighISR_Handler:
   125                           
   126                           ; 0 bytes @ 0x11
   127  000012                     	ds	14
   128  000020                     ??_Delay10KTCYx:
   129  000020                     ?___lwdiv:
   130                           	opt stack 0
   131  000020                     ?___lwmod:
   132                           	opt stack 0
   133  000020                     Delay100TCYx@unit:
   134                           	opt stack 0
   135  000020                     Delay1KTCYx@unit:
   136                           	opt stack 0
   137  000020                     Delay1TCYx@unit:
   138                           	opt stack 0
   139  000020                     ___lwdiv@dividend:
   140                           	opt stack 0
   141  000020                     ___lwmod@dividend:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x1F
   145  000020                     	ds	1
   146  000021                     ??_SetLCDCGRamAddr:
   147  000021                     ??_SetLCDDDRamAddr:
   148  000021                     WriteCmdLCD@cmd:
   149                           	opt stack 0
   150  000021                     WriteDataLCD@data:
   151                           	opt stack 0
   152  000021                     Delay10KTCYx@unit:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x20
   156  000021                     	ds	1
   157  000022                     putLCD@buffer:
   158                           	opt stack 0
   159  000022                     ___lwdiv@divisor:
   160                           	opt stack 0
   161  000022                     ___lwmod@divisor:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x21
   165  000022                     	ds	2
   166  000024                     SetLCDDDRamAddr@DDaddr:
   167                           	opt stack 0
   168  000024                     SetLCDCGRamAddr@CGaddr:
   169                           	opt stack 0
   170  000024                     ___lwmod@counter:
   171                           	opt stack 0
   172  000024                     ___lwdiv@quotient:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x23
   176  000024                     	ds	1
   177  000025                     OpenLCD@lcdtype:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x24
   181  000025                     	ds	1
   182  000026                     ___lwdiv@counter:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x25
   186  000026                     	ds	1
   187  000027                     utoa@buf:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x26
   191  000027                     	ds	2
   192  000029                     utoa@val:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x28
   196  000029                     	ds	2
   197  00002B                     utoa@base:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x2A
   201  00002B                     	ds	2
   202  00002D                     utoa@v:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x2C
   206  00002D                     	ds	2
   207  00002F                     utoa@c:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x2E
   211  00002F                     	ds	1
   212  000030                     putIntLCD@n:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2F
   216  000030                     	ds	2
   217  000032                     putIntLCD@result:
   218                           	opt stack 0
   219                           
   220                           ; 4 bytes @ 0x31
   221  000032                     	ds	4
   222  000036                     tblptru	equ	0xFF8
   223                           
   224                           ; 0 bytes @ 0x35
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 53 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;		None               void
   237 ;; Registers used:
   238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   244 ;;      Params:         0       0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called:    8
   250 ;; This function calls:
   251 ;;		_Delay1KTCYx
   252 ;;		_InitInterrupts
   253 ;;		_InitLCD
   254 ;;		_InitMotorPWM
   255 ;;		_InitPorts
   256 ;;		_LCDInitialDisplay
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  000B96                     __ptext0:
   264                           	opt stack 0
   265  000B96                     _main:
   266                           	opt stack 23
   267                           
   268                           ;main.c: 55: InitPorts();
   269                           
   270                           ;incstack = 0
   271  000B96  ECFB  F005         	call	_InitPorts	;wreg free
   272                           
   273                           ;main.c: 56: InitInterrupts();
   274  000B9A  EC2D  F006         	call	_InitInterrupts	;wreg free
   275                           
   276                           ;main.c: 57: InitMotorPWM();
   277  000B9E  EC25  F006         	call	_InitMotorPWM	;wreg free
   278                           
   279                           ;main.c: 58: InitLCD();
   280  000BA2  EC01  F005         	call	_InitLCD	;wreg free
   281                           
   282                           ;main.c: 59: LCDInitialDisplay();
   283  000BA6  EC6A  F003         	call	_LCDInitialDisplay	;wreg free
   284                           
   285                           ;main.c: 61: CCPR1L = 16;
   286  000BAA  0E10               	movlw	16
   287  000BAC  6EBE               	movwf	4030,c	;volatile
   288                           
   289                           ;main.c: 64: LATD = 0;
   290  000BAE  0E00               	movlw	0
   291  000BB0  6E8C               	movwf	3980,c	;volatile
   292                           
   293                           ;main.c: 65: LATC = 0;
   294  000BB2  0E00               	movlw	0
   295  000BB4  6E8B               	movwf	3979,c	;volatile
   296  000BB6  D000               	goto	l1353
   297  000BB8                     l1353:
   298                           
   299                           ;main.c: 68: {
   300                           ;main.c: 70: CCPR1L = CCPR1L + 16;
   301  000BB8  50BE               	movf	4030,w,c	;volatile
   302  000BBA  0F10               	addlw	16
   303  000BBC  6EBE               	movwf	4030,c	;volatile
   304                           
   305                           ;main.c: 72: LATDbits.LATD7 = ~LATDbits.LATD7;
   306  000BBE  7E8C               	btg	3980,7,c	;volatile
   307                           
   308                           ;main.c: 73: Delay1KTCYx(250);
   309  000BC0  0EFA               	movlw	250
   310  000BC2  EC1C  F006         	call	_Delay1KTCYx
   311  000BC6  D7F8               	goto	l1353
   312  000BC8  EF60  F000         	goto	start
   313  000BCC                     __end_of_main:
   314                           	opt stack 0
   315                           tblptru	equ	0xFF8
   316                           
   317 ;; *************** function _LCDInitialDisplay *****************
   318 ;; Defined at:
   319 ;;		line 7 in file "lcddisplay.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;		None               void
   326 ;; Registers used:
   327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; Hardware stack levels required when called:    7
   340 ;; This function calls:
   341 ;;		_SetLCDCGRamAddr
   342 ;;		_SetLCDDDRamAddr
   343 ;;		_WriteCmdLCD
   344 ;;		_WriteDataLCD
   345 ;;		_putIntLCD
   346 ;;		_putLCD
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353  0006D4                     __ptext1:
   354                           	opt stack 0
   355  0006D4                     _LCDInitialDisplay:
   356                           	opt stack 23
   357                           
   358                           ;lcddisplay.c: 12: SetLCDCGRamAddr(0x00);
   359                           
   360                           ;incstack = 0
   361  0006D4  0E00               	movlw	0
   362  0006D6  ECAA  F004         	call	_SetLCDCGRamAddr
   363                           
   364                           ;lcddisplay.c: 13: WriteDataLCD(0b00000);
   365  0006DA  0E00               	movlw	0
   366  0006DC  EC4F  F005         	call	_WriteDataLCD
   367                           
   368                           ;lcddisplay.c: 14: WriteDataLCD(0b01111);
   369  0006E0  0E0F               	movlw	15
   370  0006E2  EC4F  F005         	call	_WriteDataLCD
   371                           
   372                           ;lcddisplay.c: 15: WriteDataLCD(0b10001);
   373  0006E6  0E11               	movlw	17
   374  0006E8  EC4F  F005         	call	_WriteDataLCD
   375                           
   376                           ;lcddisplay.c: 16: WriteDataLCD(0b10001);
   377  0006EC  0E11               	movlw	17
   378  0006EE  EC4F  F005         	call	_WriteDataLCD
   379                           
   380                           ;lcddisplay.c: 17: WriteDataLCD(0b10001);
   381  0006F2  0E11               	movlw	17
   382  0006F4  EC4F  F005         	call	_WriteDataLCD
   383                           
   384                           ;lcddisplay.c: 18: WriteDataLCD(0b01111);
   385  0006F8  0E0F               	movlw	15
   386  0006FA  EC4F  F005         	call	_WriteDataLCD
   387                           
   388                           ;lcddisplay.c: 19: WriteDataLCD(0b00111);
   389  0006FE  0E07               	movlw	7
   390  000700  EC4F  F005         	call	_WriteDataLCD
   391                           
   392                           ;lcddisplay.c: 20: WriteDataLCD(0b00111);
   393  000704  0E07               	movlw	7
   394  000706  EC4F  F005         	call	_WriteDataLCD
   395                           
   396                           ;lcddisplay.c: 23: SetLCDCGRamAddr(0x08);
   397  00070A  0E08               	movlw	8
   398  00070C  ECAA  F004         	call	_SetLCDCGRamAddr
   399                           
   400                           ;lcddisplay.c: 24: WriteDataLCD(0b11111);
   401  000710  0E1F               	movlw	31
   402  000712  EC4F  F005         	call	_WriteDataLCD
   403                           
   404                           ;lcddisplay.c: 25: WriteDataLCD(0b10001);
   405  000716  0E11               	movlw	17
   406  000718  EC4F  F005         	call	_WriteDataLCD
   407                           
   408                           ;lcddisplay.c: 26: WriteDataLCD(0b10001);
   409  00071C  0E11               	movlw	17
   410  00071E  EC4F  F005         	call	_WriteDataLCD
   411                           
   412                           ;lcddisplay.c: 27: WriteDataLCD(0b10101);
   413  000722  0E15               	movlw	21
   414  000724  EC4F  F005         	call	_WriteDataLCD
   415                           
   416                           ;lcddisplay.c: 28: WriteDataLCD(0b10001);
   417  000728  0E11               	movlw	17
   418  00072A  EC4F  F005         	call	_WriteDataLCD
   419                           
   420                           ;lcddisplay.c: 29: WriteDataLCD(0b10001);
   421  00072E  0E11               	movlw	17
   422  000730  EC4F  F005         	call	_WriteDataLCD
   423                           
   424                           ;lcddisplay.c: 30: WriteDataLCD(0b10001);
   425  000734  0E11               	movlw	17
   426  000736  EC4F  F005         	call	_WriteDataLCD
   427                           
   428                           ;lcddisplay.c: 31: WriteDataLCD(0b11111);
   429  00073A  0E1F               	movlw	31
   430  00073C  EC4F  F005         	call	_WriteDataLCD
   431                           
   432                           ;lcddisplay.c: 33: WriteCmdLCD(0b00000010);
   433  000740  0E02               	movlw	2
   434  000742  EC6F  F005         	call	_WriteCmdLCD
   435                           
   436                           ;lcddisplay.c: 34: putLCD( (unsigned char *)"Testing ");
   437  000746  0E0B               	movlw	low STR_1
   438  000748  6E22               	movwf	putLCD@buffer,c
   439  00074A  0E06               	movlw	high STR_1
   440  00074C  6E23               	movwf	putLCD@buffer+1,c
   441  00074E  EC4C  F004         	call	_putLCD	;wreg free
   442                           
   443                           ;lcddisplay.c: 36: putIntLCD(3455);
   444  000752  0E0D               	movlw	13
   445  000754  6E31               	movwf	putIntLCD@n+1,c
   446  000756  0E7F               	movlw	127
   447  000758  6E30               	movwf	putIntLCD@n,c
   448  00075A  ECE6  F005         	call	_putIntLCD	;wreg free
   449                           
   450                           ;lcddisplay.c: 38: SetLCDDDRamAddr(0x040);
   451  00075E  0E40               	movlw	64
   452  000760  ECD7  F004         	call	_SetLCDDDRamAddr
   453                           
   454                           ;lcddisplay.c: 39: putLCD( (unsigned char *)"Line 000 ");
   455  000764  0E01               	movlw	low STR_2
   456  000766  6E22               	movwf	putLCD@buffer,c
   457  000768  0E06               	movlw	high STR_2
   458  00076A  6E23               	movwf	putLCD@buffer+1,c
   459  00076C  EC4C  F004         	call	_putLCD	;wreg free
   460                           
   461                           ;lcddisplay.c: 41: WriteDataLCD(0);
   462  000770  0E00               	movlw	0
   463  000772  EC4F  F005         	call	_WriteDataLCD
   464                           
   465                           ;lcddisplay.c: 42: WriteDataLCD(1);
   466  000776  0E01               	movlw	1
   467  000778  EC4F  F005         	call	_WriteDataLCD
   468  00077C  0012               	return		;funcret
   469  00077E                     __end_of_LCDInitialDisplay:
   470                           	opt stack 0
   471                           tblptru	equ	0xFF8
   472                           
   473 ;; *************** function _putIntLCD *****************
   474 ;; Defined at:
   475 ;;		line 378 in file "lcddisplay.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  n               2   47[COMRAM] short 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  result          4   49[COMRAM] unsigned char [4]
   480 ;; Return value:  Size  Location     Type
   481 ;;		None               void
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   489 ;;      Params:         2       0       0       0       0       0       0
   490 ;;      Locals:         4       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0
   492 ;;      Totals:         6       0       0       0       0       0       0
   493 ;;Total ram usage:        6 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; Hardware stack levels required when called:    6
   496 ;; This function calls:
   497 ;;		_putLCD
   498 ;;		_utoa
   499 ;; This function is called by:
   500 ;;		_LCDInitialDisplay
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text2
   505  000BCC                     __ptext2:
   506                           	opt stack 0
   507  000BCC                     _putIntLCD:
   508                           	opt stack 23
   509                           
   510                           ;lcddisplay.c: 379: unsigned char result[4];
   511                           ;lcddisplay.c: 380: utoa((char*)result, n, 10);
   512                           
   513                           ;incstack = 0
   514  000BCC  0E32               	movlw	low putIntLCD@result
   515  000BCE  6E27               	movwf	utoa@buf,c
   516  000BD0  0E00               	movlw	high putIntLCD@result
   517  000BD2  6E28               	movwf	utoa@buf+1,c
   518  000BD4  C030  F029         	movff	putIntLCD@n,utoa@val
   519  000BD8  C031  F02A         	movff	putIntLCD@n+1,utoa@val+1
   520  000BDC  0E00               	movlw	0
   521  000BDE  6E2C               	movwf	utoa@base+1,c
   522  000BE0  0E0A               	movlw	10
   523  000BE2  6E2B               	movwf	utoa@base,c
   524  000BE4  ECBF  F003         	call	_utoa	;wreg free
   525                           
   526                           ;lcddisplay.c: 381: putLCD(result);
   527  000BE8  0E32               	movlw	low putIntLCD@result
   528  000BEA  6E22               	movwf	putLCD@buffer,c
   529  000BEC  0E00               	movlw	high putIntLCD@result
   530  000BEE  6E23               	movwf	putLCD@buffer+1,c
   531  000BF0  EC4C  F004         	call	_putLCD	;wreg free
   532  000BF4  0012               	return		;funcret
   533  000BF6                     __end_of_putIntLCD:
   534                           	opt stack 0
   535                           tblptru	equ	0xFF8
   536                           
   537 ;; *************** function _utoa *****************
   538 ;; Defined at:
   539 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  buf             2   38[COMRAM] PTR unsigned char 
   542 ;;		 -> putIntLCD@result(4), 
   543 ;;  val             2   40[COMRAM] unsigned int 
   544 ;;  base            2   42[COMRAM] int 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  v               2   44[COMRAM] unsigned int 
   547 ;;  c               1   46[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2   38[COMRAM] PTR unsigned char 
   550 ;; Registers used:
   551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   557 ;;      Params:         6       0       0       0       0       0       0
   558 ;;      Locals:         3       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0
   560 ;;      Totals:         9       0       0       0       0       0       0
   561 ;;Total ram usage:        9 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    3
   564 ;; This function calls:
   565 ;;		___lwdiv
   566 ;;		___lwmod
   567 ;; This function is called by:
   568 ;;		_putIntLCD
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text3
   573  00077E                     __ptext3:
   574                           	opt stack 0
   575  00077E                     _utoa:
   576                           	opt stack 25
   577                           
   578                           ;incstack = 0
   579  00077E  C029  F02D         	movff	utoa@val,utoa@v
   580  000782  C02A  F02E         	movff	utoa@val+1,utoa@v+1
   581  000786  D000               	goto	l1291
   582  000788                     l1291:
   583  000788  C02D  F020         	movff	utoa@v,___lwdiv@dividend
   584  00078C  C02E  F021         	movff	utoa@v+1,___lwdiv@dividend+1
   585  000790  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   586  000794  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   587  000798  EC7C  F004         	call	___lwdiv	;wreg free
   588  00079C  C020  F02D         	movff	?___lwdiv,utoa@v
   589  0007A0  C021  F02E         	movff	?___lwdiv+1,utoa@v+1
   590  0007A4  4A27               	infsnz	utoa@buf,f,c
   591  0007A6  2A28               	incf	utoa@buf+1,f,c
   592  0007A8  502D               	movf	utoa@v,w,c
   593  0007AA  102E               	iorwf	utoa@v+1,w,c
   594  0007AC  A4D8               	btfss	status,2,c
   595  0007AE  D7EC               	goto	l1291
   596  0007B0  C027  FFD9         	movff	utoa@buf,fsr2l
   597  0007B4  C028  FFDA         	movff	utoa@buf+1,fsr2h
   598  0007B8  0E00               	movlw	0
   599  0007BA  6EDF               	movwf	indf2,c
   600  0007BC  0627               	decf	utoa@buf,f,c
   601  0007BE  A0D8               	btfss	status,0,c
   602  0007C0  0628               	decf	utoa@buf+1,f,c
   603  0007C2  D000               	goto	l1301
   604  0007C4                     l1301:
   605  0007C4  C029  F020         	movff	utoa@val,___lwmod@dividend
   606  0007C8  C02A  F021         	movff	utoa@val+1,___lwmod@dividend+1
   607  0007CC  C02B  F022         	movff	utoa@base,___lwmod@divisor
   608  0007D0  C02C  F023         	movff	utoa@base+1,___lwmod@divisor+1
   609  0007D4  EC29  F005         	call	___lwmod	;wreg free
   610  0007D8  5020               	movf	?___lwmod,w,c
   611  0007DA  6E2F               	movwf	utoa@c,c
   612  0007DC  C029  F020         	movff	utoa@val,___lwdiv@dividend
   613  0007E0  C02A  F021         	movff	utoa@val+1,___lwdiv@dividend+1
   614  0007E4  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   615  0007E8  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   616  0007EC  EC7C  F004         	call	___lwdiv	;wreg free
   617  0007F0  C020  F029         	movff	?___lwdiv,utoa@val
   618  0007F4  C021  F02A         	movff	?___lwdiv+1,utoa@val+1
   619  0007F8  0E09               	movlw	9
   620  0007FA  642F               	cpfsgt	utoa@c,c
   621  0007FC  D002               	goto	l668
   622  0007FE  0E07               	movlw	7
   623  000800  262F               	addwf	utoa@c,f,c
   624  000802                     l668:
   625  000802  0E30               	movlw	48
   626  000804  262F               	addwf	utoa@c,f,c
   627  000806  C027  FFD9         	movff	utoa@buf,fsr2l
   628  00080A  C028  FFDA         	movff	utoa@buf+1,fsr2h
   629  00080E  C02F  FFDF         	movff	utoa@c,indf2
   630  000812  0627               	decf	utoa@buf,f,c
   631  000814  A0D8               	btfss	status,0,c
   632  000816  0628               	decf	utoa@buf+1,f,c
   633  000818  5029               	movf	utoa@val,w,c
   634  00081A  102A               	iorwf	utoa@val+1,w,c
   635  00081C  A4D8               	btfss	status,2,c
   636  00081E  D7D2               	goto	l1301
   637                           
   638                           ;	Return value of _utoa is never used
   639  000820  4A27               	infsnz	utoa@buf,f,c
   640  000822  2A28               	incf	utoa@buf+1,f,c
   641  000824  0012               	return	
   642  000826  0012               	return		;funcret
   643  000828                     __end_of_utoa:
   644                           	opt stack 0
   645                           tblptru	equ	0xFF8
   646                           indf2	equ	0xFDF
   647                           fsr2h	equ	0xFDA
   648                           fsr2l	equ	0xFD9
   649                           status	equ	0xFD8
   650                           
   651 ;; *************** function ___lwmod *****************
   652 ;; Defined at:
   653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  dividend        2   31[COMRAM] unsigned int 
   656 ;;  divisor         2   33[COMRAM] unsigned int 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  counter         1   35[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  2   31[COMRAM] unsigned int 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         4       0       0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0
   671 ;;      Totals:         5       0       0       0       0       0       0
   672 ;;Total ram usage:        5 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_utoa
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text4
   683  000A52                     __ptext4:
   684                           	opt stack 0
   685  000A52                     ___lwmod:
   686                           	opt stack 25
   687                           
   688                           ;incstack = 0
   689  000A52  5022               	movf	___lwmod@divisor,w,c
   690  000A54  1023               	iorwf	___lwmod@divisor+1,w,c
   691  000A56  B4D8               	btfsc	status,2,c
   692  000A58  D01D               	goto	l772
   693  000A5A  0E01               	movlw	1
   694  000A5C  6E24               	movwf	___lwmod@counter,c
   695  000A5E  D005               	goto	l1269
   696  000A60                     l1267:
   697  000A60  90D8               	bcf	status,0,c
   698  000A62  3622               	rlcf	___lwmod@divisor,f,c
   699  000A64  3623               	rlcf	___lwmod@divisor+1,f,c
   700  000A66  2A24               	incf	___lwmod@counter,f,c
   701  000A68  D000               	goto	l1269
   702  000A6A                     l1269:
   703  000A6A  BE23               	btfsc	___lwmod@divisor+1,7,c
   704  000A6C  D002               	goto	l1271
   705  000A6E  D7F8               	goto	l1267
   706  000A70  D000               	goto	l1271
   707  000A72                     l1271:
   708  000A72  5022               	movf	___lwmod@divisor,w,c
   709  000A74  5C20               	subwf	___lwmod@dividend,w,c
   710  000A76  5023               	movf	___lwmod@divisor+1,w,c
   711  000A78  5821               	subwfb	___lwmod@dividend+1,w,c
   712  000A7A  A0D8               	btfss	status,0,c
   713  000A7C  D005               	goto	l1275
   714  000A7E  5022               	movf	___lwmod@divisor,w,c
   715  000A80  5E20               	subwf	___lwmod@dividend,f,c
   716  000A82  5023               	movf	___lwmod@divisor+1,w,c
   717  000A84  5A21               	subwfb	___lwmod@dividend+1,f,c
   718  000A86  D000               	goto	l1275
   719  000A88                     l1275:
   720  000A88  90D8               	bcf	status,0,c
   721  000A8A  3223               	rrcf	___lwmod@divisor+1,f,c
   722  000A8C  3222               	rrcf	___lwmod@divisor,f,c
   723  000A8E  2E24               	decfsz	___lwmod@counter,f,c
   724  000A90  D7F0               	goto	l1271
   725  000A92  D000               	goto	l772
   726  000A94                     l772:
   727  000A94  C020  F020         	movff	___lwmod@dividend,?___lwmod
   728  000A98  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
   729  000A9C  0012               	return		;funcret
   730  000A9E                     __end_of___lwmod:
   731                           	opt stack 0
   732                           tblptru	equ	0xFF8
   733                           indf2	equ	0xFDF
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8
   737                           
   738 ;; *************** function ___lwdiv *****************
   739 ;; Defined at:
   740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  dividend        2   31[COMRAM] unsigned int 
   743 ;;  divisor         2   33[COMRAM] unsigned int 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  quotient        2   35[COMRAM] unsigned int 
   746 ;;  counter         1   37[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2   31[COMRAM] unsigned int 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   756 ;;      Params:         4       0       0       0       0       0       0
   757 ;;      Locals:         3       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0
   759 ;;      Totals:         7       0       0       0       0       0       0
   760 ;;Total ram usage:        7 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    2
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_utoa
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text5
   771  0008F8                     __ptext5:
   772                           	opt stack 0
   773  0008F8                     ___lwdiv:
   774                           	opt stack 25
   775                           
   776                           ;incstack = 0
   777  0008F8  0E00               	movlw	0
   778  0008FA  6E25               	movwf	___lwdiv@quotient+1,c
   779  0008FC  0E00               	movlw	0
   780  0008FE  6E24               	movwf	___lwdiv@quotient,c
   781  000900  5022               	movf	___lwdiv@divisor,w,c
   782  000902  1023               	iorwf	___lwdiv@divisor+1,w,c
   783  000904  B4D8               	btfsc	status,2,c
   784  000906  D021               	goto	l762
   785  000908  0E01               	movlw	1
   786  00090A  6E26               	movwf	___lwdiv@counter,c
   787  00090C  D005               	goto	l1249
   788  00090E                     l1247:
   789  00090E  90D8               	bcf	status,0,c
   790  000910  3622               	rlcf	___lwdiv@divisor,f,c
   791  000912  3623               	rlcf	___lwdiv@divisor+1,f,c
   792  000914  2A26               	incf	___lwdiv@counter,f,c
   793  000916  D000               	goto	l1249
   794  000918                     l1249:
   795  000918  BE23               	btfsc	___lwdiv@divisor+1,7,c
   796  00091A  D002               	goto	l1251
   797  00091C  D7F8               	goto	l1247
   798  00091E  D000               	goto	l1251
   799  000920                     l1251:
   800  000920  90D8               	bcf	status,0,c
   801  000922  3624               	rlcf	___lwdiv@quotient,f,c
   802  000924  3625               	rlcf	___lwdiv@quotient+1,f,c
   803  000926  5022               	movf	___lwdiv@divisor,w,c
   804  000928  5C20               	subwf	___lwdiv@dividend,w,c
   805  00092A  5023               	movf	___lwdiv@divisor+1,w,c
   806  00092C  5821               	subwfb	___lwdiv@dividend+1,w,c
   807  00092E  A0D8               	btfss	status,0,c
   808  000930  D006               	goto	l1259
   809  000932  5022               	movf	___lwdiv@divisor,w,c
   810  000934  5E20               	subwf	___lwdiv@dividend,f,c
   811  000936  5023               	movf	___lwdiv@divisor+1,w,c
   812  000938  5A21               	subwfb	___lwdiv@dividend+1,f,c
   813  00093A  8024               	bsf	___lwdiv@quotient,0,c
   814  00093C  D000               	goto	l1259
   815  00093E                     l1259:
   816  00093E  90D8               	bcf	status,0,c
   817  000940  3223               	rrcf	___lwdiv@divisor+1,f,c
   818  000942  3222               	rrcf	___lwdiv@divisor,f,c
   819  000944  2E26               	decfsz	___lwdiv@counter,f,c
   820  000946  D7EC               	goto	l1251
   821  000948  D000               	goto	l762
   822  00094A                     l762:
   823  00094A  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
   824  00094E  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
   825  000952  0012               	return		;funcret
   826  000954                     __end_of___lwdiv:
   827                           	opt stack 0
   828                           tblptru	equ	0xFF8
   829                           indf2	equ	0xFDF
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _putLCD *****************
   835 ;; Defined at:
   836 ;;		line 385 in file "lcddisplay.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  buffer          2   33[COMRAM] PTR unsigned char 
   839 ;;		 -> putIntLCD@result(4), STR_2(10), STR_1(9), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   851 ;;      Params:         2       0       0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0
   854 ;;      Totals:         2       0       0       0       0       0       0
   855 ;;Total ram usage:        2 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    5
   858 ;; This function calls:
   859 ;;		_BusyLCD
   860 ;;		_WriteDataLCD
   861 ;; This function is called by:
   862 ;;		_LCDInitialDisplay
   863 ;;		_putIntLCD
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text6
   868  000898                     __ptext6:
   869                           	opt stack 0
   870  000898                     _putLCD:
   871                           	opt stack 24
   872                           
   873                           ;lcddisplay.c: 387: while(*buffer)
   874                           
   875                           ;incstack = 0
   876  000898  D01B               	goto	l1287
   877                           
   878                           ;lcddisplay.c: 388: {
   879                           ;lcddisplay.c: 389: while(BusyLCD());
   880  00089A  D000               	goto	l1281
   881  00089C                     l1281:
   882  00089C  ECAD  F005         	call	_BusyLCD	;wreg free
   883  0008A0  0900               	iorlw	0
   884  0008A2  A4D8               	btfss	status,2,c
   885  0008A4  D7FB               	goto	l1281
   886                           
   887                           ;lcddisplay.c: 390: WriteDataLCD(*buffer);
   888  0008A6  C022  FFF6         	movff	putLCD@buffer,tblptrl
   889  0008AA  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   890  0008AE  6AF8               	clrf	tblptru,c
   891  0008B0  0E05               	movlw	(high __ramtop+-1)
   892  0008B2  64F7               	cpfsgt	tblptrh,c
   893  0008B4  D003               	bra	u417
   894  0008B6  0008               	tblrd		*
   895  0008B8  50F5               	movf	tablat,w,c
   896  0008BA  D005               	bra	u410
   897  0008BC                     u417:
   898  0008BC  CFF6 FFE9          	movff	tblptrl,fsr0l
   899  0008C0  CFF7 FFEA          	movff	tblptrh,fsr0h
   900  0008C4  50EF               	movf	indf0,w,c
   901  0008C6                     u410:
   902  0008C6  EC4F  F005         	call	_WriteDataLCD
   903                           
   904                           ;lcddisplay.c: 391: buffer++;
   905  0008CA  4A22               	infsnz	putLCD@buffer,f,c
   906  0008CC  2A23               	incf	putLCD@buffer+1,f,c
   907  0008CE  D000               	goto	l1287
   908  0008D0                     l1287:
   909  0008D0  C022  FFF6         	movff	putLCD@buffer,tblptrl
   910  0008D4  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   911  0008D8  6AF8               	clrf	tblptru,c
   912  0008DA  0E05               	movlw	(high __ramtop+-1)
   913  0008DC  64F7               	cpfsgt	tblptrh,c
   914  0008DE  D003               	bra	u427
   915  0008E0  0008               	tblrd		*
   916  0008E2  50F5               	movf	tablat,w,c
   917  0008E4  D005               	bra	u420
   918  0008E6                     u427:
   919  0008E6  CFF6 FFE9          	movff	tblptrl,fsr0l
   920  0008EA  CFF7 FFEA          	movff	tblptrh,fsr0h
   921  0008EE  50EF               	movf	indf0,w,c
   922  0008F0                     u420:
   923  0008F0  0900               	iorlw	0
   924  0008F2  A4D8               	btfss	status,2,c
   925  0008F4  D7D3               	goto	l1281
   926                           
   927                           ;lcddisplay.c: 392: }
   928                           ;lcddisplay.c: 393: return;
   929  0008F6  0012               	return		;funcret
   930  0008F8                     __end_of_putLCD:
   931                           	opt stack 0
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           indf0	equ	0xFEF
   937                           fsr0h	equ	0xFEA
   938                           fsr0l	equ	0xFE9
   939                           indf2	equ	0xFDF
   940                           fsr2h	equ	0xFDA
   941                           fsr2l	equ	0xFD9
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _WriteDataLCD *****************
   945 ;; Defined at:
   946 ;;		line 396 in file "lcddisplay.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  data            1    wreg     unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  data            1   32[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   960 ;;      Params:         0       0       0       0       0       0       0
   961 ;;      Locals:         1       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    4
   967 ;; This function calls:
   968 ;;		_DelayFor18TCY
   969 ;; This function is called by:
   970 ;;		_LCDInitialDisplay
   971 ;;		_putLCD
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text7
   976  000A9E                     __ptext7:
   977                           	opt stack 0
   978  000A9E                     _WriteDataLCD:
   979                           	opt stack 24
   980                           
   981                           ;incstack = 0
   982                           ;WriteDataLCD@data stored from wreg
   983  000A9E  6E21               	movwf	WriteDataLCD@data,c
   984                           
   985                           ;lcddisplay.c: 415: TRISD &= 0xf0;
   986  000AA0  0EF0               	movlw	240
   987  000AA2  1695               	andwf	3989,f,c	;volatile
   988                           
   989                           ;lcddisplay.c: 416: PORTD &= 0xf0;
   990  000AA4  0EF0               	movlw	240
   991  000AA6  1683               	andwf	3971,f,c	;volatile
   992                           
   993                           ;lcddisplay.c: 417: PORTD |= ((data>>4)&0x0f);
   994  000AA8  3821               	swapf	WriteDataLCD@data,w,c
   995  000AAA  0B0F               	andlw	15
   996  000AAC  0B0F               	andlw	15
   997  000AAE  1283               	iorwf	3971,f,c	;volatile
   998                           
   999                           ;lcddisplay.c: 419: LATEbits.LATE0 = 1;
  1000  000AB0  808D               	bsf	3981,0,c	;volatile
  1001                           
  1002                           ;lcddisplay.c: 420: LATEbits.LATE1 = 0;
  1003  000AB2  928D               	bcf	3981,1,c	;volatile
  1004                           
  1005                           ;lcddisplay.c: 421: DelayFor18TCY();
  1006  000AB4  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1007                           
  1008                           ;lcddisplay.c: 422: LATEbits.LATE2 = 1;
  1009  000AB8  848D               	bsf	3981,2,c	;volatile
  1010                           
  1011                           ;lcddisplay.c: 423: DelayFor18TCY();
  1012  000ABA  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1013                           
  1014                           ;lcddisplay.c: 424: LATEbits.LATE2 = 0;
  1015  000ABE  948D               	bcf	3981,2,c	;volatile
  1016                           
  1017                           ;lcddisplay.c: 429: PORTD &= 0xf0;
  1018  000AC0  0EF0               	movlw	240
  1019  000AC2  1683               	andwf	3971,f,c	;volatile
  1020                           
  1021                           ;lcddisplay.c: 430: PORTD |= (data&0x0f);
  1022  000AC4  5021               	movf	WriteDataLCD@data,w,c
  1023  000AC6  0B0F               	andlw	15
  1024  000AC8  1283               	iorwf	3971,f,c	;volatile
  1025                           
  1026                           ;lcddisplay.c: 432: DelayFor18TCY();
  1027  000ACA  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1028                           
  1029                           ;lcddisplay.c: 433: LATEbits.LATE2 = 1;
  1030  000ACE  848D               	bsf	3981,2,c	;volatile
  1031                           
  1032                           ;lcddisplay.c: 434: DelayFor18TCY();
  1033  000AD0  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1034                           
  1035                           ;lcddisplay.c: 435: LATEbits.LATE2 = 0;
  1036  000AD4  948D               	bcf	3981,2,c	;volatile
  1037                           
  1038                           ;lcddisplay.c: 439: TRISD |= 0x0f;
  1039  000AD6  0E0F               	movlw	15
  1040  000AD8  1295               	iorwf	3989,f,c	;volatile
  1041  000ADA  0012               	return	
  1042                           
  1043                           ;lcddisplay.c: 443: return;
  1044  000ADC  0012               	return		;funcret
  1045  000ADE                     __end_of_WriteDataLCD:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           indf0	equ	0xFEF
  1052                           fsr0h	equ	0xFEA
  1053                           fsr0l	equ	0xFE9
  1054                           indf2	equ	0xFDF
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _SetLCDCGRamAddr *****************
  1060 ;; Defined at:
  1061 ;;		line 326 in file "lcddisplay.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  CGaddr          1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  CGaddr          1   35[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;		None               void
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1075 ;;      Params:         0       0       0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0
  1077 ;;      Temps:          3       0       0       0       0       0       0
  1078 ;;      Totals:         4       0       0       0       0       0       0
  1079 ;;Total ram usage:        4 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    4
  1082 ;; This function calls:
  1083 ;;		_DelayFor18TCY
  1084 ;; This function is called by:
  1085 ;;		_LCDInitialDisplay
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text8
  1090  000954                     __ptext8:
  1091                           	opt stack 0
  1092  000954                     _SetLCDCGRamAddr:
  1093                           	opt stack 25
  1094                           
  1095                           ;incstack = 0
  1096                           ;SetLCDCGRamAddr@CGaddr stored from wreg
  1097  000954  6E24               	movwf	SetLCDCGRamAddr@CGaddr,c
  1098                           
  1099                           ;lcddisplay.c: 345: TRISD &= 0xf0;
  1100  000956  0EF0               	movlw	240
  1101  000958  1695               	andwf	3989,f,c	;volatile
  1102                           
  1103                           ;lcddisplay.c: 346: PORTD &= 0xf0;
  1104  00095A  0EF0               	movlw	240
  1105  00095C  1683               	andwf	3971,f,c	;volatile
  1106                           
  1107                           ;lcddisplay.c: 347: PORTD |= (((CGaddr |0b01000000)>>4) & 0x0f);
  1108  00095E  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1109  000960  6E21               	movwf	??_SetLCDCGRamAddr& (0+255),c
  1110  000962  6A22               	clrf	(??_SetLCDCGRamAddr+1)& (0+255),c
  1111  000964  0E40               	movlw	64
  1112  000966  1221               	iorwf	??_SetLCDCGRamAddr,f,c
  1113  000968  0E00               	movlw	0
  1114  00096A  1222               	iorwf	??_SetLCDCGRamAddr+1,f,c
  1115  00096C  0E04               	movlw	4
  1116  00096E  6E23               	movwf	(??_SetLCDCGRamAddr+2)& (0+255),c
  1117  000970                     u175:
  1118  000970  3422               	rlcf	??_SetLCDCGRamAddr+1,w,c
  1119  000972  3222               	rrcf	??_SetLCDCGRamAddr+1,f,c
  1120  000974  3221               	rrcf	??_SetLCDCGRamAddr,f,c
  1121  000976  2E23               	decfsz	(??_SetLCDCGRamAddr+2)& (0+255),f,c
  1122  000978  D7FB               	goto	u175
  1123  00097A  5021               	movf	??_SetLCDCGRamAddr,w,c
  1124  00097C  0B0F               	andlw	15
  1125  00097E  1283               	iorwf	3971,f,c	;volatile
  1126                           
  1127                           ;lcddisplay.c: 349: LATEbits.LATE1 = 0;
  1128  000980  928D               	bcf	3981,1,c	;volatile
  1129                           
  1130                           ;lcddisplay.c: 350: LATEbits.LATE0 = 0;
  1131  000982  908D               	bcf	3981,0,c	;volatile
  1132                           
  1133                           ;lcddisplay.c: 351: DelayFor18TCY();
  1134  000984  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1135                           
  1136                           ;lcddisplay.c: 352: LATEbits.LATE2 = 1;
  1137  000988  848D               	bsf	3981,2,c	;volatile
  1138                           
  1139                           ;lcddisplay.c: 353: DelayFor18TCY();
  1140  00098A  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1141                           
  1142                           ;lcddisplay.c: 354: LATEbits.LATE2 = 0;
  1143  00098E  948D               	bcf	3981,2,c	;volatile
  1144                           
  1145                           ;lcddisplay.c: 359: PORTD &= 0xf0;
  1146  000990  0EF0               	movlw	240
  1147  000992  1683               	andwf	3971,f,c	;volatile
  1148                           
  1149                           ;lcddisplay.c: 360: PORTD |= (CGaddr&0x0f);
  1150  000994  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1151  000996  0B0F               	andlw	15
  1152  000998  1283               	iorwf	3971,f,c	;volatile
  1153                           
  1154                           ;lcddisplay.c: 362: DelayFor18TCY();
  1155  00099A  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1156                           
  1157                           ;lcddisplay.c: 363: LATEbits.LATE2 = 1;
  1158  00099E  848D               	bsf	3981,2,c	;volatile
  1159                           
  1160                           ;lcddisplay.c: 364: DelayFor18TCY();
  1161  0009A0  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1162                           
  1163                           ;lcddisplay.c: 365: LATEbits.LATE2 = 0;
  1164  0009A4  948D               	bcf	3981,2,c	;volatile
  1165                           
  1166                           ;lcddisplay.c: 369: TRISD |= 0x0f;
  1167  0009A6  0E0F               	movlw	15
  1168  0009A8  1295               	iorwf	3989,f,c	;volatile
  1169  0009AA  0012               	return	
  1170                           
  1171                           ;lcddisplay.c: 373: return;
  1172  0009AC  0012               	return		;funcret
  1173  0009AE                     __end_of_SetLCDCGRamAddr:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           indf0	equ	0xFEF
  1180                           fsr0h	equ	0xFEA
  1181                           fsr0l	equ	0xFE9
  1182                           indf2	equ	0xFDF
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function _InitPorts *****************
  1188 ;; Defined at:
  1189 ;;		line 42 in file "ports.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;		None               void
  1196 ;; Registers used:
  1197 ;;		wreg, status,2
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1203 ;;      Params:         0       0       0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0
  1206 ;;      Totals:         0       0       0       0       0       0       0
  1207 ;;Total ram usage:        0 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    2
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text9
  1218  000BF6                     __ptext9:
  1219                           	opt stack 0
  1220  000BF6                     _InitPorts:
  1221                           	opt stack 28
  1222                           
  1223                           ;ports.c: 44: ANSEL = 0;
  1224                           
  1225                           ;incstack = 0
  1226  000BF6  0E00               	movlw	0
  1227  000BF8  6E7E               	movwf	3966,c	;volatile
  1228                           
  1229                           ;ports.c: 45: ANSELH = 0;
  1230  000BFA  0E00               	movlw	0
  1231  000BFC  6E7F               	movwf	3967,c	;volatile
  1232                           
  1233                           ;ports.c: 57: INTCON2bits.RBPU = 0;
  1234  000BFE  9EF1               	bcf	intcon2,7,c	;volatile
  1235                           
  1236                           ;ports.c: 58: WPUBbits.WPUB0 = 1;
  1237  000C00  807C               	bsf	3964,0,c	;volatile
  1238                           
  1239                           ;ports.c: 60: TRISB = 0b00110111;
  1240  000C02  0E37               	movlw	55
  1241  000C04  6E93               	movwf	3987,c	;volatile
  1242                           
  1243                           ;ports.c: 64: TRISCbits.RC2 = 0;
  1244  000C06  9494               	bcf	3988,2,c	;volatile
  1245                           
  1246                           ;ports.c: 79: TRISD = 0b00010000;
  1247  000C08  0E10               	movlw	16
  1248  000C0A  6E95               	movwf	3989,c	;volatile
  1249  000C0C  0012               	return		;funcret
  1250  000C0E                     __end_of_InitPorts:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           intcon2	equ	0xFF1
  1257                           indf0	equ	0xFEF
  1258                           fsr0h	equ	0xFEA
  1259                           fsr0l	equ	0xFE9
  1260                           indf2	equ	0xFDF
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _InitMotorPWM *****************
  1266 ;; Defined at:
  1267 ;;		line 95 in file "ports.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg, status,2
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    2
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text10
  1296  000C4A                     __ptext10:
  1297                           	opt stack 0
  1298  000C4A                     _InitMotorPWM:
  1299                           	opt stack 28
  1300                           
  1301                           ;ports.c: 97: CCP1CON = 0b00001100;
  1302                           
  1303                           ;incstack = 0
  1304  000C4A  0E0C               	movlw	12
  1305  000C4C  6EBD               	movwf	4029,c	;volatile
  1306                           
  1307                           ;ports.c: 100: PR2 = 255;
  1308  000C4E  68CB               	setf	4043,c	;volatile
  1309                           
  1310                           ;ports.c: 103: T2CON = 0b00001100;
  1311  000C50  0E0C               	movlw	12
  1312  000C52  6ECA               	movwf	4042,c	;volatile
  1313                           
  1314                           ;ports.c: 106: CCPR1L = 0;
  1315  000C54  0E00               	movlw	0
  1316  000C56  6EBE               	movwf	4030,c	;volatile
  1317  000C58  0012               	return		;funcret
  1318  000C5A                     __end_of_InitMotorPWM:
  1319                           	opt stack 0
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           intcon2	equ	0xFF1
  1325                           indf0	equ	0xFEF
  1326                           fsr0h	equ	0xFEA
  1327                           fsr0l	equ	0xFE9
  1328                           indf2	equ	0xFDF
  1329                           fsr2h	equ	0xFDA
  1330                           fsr2l	equ	0xFD9
  1331                           status	equ	0xFD8
  1332                           
  1333 ;; *************** function _InitLCD *****************
  1334 ;; Defined at:
  1335 ;;		line 47 in file "lcddisplay.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;		None               void
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         0       0       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    6
  1356 ;; This function calls:
  1357 ;;		_BusyLCD
  1358 ;;		_OpenLCD
  1359 ;;		_WriteCmdLCD
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text11
  1366  000A02                     __ptext11:
  1367                           	opt stack 0
  1368  000A02                     _InitLCD:
  1369                           	opt stack 24
  1370                           
  1371                           ;lcddisplay.c: 48: OpenLCD(0b00101100 & 0b00111000);
  1372                           
  1373                           ;incstack = 0
  1374  000A02  0E28               	movlw	40
  1375  000A04  EC0B  F003         	call	_OpenLCD
  1376                           
  1377                           ;lcddisplay.c: 49: while(BusyLCD());
  1378  000A08  D000               	goto	l1171
  1379  000A0A                     l1171:
  1380  000A0A  ECAD  F005         	call	_BusyLCD	;wreg free
  1381  000A0E  0900               	iorlw	0
  1382  000A10  A4D8               	btfss	status,2,c
  1383  000A12  D7FB               	goto	l1171
  1384                           
  1385                           ;lcddisplay.c: 50: WriteCmdLCD(0x06);
  1386  000A14  0E06               	movlw	6
  1387  000A16  EC6F  F005         	call	_WriteCmdLCD
  1388                           
  1389                           ;lcddisplay.c: 51: while(BusyLCD());
  1390  000A1A  D000               	goto	l1175
  1391  000A1C                     l1175:
  1392  000A1C  ECAD  F005         	call	_BusyLCD	;wreg free
  1393  000A20  0900               	iorlw	0
  1394  000A22  A4D8               	btfss	status,2,c
  1395  000A24  D7FB               	goto	l1175
  1396                           
  1397                           ;lcddisplay.c: 52: WriteCmdLCD(0x0C);
  1398  000A26  0E0C               	movlw	12
  1399  000A28  EC6F  F005         	call	_WriteCmdLCD
  1400                           
  1401                           ;lcddisplay.c: 53: while(BusyLCD());
  1402  000A2C  D000               	goto	l1179
  1403  000A2E                     l1179:
  1404  000A2E  ECAD  F005         	call	_BusyLCD	;wreg free
  1405  000A32  0900               	iorlw	0
  1406  000A34  A4D8               	btfss	status,2,c
  1407  000A36  D7FB               	goto	l1179
  1408                           
  1409                           ;lcddisplay.c: 54: WriteCmdLCD(0x01);
  1410  000A38  0E01               	movlw	1
  1411  000A3A  EC6F  F005         	call	_WriteCmdLCD
  1412                           
  1413                           ;lcddisplay.c: 55: while(BusyLCD());
  1414  000A3E  D000               	goto	l1183
  1415  000A40                     l1183:
  1416  000A40  ECAD  F005         	call	_BusyLCD	;wreg free
  1417  000A44  0900               	iorlw	0
  1418  000A46  A4D8               	btfss	status,2,c
  1419  000A48  D7FB               	goto	l1183
  1420                           
  1421                           ;lcddisplay.c: 56: WriteCmdLCD(66);
  1422  000A4A  0E42               	movlw	66
  1423  000A4C  EC6F  F005         	call	_WriteCmdLCD
  1424  000A50  0012               	return		;funcret
  1425  000A52                     __end_of_InitLCD:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           intcon2	equ	0xFF1
  1432                           indf0	equ	0xFEF
  1433                           fsr0h	equ	0xFEA
  1434                           fsr0l	equ	0xFE9
  1435                           indf2	equ	0xFDF
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _OpenLCD *****************
  1441 ;; Defined at:
  1442 ;;		line 65 in file "lcddisplay.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  lcdtype         1    wreg     unsigned char 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  lcdtype         1   36[COMRAM] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1456 ;;      Params:         0       0       0       0       0       0       0
  1457 ;;      Locals:         1       0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0
  1459 ;;      Totals:         1       0       0       0       0       0       0
  1460 ;;Total ram usage:        1 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    5
  1463 ;; This function calls:
  1464 ;;		_BusyLCD
  1465 ;;		_BusyXLCD
  1466 ;;		_Delay100TCYx
  1467 ;;		_Delay10KTCYx
  1468 ;;		_SetLCDDDRamAddr
  1469 ;;		_WriteCmdLCD
  1470 ;; This function is called by:
  1471 ;;		_InitLCD
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text12
  1476  000616                     __ptext12:
  1477                           	opt stack 0
  1478  000616                     _OpenLCD:
  1479                           	opt stack 24
  1480                           
  1481                           ;incstack = 0
  1482                           ;OpenLCD@lcdtype stored from wreg
  1483  000616  6E25               	movwf	OpenLCD@lcdtype,c
  1484                           
  1485                           ;lcddisplay.c: 68: Delay100TCYx(38);
  1486  000618  0E26               	movlw	38
  1487  00061A  EC13  F006         	call	_Delay100TCYx
  1488                           
  1489                           ;lcddisplay.c: 79: PORTD &= 0xf0;
  1490  00061E  0EF0               	movlw	240
  1491  000620  1683               	andwf	3971,f,c	;volatile
  1492                           
  1493                           ;lcddisplay.c: 80: TRISD &= 0xF0;
  1494  000622  0EF0               	movlw	240
  1495  000624  1695               	andwf	3989,f,c	;volatile
  1496                           
  1497                           ;lcddisplay.c: 83: TRISEbits.TRISE1 = 0;
  1498  000626  9296               	bcf	3990,1,c	;volatile
  1499                           
  1500                           ;lcddisplay.c: 84: TRISEbits.TRISE0 = 0;
  1501  000628  9096               	bcf	3990,0,c	;volatile
  1502                           
  1503                           ;lcddisplay.c: 85: TRISEbits.TRISE2 = 0;
  1504  00062A  9496               	bcf	3990,2,c	;volatile
  1505                           
  1506                           ;lcddisplay.c: 86: LATEbits.LATE1 = 0;
  1507  00062C  928D               	bcf	3981,1,c	;volatile
  1508                           
  1509                           ;lcddisplay.c: 87: LATEbits.LATE0 = 0;
  1510  00062E  908D               	bcf	3981,0,c	;volatile
  1511                           
  1512                           ;lcddisplay.c: 88: LATEbits.LATE2 = 0;
  1513  000630  948D               	bcf	3981,2,c	;volatile
  1514                           
  1515                           ;lcddisplay.c: 91: Delay100TCYx(38);
  1516  000632  0E26               	movlw	38
  1517  000634  EC13  F006         	call	_Delay100TCYx
  1518                           
  1519                           ;lcddisplay.c: 94: WriteCmdLCD(0x30);
  1520  000638  0E30               	movlw	48
  1521  00063A  EC6F  F005         	call	_WriteCmdLCD
  1522                           
  1523                           ;lcddisplay.c: 95: Delay10KTCYx(0x05);
  1524  00063E  0E05               	movlw	5
  1525  000640  EC07  F006         	call	_Delay10KTCYx
  1526                           
  1527                           ;lcddisplay.c: 97: WriteCmdLCD(0x30);
  1528  000644  0E30               	movlw	48
  1529  000646  EC6F  F005         	call	_WriteCmdLCD
  1530                           
  1531                           ;lcddisplay.c: 98: Delay10KTCYx(0x01);
  1532  00064A  0E01               	movlw	1
  1533  00064C  EC07  F006         	call	_Delay10KTCYx
  1534                           
  1535                           ;lcddisplay.c: 101: WriteCmdLCD(0x32);
  1536  000650  0E32               	movlw	50
  1537  000652  EC6F  F005         	call	_WriteCmdLCD
  1538                           
  1539                           ;lcddisplay.c: 102: while( BusyXLCD() );
  1540  000656  D000               	goto	l1127
  1541  000658                     l1127:
  1542  000658  EC8F  F005         	call	_BusyXLCD	;wreg free
  1543  00065C  0900               	iorlw	0
  1544  00065E  B4D8               	btfsc	status,2,c
  1545  000660  D002               	goto	l1129
  1546  000662  D7FA               	goto	l1127
  1547                           
  1548                           ;lcddisplay.c: 107: while(BusyLCD());
  1549  000664  D000               	goto	l1129
  1550  000666                     l1129:
  1551  000666  ECAD  F005         	call	_BusyLCD	;wreg free
  1552  00066A  0900               	iorlw	0
  1553  00066C  A4D8               	btfss	status,2,c
  1554  00066E  D7FB               	goto	l1129
  1555                           
  1556                           ;lcddisplay.c: 108: WriteCmdLCD(lcdtype);
  1557  000670  5025               	movf	OpenLCD@lcdtype,w,c
  1558  000672  EC6F  F005         	call	_WriteCmdLCD
  1559                           
  1560                           ;lcddisplay.c: 111: while(BusyLCD());
  1561  000676  D000               	goto	l1133
  1562  000678                     l1133:
  1563  000678  ECAD  F005         	call	_BusyLCD	;wreg free
  1564  00067C  0900               	iorlw	0
  1565  00067E  A4D8               	btfss	status,2,c
  1566  000680  D7FB               	goto	l1133
  1567                           
  1568                           ;lcddisplay.c: 112: WriteCmdLCD(0b00001011&0b00001101&0b00001110);
  1569  000682  0E08               	movlw	8
  1570  000684  EC6F  F005         	call	_WriteCmdLCD
  1571                           
  1572                           ;lcddisplay.c: 113: while(BusyLCD());
  1573  000688  D000               	goto	l1137
  1574  00068A                     l1137:
  1575  00068A  ECAD  F005         	call	_BusyLCD	;wreg free
  1576  00068E  0900               	iorlw	0
  1577  000690  A4D8               	btfss	status,2,c
  1578  000692  D7FB               	goto	l1137
  1579                           
  1580                           ;lcddisplay.c: 114: WriteCmdLCD(0b00001111&0b00001111&0b00001111);
  1581  000694  0E0F               	movlw	15
  1582  000696  EC6F  F005         	call	_WriteCmdLCD
  1583                           
  1584                           ;lcddisplay.c: 117: while(BusyLCD());
  1585  00069A  D000               	goto	l1141
  1586  00069C                     l1141:
  1587  00069C  ECAD  F005         	call	_BusyLCD	;wreg free
  1588  0006A0  0900               	iorlw	0
  1589  0006A2  A4D8               	btfss	status,2,c
  1590  0006A4  D7FB               	goto	l1141
  1591                           
  1592                           ;lcddisplay.c: 118: WriteCmdLCD(0x01);
  1593  0006A6  0E01               	movlw	1
  1594  0006A8  EC6F  F005         	call	_WriteCmdLCD
  1595                           
  1596                           ;lcddisplay.c: 121: while(BusyLCD());
  1597  0006AC  D000               	goto	l1145
  1598  0006AE                     l1145:
  1599  0006AE  ECAD  F005         	call	_BusyLCD	;wreg free
  1600  0006B2  0900               	iorlw	0
  1601  0006B4  A4D8               	btfss	status,2,c
  1602  0006B6  D7FB               	goto	l1145
  1603                           
  1604                           ;lcddisplay.c: 122: WriteCmdLCD(0b00000100);
  1605  0006B8  0E04               	movlw	4
  1606  0006BA  EC6F  F005         	call	_WriteCmdLCD
  1607                           
  1608                           ;lcddisplay.c: 125: while(BusyLCD());
  1609  0006BE  D000               	goto	l1149
  1610  0006C0                     l1149:
  1611  0006C0  ECAD  F005         	call	_BusyLCD	;wreg free
  1612  0006C4  0900               	iorlw	0
  1613  0006C6  A4D8               	btfss	status,2,c
  1614  0006C8  D7FB               	goto	l1149
  1615                           
  1616                           ;lcddisplay.c: 126: SetLCDDDRamAddr(0x80);
  1617  0006CA  0E80               	movlw	128
  1618  0006CC  ECD7  F004         	call	_SetLCDDDRamAddr
  1619  0006D0  0012               	return	
  1620                           
  1621                           ;lcddisplay.c: 128: return;
  1622  0006D2  0012               	return		;funcret
  1623  0006D4                     __end_of_OpenLCD:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           intcon2	equ	0xFF1
  1630                           indf0	equ	0xFEF
  1631                           fsr0h	equ	0xFEA
  1632                           fsr0l	equ	0xFE9
  1633                           indf2	equ	0xFDF
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _WriteCmdLCD *****************
  1639 ;; Defined at:
  1640 ;;		line 131 in file "lcddisplay.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  cmd             1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  cmd             1   32[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;		None               void
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1654 ;;      Params:         0       0       0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0
  1657 ;;      Totals:         1       0       0       0       0       0       0
  1658 ;;Total ram usage:        1 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    4
  1661 ;; This function calls:
  1662 ;;		_DelayFor18TCY
  1663 ;; This function is called by:
  1664 ;;		_LCDInitialDisplay
  1665 ;;		_InitLCD
  1666 ;;		_OpenLCD
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text13
  1671  000ADE                     __ptext13:
  1672                           	opt stack 0
  1673  000ADE                     _WriteCmdLCD:
  1674                           	opt stack 25
  1675                           
  1676                           ;incstack = 0
  1677                           ;WriteCmdLCD@cmd stored from wreg
  1678  000ADE  6E21               	movwf	WriteCmdLCD@cmd,c
  1679                           
  1680                           ;lcddisplay.c: 196: TRISD &= 0xf0;
  1681  000AE0  0EF0               	movlw	240
  1682  000AE2  1695               	andwf	3989,f,c	;volatile
  1683                           
  1684                           ;lcddisplay.c: 197: PORTD &= 0xf0;
  1685  000AE4  0EF0               	movlw	240
  1686  000AE6  1683               	andwf	3971,f,c	;volatile
  1687                           
  1688                           ;lcddisplay.c: 198: PORTD |= (cmd>>4)&0x0f;
  1689  000AE8  3821               	swapf	WriteCmdLCD@cmd,w,c
  1690  000AEA  0B0F               	andlw	15
  1691  000AEC  0B0F               	andlw	15
  1692  000AEE  1283               	iorwf	3971,f,c	;volatile
  1693                           
  1694                           ;lcddisplay.c: 200: LATEbits.LATE1 = 0;
  1695  000AF0  928D               	bcf	3981,1,c	;volatile
  1696                           
  1697                           ;lcddisplay.c: 201: LATEbits.LATE0 = 0;
  1698  000AF2  908D               	bcf	3981,0,c	;volatile
  1699                           
  1700                           ;lcddisplay.c: 202: DelayFor18TCY();
  1701  000AF4  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1702                           
  1703                           ;lcddisplay.c: 203: LATEbits.LATE2 = 1;
  1704  000AF8  848D               	bsf	3981,2,c	;volatile
  1705                           
  1706                           ;lcddisplay.c: 204: DelayFor18TCY();
  1707  000AFA  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1708                           
  1709                           ;lcddisplay.c: 205: LATEbits.LATE2 = 0;
  1710  000AFE  948D               	bcf	3981,2,c	;volatile
  1711                           
  1712                           ;lcddisplay.c: 210: PORTD &= 0xf0;
  1713  000B00  0EF0               	movlw	240
  1714  000B02  1683               	andwf	3971,f,c	;volatile
  1715                           
  1716                           ;lcddisplay.c: 211: PORTD |= cmd&0x0f;
  1717  000B04  5021               	movf	WriteCmdLCD@cmd,w,c
  1718  000B06  0B0F               	andlw	15
  1719  000B08  1283               	iorwf	3971,f,c	;volatile
  1720                           
  1721                           ;lcddisplay.c: 213: DelayFor18TCY();
  1722  000B0A  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1723                           
  1724                           ;lcddisplay.c: 214: LATEbits.LATE2 = 1;
  1725  000B0E  848D               	bsf	3981,2,c	;volatile
  1726                           
  1727                           ;lcddisplay.c: 215: DelayFor18TCY();
  1728  000B10  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1729                           
  1730                           ;lcddisplay.c: 216: LATEbits.LATE2 = 0;
  1731  000B14  948D               	bcf	3981,2,c	;volatile
  1732                           
  1733                           ;lcddisplay.c: 220: TRISD |= 0x0f;
  1734  000B16  0E0F               	movlw	15
  1735  000B18  1295               	iorwf	3989,f,c	;volatile
  1736  000B1A  0012               	return	
  1737                           
  1738                           ;lcddisplay.c: 224: return;
  1739  000B1C  0012               	return		;funcret
  1740  000B1E                     __end_of_WriteCmdLCD:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           intcon2	equ	0xFF1
  1747                           indf0	equ	0xFEF
  1748                           fsr0h	equ	0xFEA
  1749                           fsr0l	equ	0xFE9
  1750                           indf2	equ	0xFDF
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _SetLCDDDRamAddr *****************
  1756 ;; Defined at:
  1757 ;;		line 276 in file "lcddisplay.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  DDaddr          1    wreg     unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  DDaddr          1   35[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1771 ;;      Params:         0       0       0       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0       0       0
  1773 ;;      Temps:          3       0       0       0       0       0       0
  1774 ;;      Totals:         4       0       0       0       0       0       0
  1775 ;;Total ram usage:        4 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		_DelayFor18TCY
  1780 ;; This function is called by:
  1781 ;;		_LCDInitialDisplay
  1782 ;;		_OpenLCD
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text14
  1787  0009AE                     __ptext14:
  1788                           	opt stack 0
  1789  0009AE                     _SetLCDDDRamAddr:
  1790                           	opt stack 25
  1791                           
  1792                           ;incstack = 0
  1793                           ;SetLCDDDRamAddr@DDaddr stored from wreg
  1794  0009AE  6E24               	movwf	SetLCDDDRamAddr@DDaddr,c
  1795                           
  1796                           ;lcddisplay.c: 295: TRISD &= 0xf0;
  1797  0009B0  0EF0               	movlw	240
  1798  0009B2  1695               	andwf	3989,f,c	;volatile
  1799                           
  1800                           ;lcddisplay.c: 296: PORTD &= 0xf0;
  1801  0009B4  0EF0               	movlw	240
  1802  0009B6  1683               	andwf	3971,f,c	;volatile
  1803                           
  1804                           ;lcddisplay.c: 297: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1805  0009B8  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1806  0009BA  6E21               	movwf	??_SetLCDDDRamAddr& (0+255),c
  1807  0009BC  6A22               	clrf	(??_SetLCDDDRamAddr+1)& (0+255),c
  1808  0009BE  8E21               	bsf	??_SetLCDDDRamAddr,7,c
  1809  0009C0  0E04               	movlw	4
  1810  0009C2  6E23               	movwf	(??_SetLCDDDRamAddr+2)& (0+255),c
  1811  0009C4                     u125:
  1812  0009C4  3422               	rlcf	??_SetLCDDDRamAddr+1,w,c
  1813  0009C6  3222               	rrcf	??_SetLCDDDRamAddr+1,f,c
  1814  0009C8  3221               	rrcf	??_SetLCDDDRamAddr,f,c
  1815  0009CA  2E23               	decfsz	(??_SetLCDDDRamAddr+2)& (0+255),f,c
  1816  0009CC  D7FB               	goto	u125
  1817  0009CE  5021               	movf	??_SetLCDDDRamAddr,w,c
  1818  0009D0  0B0F               	andlw	15
  1819  0009D2  1283               	iorwf	3971,f,c	;volatile
  1820                           
  1821                           ;lcddisplay.c: 299: LATEbits.LATE1 = 0;
  1822  0009D4  928D               	bcf	3981,1,c	;volatile
  1823                           
  1824                           ;lcddisplay.c: 300: LATEbits.LATE0 = 0;
  1825  0009D6  908D               	bcf	3981,0,c	;volatile
  1826                           
  1827                           ;lcddisplay.c: 301: DelayFor18TCY();
  1828  0009D8  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1829                           
  1830                           ;lcddisplay.c: 302: LATEbits.LATE2 = 1;
  1831  0009DC  848D               	bsf	3981,2,c	;volatile
  1832                           
  1833                           ;lcddisplay.c: 303: DelayFor18TCY();
  1834  0009DE  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1835                           
  1836                           ;lcddisplay.c: 304: LATEbits.LATE2 = 0;
  1837  0009E2  948D               	bcf	3981,2,c	;volatile
  1838                           
  1839                           ;lcddisplay.c: 309: PORTD &= 0xf0;
  1840  0009E4  0EF0               	movlw	240
  1841  0009E6  1683               	andwf	3971,f,c	;volatile
  1842                           
  1843                           ;lcddisplay.c: 310: PORTD |= (DDaddr&0x0f);
  1844  0009E8  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1845  0009EA  0B0F               	andlw	15
  1846  0009EC  1283               	iorwf	3971,f,c	;volatile
  1847                           
  1848                           ;lcddisplay.c: 312: DelayFor18TCY();
  1849  0009EE  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1850                           
  1851                           ;lcddisplay.c: 313: LATEbits.LATE2 = 1;
  1852  0009F2  848D               	bsf	3981,2,c	;volatile
  1853                           
  1854                           ;lcddisplay.c: 314: DelayFor18TCY();
  1855  0009F4  EC40  F006         	call	_DelayFor18TCY	;wreg free
  1856                           
  1857                           ;lcddisplay.c: 315: LATEbits.LATE2 = 0;
  1858  0009F8  948D               	bcf	3981,2,c	;volatile
  1859                           
  1860                           ;lcddisplay.c: 319: TRISD |= 0x0f;
  1861  0009FA  0E0F               	movlw	15
  1862  0009FC  1295               	iorwf	3989,f,c	;volatile
  1863  0009FE  0012               	return	
  1864                           
  1865                           ;lcddisplay.c: 323: return;
  1866  000A00  0012               	return		;funcret
  1867  000A02                     __end_of_SetLCDDDRamAddr:
  1868                           	opt stack 0
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           intcon2	equ	0xFF1
  1874                           indf0	equ	0xFEF
  1875                           fsr0h	equ	0xFEA
  1876                           fsr0l	equ	0xFE9
  1877                           indf2	equ	0xFDF
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _Delay10KTCYx *****************
  1883 ;; Defined at:
  1884 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  unit            1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  unit            1   32[COMRAM] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1898 ;;      Params:         0       0       0       0       0       0       0
  1899 ;;      Locals:         1       0       0       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0       0       0
  1901 ;;      Totals:         2       0       0       0       0       0       0
  1902 ;;Total ram usage:        2 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_OpenLCD
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text15
  1913  000C0E                     __ptext15:
  1914                           	opt stack 0
  1915  000C0E                     _Delay10KTCYx:
  1916                           	opt stack 26
  1917                           
  1918                           ;incstack = 0
  1919                           ;Delay10KTCYx@unit stored from wreg
  1920  000C0E  6E21               	movwf	Delay10KTCYx@unit,c
  1921  000C10  0E0D               	movlw	13
  1922  000C12  6E20               	movwf	??_Delay10KTCYx& (0+255),c
  1923  000C14  0EFC               	movlw	252
  1924  000C16                     u477:
  1925  000C16  2EE8               	decfsz	wreg,f,c
  1926  000C18  D7FE               	goto	u477
  1927  000C1A  2E20               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1928  000C1C  D7FC               	goto	u477
  1929  000C1E  2E21               	decfsz	Delay10KTCYx@unit,f,c
  1930  000C20  D7F7               	goto	l1003
  1931  000C22  0012               	return	
  1932  000C24  0012               	return		;funcret
  1933  000C26                     __end_of_Delay10KTCYx:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           intcon2	equ	0xFF1
  1940                           indf0	equ	0xFEF
  1941                           fsr0h	equ	0xFEA
  1942                           fsr0l	equ	0xFE9
  1943                           wreg	equ	0xFE8
  1944                           indf2	equ	0xFDF
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _Delay100TCYx *****************
  1950 ;; Defined at:
  1951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  unit            1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  unit            1   31[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         0       0       0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0
  1968 ;;      Totals:         1       0       0       0       0       0       0
  1969 ;;Total ram usage:        1 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    2
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_OpenLCD
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text16
  1980  000C26                     __ptext16:
  1981                           	opt stack 0
  1982  000C26                     _Delay100TCYx:
  1983                           	opt stack 26
  1984                           
  1985                           ;incstack = 0
  1986                           ;Delay100TCYx@unit stored from wreg
  1987  000C26  6E20               	movwf	Delay100TCYx@unit,c
  1988  000C28  0E21               	movlw	33
  1989  000C2A                     u487:
  1990  000C2A  2EE8               	decfsz	wreg,f,c
  1991  000C2C  D7FE               	goto	u487
  1992  000C2E  F000               	nop	
  1993  000C30  2E20               	decfsz	Delay100TCYx@unit,f,c
  1994  000C32  D7FA               	goto	l999
  1995  000C34  0012               	return	
  1996  000C36  0012               	return		;funcret
  1997  000C38                     __end_of_Delay100TCYx:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           intcon2	equ	0xFF1
  2004                           indf0	equ	0xFEF
  2005                           fsr0h	equ	0xFEA
  2006                           fsr0l	equ	0xFE9
  2007                           wreg	equ	0xFE8
  2008                           indf2	equ	0xFDF
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _BusyXLCD *****************
  2014 ;; Defined at:
  2015 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\XLCD\busyxlcd.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2029 ;;      Params:         0       0       0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0
  2032 ;;      Totals:         0       0       0       0       0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    4
  2036 ;; This function calls:
  2037 ;;		_DelayFor18TCY
  2038 ;; This function is called by:
  2039 ;;		_OpenLCD
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text17
  2044  000B1E                     __ptext17:
  2045                           	opt stack 0
  2046  000B1E                     _BusyXLCD:
  2047                           	opt stack 24
  2048                           
  2049                           ;incstack = 0
  2050  000B1E  8C8A               	bsf	3978,6,c	;volatile
  2051  000B20  9A8A               	bcf	3978,5,c	;volatile
  2052  000B22  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2053  000B26  888A               	bsf	3978,4,c	;volatile
  2054  000B28  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2055  000B2C  A681               	btfss	3969,3,c	;volatile
  2056  000B2E  D00A               	goto	l197
  2057  000B30  988A               	bcf	3978,4,c	;volatile
  2058  000B32  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2059  000B36  888A               	bsf	3978,4,c	;volatile
  2060  000B38  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2061  000B3C  988A               	bcf	3978,4,c	;volatile
  2062  000B3E  9C8A               	bcf	3978,6,c	;volatile
  2063  000B40  0E01               	movlw	1
  2064  000B42  0012               	return	
  2065  000B44                     l197:
  2066  000B44  988A               	bcf	3978,4,c	;volatile
  2067  000B46  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2068  000B4A  888A               	bsf	3978,4,c	;volatile
  2069  000B4C  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2070  000B50  988A               	bcf	3978,4,c	;volatile
  2071  000B52  9C8A               	bcf	3978,6,c	;volatile
  2072  000B54  0E00               	movlw	0
  2073  000B56  0012               	return	
  2074  000B58  0012               	return		;funcret
  2075  000B5A                     __end_of_BusyXLCD:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           intcon2	equ	0xFF1
  2082                           indf0	equ	0xFEF
  2083                           fsr0h	equ	0xFEA
  2084                           fsr0l	equ	0xFE9
  2085                           wreg	equ	0xFE8
  2086                           indf2	equ	0xFDF
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _BusyLCD *****************
  2092 ;; Defined at:
  2093 ;;		line 227 in file "lcddisplay.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2107 ;;      Params:         0       0       0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    4
  2114 ;; This function calls:
  2115 ;;		_DelayFor18TCY
  2116 ;; This function is called by:
  2117 ;;		_InitLCD
  2118 ;;		_OpenLCD
  2119 ;;		_putLCD
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text18
  2124  000B5A                     __ptext18:
  2125                           	opt stack 0
  2126  000B5A                     _BusyLCD:
  2127                           	opt stack 24
  2128                           
  2129                           ;lcddisplay.c: 229: LATEbits.LATE1 = 1;
  2130                           
  2131                           ;incstack = 0
  2132  000B5A  828D               	bsf	3981,1,c	;volatile
  2133                           
  2134                           ;lcddisplay.c: 230: LATEbits.LATE0 = 0;
  2135  000B5C  908D               	bcf	3981,0,c	;volatile
  2136                           
  2137                           ;lcddisplay.c: 231: DelayFor18TCY();
  2138  000B5E  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2139                           
  2140                           ;lcddisplay.c: 232: LATEbits.LATE2 = 1;
  2141  000B62  848D               	bsf	3981,2,c	;volatile
  2142                           
  2143                           ;lcddisplay.c: 233: DelayFor18TCY();
  2144  000B64  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2145                           
  2146                           ;lcddisplay.c: 251: if(PORTD&0x08)
  2147  000B68  A683               	btfss	3971,3,c	;volatile
  2148  000B6A  D00A               	goto	l165
  2149                           
  2150                           ;lcddisplay.c: 253: {
  2151                           ;lcddisplay.c: 254: LATEbits.LATE2 = 0;
  2152  000B6C  948D               	bcf	3981,2,c	;volatile
  2153                           
  2154                           ;lcddisplay.c: 255: DelayFor18TCY();
  2155  000B6E  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2156                           
  2157                           ;lcddisplay.c: 256: LATEbits.LATE2 = 1;
  2158  000B72  848D               	bsf	3981,2,c	;volatile
  2159                           
  2160                           ;lcddisplay.c: 257: DelayFor18TCY();
  2161  000B74  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2162                           
  2163                           ;lcddisplay.c: 258: LATEbits.LATE2 = 0;
  2164  000B78  948D               	bcf	3981,2,c	;volatile
  2165                           
  2166                           ;lcddisplay.c: 259: LATEbits.LATE1 = 0;
  2167  000B7A  928D               	bcf	3981,1,c	;volatile
  2168                           
  2169                           ;lcddisplay.c: 260: return 1;
  2170  000B7C  0E01               	movlw	1
  2171                           
  2172                           ;lcddisplay.c: 261: }
  2173  000B7E  0012               	return	
  2174  000B80                     l165:
  2175                           
  2176                           ;lcddisplay.c: 262: else
  2177                           ;lcddisplay.c: 263: {
  2178                           ;lcddisplay.c: 264: LATEbits.LATE2 = 0;
  2179  000B80  948D               	bcf	3981,2,c	;volatile
  2180                           
  2181                           ;lcddisplay.c: 265: DelayFor18TCY();
  2182  000B82  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2183                           
  2184                           ;lcddisplay.c: 266: LATEbits.LATE2 = 1;
  2185  000B86  848D               	bsf	3981,2,c	;volatile
  2186                           
  2187                           ;lcddisplay.c: 267: DelayFor18TCY();
  2188  000B88  EC40  F006         	call	_DelayFor18TCY	;wreg free
  2189                           
  2190                           ;lcddisplay.c: 268: LATEbits.LATE2 = 0;
  2191  000B8C  948D               	bcf	3981,2,c	;volatile
  2192                           
  2193                           ;lcddisplay.c: 269: LATEbits.LATE1 = 0;
  2194  000B8E  928D               	bcf	3981,1,c	;volatile
  2195                           
  2196                           ;lcddisplay.c: 270: return 0;
  2197  000B90  0E00               	movlw	0
  2198  000B92  0012               	return	
  2199  000B94  0012               	return		;funcret
  2200  000B96                     __end_of_BusyLCD:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           intcon2	equ	0xFF1
  2207                           indf0	equ	0xFEF
  2208                           fsr0h	equ	0xFEA
  2209                           fsr0l	equ	0xFE9
  2210                           wreg	equ	0xFE8
  2211                           indf2	equ	0xFDF
  2212                           fsr2h	equ	0xFDA
  2213                           fsr2l	equ	0xFD9
  2214                           status	equ	0xFD8
  2215                           
  2216 ;; *************** function _DelayFor18TCY *****************
  2217 ;; Defined at:
  2218 ;;		line 59 in file "lcddisplay.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;		None               void
  2225 ;; Registers used:
  2226 ;;		wreg, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2232 ;;      Params:         0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    3
  2239 ;; This function calls:
  2240 ;;		_Delay1TCYx
  2241 ;; This function is called by:
  2242 ;;		_WriteCmdLCD
  2243 ;;		_BusyLCD
  2244 ;;		_SetLCDDDRamAddr
  2245 ;;		_SetLCDCGRamAddr
  2246 ;;		_WriteDataLCD
  2247 ;;		_BusyXLCD
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text19
  2252  000C80                     __ptext19:
  2253                           	opt stack 0
  2254  000C80                     _DelayFor18TCY:
  2255                           	opt stack 24
  2256                           
  2257                           ;lcddisplay.c: 61: Delay1TCYx(18);
  2258                           
  2259                           ;incstack = 0
  2260  000C80  0E12               	movlw	18
  2261  000C82  EC3A  F006         	call	_Delay1TCYx
  2262  000C86  0012               	return		;funcret
  2263  000C88                     __end_of_DelayFor18TCY:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           intcon2	equ	0xFF1
  2270                           indf0	equ	0xFEF
  2271                           fsr0h	equ	0xFEA
  2272                           fsr0l	equ	0xFE9
  2273                           wreg	equ	0xFE8
  2274                           indf2	equ	0xFDF
  2275                           fsr2h	equ	0xFDA
  2276                           fsr2l	equ	0xFD9
  2277                           status	equ	0xFD8
  2278                           
  2279 ;; *************** function _Delay1TCYx *****************
  2280 ;; Defined at:
  2281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  unit            1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  unit            1   31[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         0       0       0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_DelayFor18TCY
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text20
  2310  000C74                     __ptext20:
  2311                           	opt stack 0
  2312  000C74                     _Delay1TCYx:
  2313                           	opt stack 24
  2314                           
  2315                           ;incstack = 0
  2316                           ;Delay1TCYx@unit stored from wreg
  2317  000C74  6E20               	movwf	Delay1TCYx@unit,c
  2318  000C76                     l446:
  2319  000C76  F000               	nop	
  2320  000C78  2E20               	decfsz	Delay1TCYx@unit,f,c
  2321  000C7A  D7FD               	goto	l446
  2322  000C7C  0012               	return	
  2323  000C7E  0012               	return		;funcret
  2324  000C80                     __end_of_Delay1TCYx:
  2325                           	opt stack 0
  2326                           tblptru	equ	0xFF8
  2327                           tblptrh	equ	0xFF7
  2328                           tblptrl	equ	0xFF6
  2329                           tablat	equ	0xFF5
  2330                           intcon2	equ	0xFF1
  2331                           indf0	equ	0xFEF
  2332                           fsr0h	equ	0xFEA
  2333                           fsr0l	equ	0xFE9
  2334                           wreg	equ	0xFE8
  2335                           indf2	equ	0xFDF
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _InitInterrupts *****************
  2341 ;; Defined at:
  2342 ;;		line 82 in file "ports.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;		None               void
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         0       0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         0       0       0       0       0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    2
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text21
  2371  000C5A                     __ptext21:
  2372                           	opt stack 0
  2373  000C5A                     _InitInterrupts:
  2374                           	opt stack 28
  2375                           
  2376                           ;ports.c: 85: INTCON2bits.INTEDG0 = 0;
  2377                           
  2378                           ;incstack = 0
  2379  000C5A  9CF1               	bcf	intcon2,6,c	;volatile
  2380                           
  2381                           ;ports.c: 86: INTCONbits.INT0IF = 0;
  2382  000C5C  92F2               	bcf	intcon,1,c	;volatile
  2383                           
  2384                           ;ports.c: 87: INTCONbits.INT0IE = 1;
  2385  000C5E  88F2               	bsf	intcon,4,c	;volatile
  2386                           
  2387                           ;ports.c: 90: RCONbits.IPEN = 1;
  2388  000C60  8ED0               	bsf	4048,7,c	;volatile
  2389                           
  2390                           ;ports.c: 91: INTCONbits.GIEL = 1;
  2391  000C62  8CF2               	bsf	intcon,6,c	;volatile
  2392                           
  2393                           ;ports.c: 92: INTCONbits.GIEH = 1;
  2394  000C64  8EF2               	bsf	intcon,7,c	;volatile
  2395  000C66  0012               	return		;funcret
  2396  000C68                     __end_of_InitInterrupts:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           intcon	equ	0xFF2
  2403                           intcon2	equ	0xFF1
  2404                           indf0	equ	0xFEF
  2405                           fsr0h	equ	0xFEA
  2406                           fsr0l	equ	0xFE9
  2407                           wreg	equ	0xFE8
  2408                           indf2	equ	0xFDF
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _Delay1KTCYx *****************
  2414 ;; Defined at:
  2415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  unit            1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  unit            1   31[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2429 ;;      Params:         0       0       0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    2
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text22
  2444  000C38                     __ptext22:
  2445                           	opt stack 0
  2446  000C38                     _Delay1KTCYx:
  2447                           	opt stack 28
  2448                           
  2449                           ;incstack = 0
  2450                           ;Delay1KTCYx@unit stored from wreg
  2451  000C38  6E20               	movwf	Delay1KTCYx@unit,c
  2452  000C3A  0EFA               	movlw	250
  2453  000C3C                     u497:
  2454  000C3C  F000               	nop	
  2455  000C3E  2EE8               	decfsz	wreg,f,c
  2456  000C40  D7FD               	goto	u497
  2457  000C42  2E20               	decfsz	Delay1KTCYx@unit,f,c
  2458  000C44  D7FA               	goto	l1201
  2459  000C46  0012               	return	
  2460  000C48  0012               	return		;funcret
  2461  000C4A                     __end_of_Delay1KTCYx:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           intcon	equ	0xFF2
  2468                           intcon2	equ	0xFF1
  2469                           indf0	equ	0xFEF
  2470                           fsr0h	equ	0xFEA
  2471                           fsr0l	equ	0xFE9
  2472                           wreg	equ	0xFE8
  2473                           indf2	equ	0xFDF
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _XC8_LowISR_Handler *****************
  2479 ;; Defined at:
  2480 ;;		line 114 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		None
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         0       0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0
  2496 ;;      Temps:         17       0       0       0       0       0       0
  2497 ;;      Totals:        17       0       0       0       0       0       0
  2498 ;;Total ram usage:       17 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		Interrupt level 1
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	intcodelo
  2509  000018                     __pintcodelo:
  2510                           	opt stack 0
  2511  000018                     _XC8_LowISR_Handler:
  2512                           	opt stack 23
  2513                           
  2514                           ;incstack = 0
  2515  000018  CFD8 F001          	movff	status,??_XC8_LowISR_Handler
  2516  00001C  CFE8 F002          	movff	wreg,??_XC8_LowISR_Handler+1
  2517  000020  CFE0 F003          	movff	bsr,??_XC8_LowISR_Handler+2
  2518  000024  CFFA F004          	movff	pclath,??_XC8_LowISR_Handler+3
  2519  000028  CFFB F005          	movff	pclatu,??_XC8_LowISR_Handler+4
  2520  00002C  CFE9 F006          	movff	fsr0l,??_XC8_LowISR_Handler+5
  2521  000030  CFEA F007          	movff	fsr0h,??_XC8_LowISR_Handler+6
  2522  000034  CFE1 F008          	movff	fsr1l,??_XC8_LowISR_Handler+7
  2523  000038  CFE2 F009          	movff	fsr1h,??_XC8_LowISR_Handler+8
  2524  00003C  CFD9 F00A          	movff	fsr2l,??_XC8_LowISR_Handler+9
  2525  000040  CFDA F00B          	movff	fsr2h,??_XC8_LowISR_Handler+10
  2526  000044  CFF3 F00C          	movff	prodl,??_XC8_LowISR_Handler+11
  2527  000048  CFF4 F00D          	movff	prodh,??_XC8_LowISR_Handler+12
  2528  00004C  CFF6 F00E          	movff	tblptrl,??_XC8_LowISR_Handler+13
  2529  000050  CFF7 F00F          	movff	tblptrh,??_XC8_LowISR_Handler+14
  2530  000054  CFF8 F010          	movff	tblptru,??_XC8_LowISR_Handler+15
  2531  000058  CFF5 F011          	movff	tablat,??_XC8_LowISR_Handler+16
  2532                           
  2533                           ;main.c: 118: if (INTCON3bits.INT1IF) {
  2534  00005C  A0F0               	btfss	intcon3,0,c	;volatile
  2535  00005E  D002               	goto	i1l41
  2536                           
  2537                           ;main.c: 119: INTCON3bits.INT1IF = 0;
  2538  000060  90F0               	bcf	intcon3,0,c	;volatile
  2539                           
  2540                           ;main.c: 120: LATDbits.LATD1 = ~LATDbits.LATD1;
  2541  000062  728C               	btg	3980,1,c	;volatile
  2542  000064                     i1l41:
  2543                           
  2544                           ;main.c: 121: }
  2545                           ;main.c: 123: if (INTCONbits.RBIF) {
  2546  000064  A0F2               	btfss	intcon,0,c	;volatile
  2547  000066  D009               	goto	i1l45
  2548                           
  2549                           ;main.c: 124: PortBValue = PORTB;
  2550  000068  CF81 F036          	movff	3969,_PortBValue	;volatile
  2551                           
  2552                           ;main.c: 125: INTCONbits.RBIF = 0;
  2553  00006C  90F2               	bcf	intcon,0,c	;volatile
  2554                           
  2555                           ;main.c: 126: if (PortBValue & 0b00010000) {
  2556  00006E  B836               	btfsc	_PortBValue,4,c
  2557                           
  2558                           ;main.c: 127: LATDbits.LATD4 = ~LATDbits.LATD4;
  2559  000070  788C               	btg	3980,4,c	;volatile
  2560                           
  2561                           ;main.c: 128: }
  2562                           ;main.c: 129: if (PortBValue & 0b00100000) {
  2563  000072  AA36               	btfss	_PortBValue,5,c
  2564  000074  D002               	goto	i1l45
  2565                           
  2566                           ;main.c: 130: LATDbits.LATD5 = ~LATDbits.LATD5;
  2567  000076  7A8C               	btg	3980,5,c	;volatile
  2568  000078  D000               	goto	i1l45
  2569  00007A                     i1l45:
  2570  00007A  C011  FFF5         	movff	??_XC8_LowISR_Handler+16,tablat
  2571  00007E  C010  FFF8         	movff	??_XC8_LowISR_Handler+15,tblptru
  2572  000082  C00F  FFF7         	movff	??_XC8_LowISR_Handler+14,tblptrh
  2573  000086  C00E  FFF6         	movff	??_XC8_LowISR_Handler+13,tblptrl
  2574  00008A  C00D  FFF4         	movff	??_XC8_LowISR_Handler+12,prodh
  2575  00008E  C00C  FFF3         	movff	??_XC8_LowISR_Handler+11,prodl
  2576  000092  C00B  FFDA         	movff	??_XC8_LowISR_Handler+10,fsr2h
  2577  000096  C00A  FFD9         	movff	??_XC8_LowISR_Handler+9,fsr2l
  2578  00009A  C009  FFE2         	movff	??_XC8_LowISR_Handler+8,fsr1h
  2579  00009E  C008  FFE1         	movff	??_XC8_LowISR_Handler+7,fsr1l
  2580  0000A2  C007  FFEA         	movff	??_XC8_LowISR_Handler+6,fsr0h
  2581  0000A6  C006  FFE9         	movff	??_XC8_LowISR_Handler+5,fsr0l
  2582  0000AA  C005  FFFB         	movff	??_XC8_LowISR_Handler+4,pclatu
  2583  0000AE  C004  FFFA         	movff	??_XC8_LowISR_Handler+3,pclath
  2584  0000B2  C003  FFE0         	movff	??_XC8_LowISR_Handler+2,bsr
  2585  0000B6  C002  FFE8         	movff	??_XC8_LowISR_Handler+1,wreg
  2586  0000BA  C001  FFD8         	movff	??_XC8_LowISR_Handler,status
  2587  0000BE  0010               	retfie	
  2588  0000C0                     __end_of_XC8_LowISR_Handler:
  2589                           	opt stack 0
  2590                           pclatu	equ	0xFFB
  2591                           pclath	equ	0xFFA
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           intcon2	equ	0xFF1
  2600                           intcon3	equ	0xFF0
  2601                           indf0	equ	0xFEF
  2602                           fsr0h	equ	0xFEA
  2603                           fsr0l	equ	0xFE9
  2604                           wreg	equ	0xFE8
  2605                           fsr1h	equ	0xFE2
  2606                           fsr1l	equ	0xFE1
  2607                           bsr	equ	0xFE0
  2608                           indf2	equ	0xFDF
  2609                           fsr2h	equ	0xFDA
  2610                           fsr2l	equ	0xFD9
  2611                           status	equ	0xFD8
  2612                           
  2613 ;; *************** function _XC8_HighISR_Handler *****************
  2614 ;; Defined at:
  2615 ;;		line 82 in file "main.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		None
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0
  2631 ;;      Temps:         14       0       0       0       0       0       0
  2632 ;;      Totals:        14       0       0       0       0       0       0
  2633 ;;Total ram usage:       14 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		Interrupt level 2
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	intcode
  2643  000008                     __pintcode:
  2644                           	opt stack 0
  2645  000008                     _XC8_HighISR_Handler:
  2646                           	opt stack 23
  2647                           
  2648                           ;incstack = 0
  2649  000008  CFFA F012          	movff	pclath,??_XC8_HighISR_Handler
  2650  00000C  CFFB F013          	movff	pclatu,??_XC8_HighISR_Handler+1
  2651  000010  CFE9 F014          	movff	fsr0l,??_XC8_HighISR_Handler+2
  2652  000014  EF14  F004         	goto	int_func
  2653                           pclatu	equ	0xFFB
  2654                           pclath	equ	0xFFA
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           intcon	equ	0xFF2
  2662                           intcon2	equ	0xFF1
  2663                           intcon3	equ	0xFF0
  2664                           indf0	equ	0xFEF
  2665                           fsr0h	equ	0xFEA
  2666                           fsr0l	equ	0xFE9
  2667                           wreg	equ	0xFE8
  2668                           fsr1h	equ	0xFE2
  2669                           fsr1l	equ	0xFE1
  2670                           bsr	equ	0xFE0
  2671                           indf2	equ	0xFDF
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676                           	psect	intcode_body
  2677  000828                     __pintcode_body:
  2678                           	opt stack 23
  2679  000828                     int_func:
  2680                           	opt stack 23
  2681  000828  CFEA F015          	movff	fsr0h,??_XC8_HighISR_Handler+3
  2682  00082C  CFE1 F016          	movff	fsr1l,??_XC8_HighISR_Handler+4
  2683  000830  CFE2 F017          	movff	fsr1h,??_XC8_HighISR_Handler+5
  2684  000834  CFD9 F018          	movff	fsr2l,??_XC8_HighISR_Handler+6
  2685  000838  CFDA F019          	movff	fsr2h,??_XC8_HighISR_Handler+7
  2686  00083C  CFF3 F01A          	movff	prodl,??_XC8_HighISR_Handler+8
  2687  000840  CFF4 F01B          	movff	prodh,??_XC8_HighISR_Handler+9
  2688  000844  CFF6 F01C          	movff	tblptrl,??_XC8_HighISR_Handler+10
  2689  000848  CFF7 F01D          	movff	tblptrh,??_XC8_HighISR_Handler+11
  2690  00084C  CFF8 F01E          	movff	tblptru,??_XC8_HighISR_Handler+12
  2691  000850  CFF5 F01F          	movff	tablat,??_XC8_HighISR_Handler+13
  2692                           
  2693                           ;main.c: 89: if (INTCONbits.INT0IF )
  2694  000854  A2F2               	btfss	intcon,1,c	;volatile
  2695  000856  D003               	goto	i2l38
  2696                           
  2697                           ;main.c: 90: {
  2698                           ;main.c: 92: INTCONbits.INT0IF = 0;
  2699  000858  92F2               	bcf	intcon,1,c	;volatile
  2700                           
  2701                           ;main.c: 94: LATDbits.LATD6 = ~LATDbits.LATD6;
  2702  00085A  7C8C               	btg	3980,6,c	;volatile
  2703  00085C  D000               	goto	i2l38
  2704  00085E                     i2l38:
  2705  00085E  C01F  FFF5         	movff	??_XC8_HighISR_Handler+13,tablat
  2706  000862  C01E  FFF8         	movff	??_XC8_HighISR_Handler+12,tblptru
  2707  000866  C01D  FFF7         	movff	??_XC8_HighISR_Handler+11,tblptrh
  2708  00086A  C01C  FFF6         	movff	??_XC8_HighISR_Handler+10,tblptrl
  2709  00086E  C01B  FFF4         	movff	??_XC8_HighISR_Handler+9,prodh
  2710  000872  C01A  FFF3         	movff	??_XC8_HighISR_Handler+8,prodl
  2711  000876  C019  FFDA         	movff	??_XC8_HighISR_Handler+7,fsr2h
  2712  00087A  C018  FFD9         	movff	??_XC8_HighISR_Handler+6,fsr2l
  2713  00087E  C017  FFE2         	movff	??_XC8_HighISR_Handler+5,fsr1h
  2714  000882  C016  FFE1         	movff	??_XC8_HighISR_Handler+4,fsr1l
  2715  000886  C015  FFEA         	movff	??_XC8_HighISR_Handler+3,fsr0h
  2716  00088A  C014  FFE9         	movff	??_XC8_HighISR_Handler+2,fsr0l
  2717  00088E  C013  FFFB         	movff	??_XC8_HighISR_Handler+1,pclatu
  2718  000892  C012  FFFA         	movff	??_XC8_HighISR_Handler,pclath
  2719  000896  0011               	retfie		f
  2720  000898                     __end_of_XC8_HighISR_Handler:
  2721                           	opt stack 0
  2722                           pclatu	equ	0xFFB
  2723                           pclath	equ	0xFFA
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           prodh	equ	0xFF4
  2729                           prodl	equ	0xFF3
  2730                           intcon	equ	0xFF2
  2731                           intcon2	equ	0xFF1
  2732                           intcon3	equ	0xFF0
  2733                           indf0	equ	0xFEF
  2734                           fsr0h	equ	0xFEA
  2735                           fsr0l	equ	0xFE9
  2736                           wreg	equ	0xFE8
  2737                           fsr1h	equ	0xFE2
  2738                           fsr1l	equ	0xFE1
  2739                           bsr	equ	0xFE0
  2740                           indf2	equ	0xFDF
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           pclatu	equ	0xFFB
  2745                           pclath	equ	0xFFA
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           intcon	equ	0xFF2
  2753                           intcon2	equ	0xFF1
  2754                           intcon3	equ	0xFF0
  2755                           indf0	equ	0xFEF
  2756                           fsr0h	equ	0xFEA
  2757                           fsr0l	equ	0xFE9
  2758                           wreg	equ	0xFE8
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           bsr	equ	0xFE0
  2762                           indf2	equ	0xFDF
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767                           	psect	rparam
  2768  0000                     pclatu	equ	0xFFB
  2769                           pclath	equ	0xFFA
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           intcon2	equ	0xFF1
  2778                           intcon3	equ	0xFF0
  2779                           indf0	equ	0xFEF
  2780                           fsr0h	equ	0xFEA
  2781                           fsr0l	equ	0xFE9
  2782                           wreg	equ	0xFE8
  2783                           fsr1h	equ	0xFE2
  2784                           fsr1l	equ	0xFE1
  2785                           bsr	equ	0xFE0
  2786                           indf2	equ	0xFDF
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    putLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> putIntLCD@result(COMRAM[4]), STR_2(CODE[10]), STR_1(CODE[9]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _LCDInitialDisplay->_putIntLCD
    _putIntLCD->_utoa
    _utoa->___lwdiv
    _putLCD->_WriteDataLCD
    _InitLCD->_OpenLCD
    _OpenLCD->_SetLCDDDRamAddr
    _DelayFor18TCY->_Delay1TCYx

Critical Paths under _XC8_HighISR_Handler in COMRAM

    None.

Critical Paths under _XC8_LowISR_Handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _XC8_HighISR_Handler in BANK0

    None.

Critical Paths under _XC8_LowISR_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _XC8_HighISR_Handler in BANK1

    None.

Critical Paths under _XC8_LowISR_Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _XC8_HighISR_Handler in BANK2

    None.

Critical Paths under _XC8_LowISR_Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _XC8_HighISR_Handler in BANK3

    None.

Critical Paths under _XC8_LowISR_Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _XC8_HighISR_Handler in BANK4

    None.

Critical Paths under _XC8_LowISR_Handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _XC8_HighISR_Handler in BANK5

    None.

Critical Paths under _XC8_LowISR_Handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2502
                        _Delay1KTCYx
                     _InitInterrupts
                            _InitLCD
                       _InitMotorPWM
                          _InitPorts
                  _LCDInitialDisplay
 ---------------------------------------------------------------------------------
 (1) _LCDInitialDisplay                                    0     0      0    2262
                    _SetLCDCGRamAddr
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
                       _WriteDataLCD
                          _putIntLCD
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putIntLCD                                            6     4      2    1785
                                             47 COMRAM     6     4      2
                             _putLCD
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1352
                                             38 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               2     0      2     297
                                             33 COMRAM     2     0      2
                            _BusyLCD
                       _WriteDataLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataLCD                                         1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetLCDCGRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitMotorPWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0     225
                            _BusyLCD
                            _OpenLCD
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _OpenLCD                                              1     1      0     165
                                             36 COMRAM     1     1      0
                            _BusyLCD
                           _BusyXLCD
                       _Delay100TCYx
                       _Delay10KTCYx
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdLCD                                          1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetLCDDDRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyLCD                                              0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0      15
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay1TCYx                                           1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay1KTCYx                                          1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _XC8_LowISR_Handler                                  17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _XC8_HighISR_Handler                                 14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay1KTCYx
   _InitInterrupts
   _InitLCD
     _BusyLCD
       _DelayFor18TCY
         _Delay1TCYx
     _OpenLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _BusyXLCD
         _DelayFor18TCY
           _Delay1TCYx
       _Delay100TCYx
       _Delay10KTCYx
       _SetLCDDDRamAddr
         _DelayFor18TCY
           _Delay1TCYx
       _WriteCmdLCD
         _DelayFor18TCY
           _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
   _InitMotorPWM
   _InitPorts
   _LCDInitialDisplay
     _SetLCDCGRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _SetLCDDDRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
     _WriteDataLCD
       _DelayFor18TCY
         _Delay1TCYx
     _putIntLCD
       _putLCD
         _BusyLCD
           _DelayFor18TCY
             _Delay1TCYx
         _WriteDataLCD
           _DelayFor18TCY
             _Delay1TCYx
       _utoa
         ___lwdiv
         ___lwmod
     _putLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _WriteDataLCD
         _DelayFor18TCY
           _Delay1TCYx

 _XC8_LowISR_Handler (ROOT)

 _XC8_HighISR_Handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      36       1       56.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      15        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Apr 21 09:46:02 2015

        __size_of_WriteCmdLCD 0040                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l165 0B80                           l197 0B44                           l446 0C76  
                         l762 094A                           l772 0A94                           l668 0802  
                         l999 0C28                  __CFG_CPB$OFF 000000                           u125 09C4  
                         u410 08C6                           u420 08F0                           _PR2 000FCB  
                         u175 0970                           u417 08BC                  __CFG_CPD$OFF 000000  
                         u427 08E6                           u477 0C16                           u487 0C2A  
                         u497 0C3C                  __CFG_BORV$30 000000         __size_of_WriteDataLCD 0040  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                    _Delay1TCYx 0C74  
                        l1003 0C10                          l1201 0C3A                          l1141 069C  
                        l1133 0678                          l1301 07C4                          l1127 0658  
                        l1145 06AE                          l1137 068A                          l1129 0666  
                        l1171 0A0A                          l1251 0920                          l1149 06C0  
                        l1183 0A40                          l1175 0A1C                          l1247 090E  
                        l1271 0A72                          l1281 089C                          l1249 0918  
                        l1353 0BB8                          l1179 0A2E                          l1259 093E  
                        l1275 0A88                          l1267 0A60                          l1291 0788  
                        l1269 0A6A                          l1287 08D0                          STR_1 060B  
                        STR_2 0601                          _LATC 000F8B                          _LATD 000F8C  
                        i1l41 0064                          i1l45 007A                          i2l38 085E  
                        _main 0B96         SetLCDDDRamAddr@DDaddr 0024                          fsr0h 000FEA  
                        fsr1h 000FE2                          indf0 000FEF                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          _utoa 077E                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00C0  
               __CFG_IESO$OFF 000000                  ___param_bank 000010               __end_of_BusyLCD 0B96  
             __end_of_InitLCD 0A52                 ?_InitMotorPWM 0001               __end_of_OpenLCD 06D4  
                _WriteDataLCD 0A9E                   _Delay1KTCYx 0C38                         ?_main 0001  
       __size_of_Delay100TCYx 0012                         _ANSEL 000F7E                         ?_utoa 0027  
                       _T2CON 000FCA               __end_of___lwdiv 0954               __end_of___lwmod 0A9E  
                       _PORTB 000F81                         _PORTD 000F83                         _TRISB 000F93  
                       _TRISD 000F95         __size_of_Delay10KTCYx 0018                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         tablat 000FF5                         utoa@c 002F  
                       utoa@v 002D                         status 000FD8                __CFG_PBADEN$ON 000000  
           ??_SetLCDDDRamAddr 0021                __CFG_MCLRE$OFF 000000             ??_SetLCDCGRamAddr 0021  
             __initialization 0C68                  _Delay100TCYx 0C26                ??_InitMotorPWM 0020  
                __end_of_main 0BCC                _InitInterrupts 0C5A                  __end_of_utoa 0828  
            __end_of_BusyXLCD 0B5A                WriteCmdLCD@cmd 0021                  _Delay10KTCYx 0C0E  
                      ??_main 0036                        ??_utoa 002D                 __activetblptr 000002  
                 ?_Delay1TCYx 0001                        _CCPR1L 000FBE                        _ANSELH 000F7F  
              __CFG_WDTEN$OFF 000000            __size_of_InitPorts 0018                     ??_BusyLCD 0021  
                   ??_InitLCD 0026                     ??_OpenLCD 0025        __end_of_InitInterrupts 0C68  
              __CFG_XINST$OFF 000000                    _PortBValue 0036                __CFG_STVREN$ON 000000  
                   ??___lwdiv 0024                     ??___lwmod 0024    __end_of_XC8_LowISR_Handler 00C0  
                      _putLCD 0898                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0C6A                 ___rparam_used 000001               ?_InitInterrupts 0001  
              __pcstackCOMRAM 0001           __size_of_Delay1TCYx 000C             __end_of_InitPorts 0C0E  
 __end_of_XC8_HighISR_Handler 0898               __CFG_LPT1OSC$ON 000000          __end_of_InitMotorPWM 0C5A  
      __size_of_DelayFor18TCY 0008                     ?_BusyXLCD 0001         SetLCDCGRamAddr@CGaddr 0024  
               ??_WriteCmdLCD 0021                       _CCP1CON 000FBD                  ?_Delay1KTCYx 0001  
                     ?_putLCD 0022            __size_of_putIntLCD 002A               _SetLCDDDRamAddr 09AE  
             _SetLCDCGRamAddr 0954                    ??_BusyXLCD 0021                       _BusyLCD 0B5A  
                     _InitLCD 0A02                       _OpenLCD 0616                       __Hparam 0000  
                     __Lparam 0000                 _DelayFor18TCY 0C80                       ___lwdiv 08F8  
                     ___lwmod 0A52                  __psmallconst 0600                       __pcinit 0C68  
                     __ramtop 0600               __size_of_putLCD 0060                       __ptext0 0B96  
                     __ptext1 06D4                       __ptext2 0BCC                       __ptext3 077E  
                     __ptext4 0A52                       __ptext5 08F8                       __ptext6 0898  
                     __ptext7 0A9E                       __ptext8 0954                       __ptext9 0BF6  
         __end_of_WriteCmdLCD 0B1E                  ??_Delay1TCYx 0020                __pintcode_body 0828  
        end_of_initialization 0C6A             _LCDInitialDisplay 06D4                 __Lmediumconst 0000  
                     int_func 0828            ?_LCDInitialDisplay 0001             __end_of_putIntLCD 0BF6  
              ?_DelayFor18TCY 0001           ??_LCDInitialDisplay 0036                       utoa@buf 0027  
                     utoa@val 0029            __end_of_Delay1TCYx 0C80       __end_of_SetLCDDDRamAddr 0A02  
       __size_of_InitMotorPWM 0010       __end_of_SetLCDCGRamAddr 09AE                     _TRISCbits 000F94  
                   _TRISEbits 000F96            _XC8_LowISR_Handler 0018     __end_of_LCDInitialDisplay 077E  
            ??_InitInterrupts 0020           ?_XC8_LowISR_Handler 0001              Delay100TCYx@unit 0020  
                 _WriteCmdLCD 0ADE                  _InitMotorPWM 0C4A          ??_XC8_LowISR_Handler 0001  
        __size_of_Delay1KTCYx 0012                __end_of_putLCD 08F8           start_initialization 0C68  
                   _InitPorts 0BF6             __size_of_BusyXLCD 003C               ??_DelayFor18TCY 0021  
               ?_WriteDataLCD 0001                      ??_putLCD 0024                OpenLCD@lcdtype 0025  
            ?_SetLCDDDRamAddr 0001              ?_SetLCDCGRamAddr 0001                   __pbssCOMRAM 0036  
                  ?_InitPorts 0001              WriteDataLCD@data 0021    __size_of_LCDInitialDisplay 00AA  
             Delay1KTCYx@unit 0020  __size_of_XC8_HighISR_Handler 0890                      ?_BusyLCD 0001  
                    ?_InitLCD 0001                      ?_OpenLCD 0001              ___lwdiv@dividend 0020  
           __CFG_CCP2MX$PORTC 000000                 ?_Delay100TCYx 0001                     __pintcode 0008  
              ??_WriteDataLCD 0021                 ?_Delay10KTCYx 0001                      ?___lwdiv 0020  
                    ?___lwmod 0020                   __pintcodelo 0018                   __smallconst 0600  
            ___lwdiv@quotient 0024                      _LATBbits 000F8A                      _LATDbits 000F8C  
                    _LATEbits 000F8D                ??_Delay100TCYx 0020                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                ??_Delay10KTCYx 0020                     _putIntLCD 0BCC  
                  putIntLCD@n 0030                  putLCD@buffer 0022                      _WPUBbits 000F7C  
            Delay10KTCYx@unit 0021                   ??_InitPorts 0020                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                      _BusyXLCD 0B1E              __size_of_BusyLCD 003C  
            __size_of_InitLCD 0050                      __Hrparam 0000              __size_of_OpenLCD 00BE  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000                  ?_WriteCmdLCD 0001  
                  ?_putIntLCD 0030              __size_of___lwdiv 005C              __size_of___lwmod 004C  
             ___lwdiv@divisor 0022               ___lwdiv@counter 0026                      __ptext10 0C4A  
                    __ptext11 0A02                      __ptext20 0C74                      __ptext12 0616  
                    __ptext21 0C5A                      __ptext13 0ADE                      __ptext22 0C38  
                    __ptext14 09AE                      __ptext15 0C0E                      __ptext16 0C26  
                    __ptext17 0B1E                      __ptext18 0B5A                      __ptext19 0C80  
        __end_of_WriteDataLCD 0ADE                 __size_of_main 0036                 __size_of_utoa 00AA  
              Delay1TCYx@unit 0020                 ??_Delay1KTCYx 0020           _XC8_HighISR_Handler 0008  
 __size_of_XC8_LowISR_Handler 00A8                    _INTCONbits 000FF2          __end_of_Delay100TCYx 0C38  
        __end_of_Delay10KTCYx 0C26                      intlevel1 0000                      intlevel2 0000  
        ?_XC8_HighISR_Handler 0001              ___lwmod@dividend 0020         __end_of_DelayFor18TCY 0C88  
                 ??_putIntLCD 0032       __size_of_InitInterrupts 000E               putIntLCD@result 0032  
                    utoa@base 002B               ___lwmod@divisor 0022           __end_of_Delay1KTCYx 0C4A  
             ___lwmod@counter 0024      __size_of_SetLCDDDRamAddr 0054         ??_XC8_HighISR_Handler 0012  
    __size_of_SetLCDCGRamAddr 005A             __CFG_FOSC$INTIO67 000000  

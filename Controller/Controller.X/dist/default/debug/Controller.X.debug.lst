

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Apr 21 10:37:37 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     _ANSEL	set	3966
    40  0000                     _ANSELH	set	3967
    41  0000                     _LATBbits	set	3978
    42  0000                     _LATC	set	3979
    43  0000                     _LATD	set	3980
    44  0000                     _LATDbits	set	3980
    45  0000                     _LATEbits	set	3981
    46  0000                     _PORTB	set	3969
    47  0000                     _PORTD	set	3971
    48  0000                     _TRISA	set	3986
    49  0000                     _TRISAbits	set	3986
    50  0000                     _TRISB	set	3987
    51  0000                     _TRISCbits	set	3988
    52  0000                     _TRISD	set	3989
    53  0000                     _TRISEbits	set	3990
    54  0000                     _WPUBbits	set	3964
    55  0000                     _ADCON0	set	4034
    56  0000                     _ADCON0bits	set	4034
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON2	set	4032
    59  0000                     _ADRESH	set	4036
    60  0000                     _CCP1CON	set	4029
    61  0000                     _CCPR1L	set	4030
    62  0000                     _PR2	set	4043
    63  0000                     _RCONbits	set	4048
    64  0000                     _T2CON	set	4042
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCON3bits	set	4080
    67  0000                     _INTCONbits	set	4082
    68                           
    69                           	psect	smallconst
    70  000600                     __psmallconst:
    71                           	opt stack 0
    72  000600  00                 	db	0
    73  000601                     STR_2:
    74  000601  4C                 	db	76	;'L'
    75  000602  69                 	db	105	;'i'
    76  000603  6E                 	db	110	;'n'
    77  000604  65                 	db	101	;'e'
    78  000605  20                 	db	32
    79  000606  30                 	db	48	;'0'
    80  000607  30                 	db	48	;'0'
    81  000608  30                 	db	48	;'0'
    82  000609  20                 	db	32
    83  00060A  00                 	db	0
    84  00060B                     STR_1:
    85  00060B  54                 	db	84	;'T'
    86  00060C  65                 	db	101	;'e'
    87  00060D  73                 	db	115	;'s'
    88  00060E  74                 	db	116	;'t'
    89  00060F  69                 	db	105	;'i'
    90  000610  6E                 	db	110	;'n'
    91  000611  67                 	db	103	;'g'
    92  000612  20                 	db	32
    93  000613  00                 	db	0
    94                           
    95                           ; #config settings
    96  000614  00                 	db	0	; dummy byte at the end
    97  0000                     
    98                           	psect	cinit
    99  000C96                     __pcinit:
   100                           	opt stack 0
   101  000C96                     start_initialization:
   102                           	opt stack 0
   103  000C96                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (2 bytes)
   107  000C96  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   108  000C98  6A36               	clrf	__pbssCOMRAM& (0+255),c
   109  000C9A                     end_of_initialization:
   110                           	opt stack 0
   111  000C9A                     __end_of__initialization:
   112                           	opt stack 0
   113  000C9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   114  000C9C  6EF8               	movwf	tblptru,c
   115  000C9E  0100               	movlb	0
   116  000CA0  EFD7  F004         	goto	_main	;jump to C main() function
   117                           tblptru	equ	0xFF8
   118                           
   119                           	psect	bssCOMRAM
   120  000036                     __pbssCOMRAM:
   121                           	opt stack 0
   122  000036                     _ADC_Value:
   123                           	opt stack 0
   124  000036                     	ds	1
   125  000037                     _PortBValue:
   126                           	opt stack 0
   127  000037                     	ds	1
   128                           tblptru	equ	0xFF8
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	opt stack 0
   133  000001                     ??_XC8_LowISR_Handler:
   134  000001                     
   135                           ; 1 bytes @ 0x0
   136  000001                     	ds	17
   137  000012                     ??_XC8_HighISR_Handler:
   138                           
   139                           ; 0 bytes @ 0x11
   140  000012                     	ds	14
   141  000020                     ??_Delay10KTCYx:
   142  000020                     ?___lwdiv:
   143                           	opt stack 0
   144  000020                     ?___lwmod:
   145                           	opt stack 0
   146  000020                     Delay100TCYx@unit:
   147                           	opt stack 0
   148  000020                     Delay1KTCYx@unit:
   149                           	opt stack 0
   150  000020                     Delay1TCYx@unit:
   151                           	opt stack 0
   152  000020                     ___lwdiv@dividend:
   153                           	opt stack 0
   154  000020                     ___lwmod@dividend:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x1F
   158  000020                     	ds	1
   159  000021                     ??_SetLCDDDRamAddr:
   160  000021                     ??_SetLCDCGRamAddr:
   161  000021                     WriteCmdLCD@cmd:
   162                           	opt stack 0
   163  000021                     WriteDataLCD@data:
   164                           	opt stack 0
   165  000021                     Delay10KTCYx@unit:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x20
   169  000021                     	ds	1
   170  000022                     putLCD@buffer:
   171                           	opt stack 0
   172  000022                     ___lwdiv@divisor:
   173                           	opt stack 0
   174  000022                     ___lwmod@divisor:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x21
   178  000022                     	ds	2
   179  000024                     SetLCDDDRamAddr@DDaddr:
   180                           	opt stack 0
   181  000024                     SetLCDCGRamAddr@CGaddr:
   182                           	opt stack 0
   183  000024                     ___lwmod@counter:
   184                           	opt stack 0
   185  000024                     ___lwdiv@quotient:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x23
   189  000024                     	ds	1
   190  000025                     OpenLCD@lcdtype:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x24
   194  000025                     	ds	1
   195  000026                     ___lwdiv@counter:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x25
   199  000026                     	ds	1
   200  000027                     utoa@buf:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x26
   204  000027                     	ds	2
   205  000029                     utoa@val:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x28
   209  000029                     	ds	2
   210  00002B                     utoa@base:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x2A
   214  00002B                     	ds	2
   215  00002D                     utoa@v:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x2C
   219  00002D                     	ds	2
   220  00002F                     utoa@c:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x2E
   224  00002F                     	ds	1
   225  000030                     putIntLCD@n:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x2F
   229  000030                     	ds	2
   230  000032                     putIntLCD@result:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x31
   234  000032                     	ds	4
   235  000036                     tblptru	equ	0xFF8
   236                           
   237                           ; 0 bytes @ 0x35
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 56 in file "main.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;		None               void
   250 ;; Registers used:
   251 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : 0/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   257 ;;      Params:         0       0       0       0       0       0       0
   258 ;;      Locals:         0       0       0       0       0       0       0
   259 ;;      Temps:          0       0       0       0       0       0       0
   260 ;;      Totals:         0       0       0       0       0       0       0
   261 ;;Total ram usage:        0 bytes
   262 ;; Hardware stack levels required when called:    8
   263 ;; This function calls:
   264 ;;		_ADC_Convert
   265 ;;		_Delay1KTCYx
   266 ;;		_InitAnalogueInputs
   267 ;;		_InitInterrupts
   268 ;;		_InitLCD
   269 ;;		_InitMotorPWM
   270 ;;		_InitPorts
   271 ;;		_LCDInitialDisplay
   272 ;;		_SetLCDDDRamAddr
   273 ;;		_putIntLCD
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text0
   280  0009AE                     __ptext0:
   281                           	opt stack 0
   282  0009AE                     _main:
   283                           	opt stack 23
   284                           
   285                           ;main.c: 58: InitPorts();
   286                           
   287                           ;incstack = 0
   288  0009AE  EC0B  F006         	call	_InitPorts	;wreg free
   289                           
   290                           ;main.c: 59: InitInterrupts();
   291  0009B2  EC52  F006         	call	_InitInterrupts	;wreg free
   292                           
   293                           ;main.c: 60: InitMotorPWM();
   294  0009B6  EC43  F006         	call	_InitMotorPWM	;wreg free
   295                           
   296                           ;main.c: 61: InitLCD();
   297  0009BA  EC2C  F005         	call	_InitLCD	;wreg free
   298                           
   299                           ;main.c: 62: InitAnalogueInputs();
   300  0009BE  EC27  F006         	call	_InitAnalogueInputs	;wreg free
   301                           
   302                           ;main.c: 63: LCDInitialDisplay();
   303  0009C2  EC6A  F003         	call	_LCDInitialDisplay	;wreg free
   304                           
   305                           ;main.c: 67: CCPR1L = 16;
   306  0009C6  0E10               	movlw	16
   307  0009C8  6EBE               	movwf	4030,c	;volatile
   308                           
   309                           ;main.c: 70: LATD = 0;
   310  0009CA  0E00               	movlw	0
   311  0009CC  6E8C               	movwf	3980,c	;volatile
   312                           
   313                           ;main.c: 71: LATC = 0;
   314  0009CE  0E00               	movlw	0
   315  0009D0  6E8B               	movwf	3979,c	;volatile
   316  0009D2  D000               	goto	l1408
   317  0009D4                     l1408:
   318                           
   319                           ;main.c: 74: {
   320                           ;main.c: 76: CCPR1L = CCPR1L + 16;
   321  0009D4  50BE               	movf	4030,w,c	;volatile
   322  0009D6  0F10               	addlw	16
   323  0009D8  6EBE               	movwf	4030,c	;volatile
   324                           
   325                           ;main.c: 77: ADC_Value = ADC_Convert();
   326  0009DA  EC59  F006         	call	_ADC_Convert	;wreg free
   327  0009DE  6E36               	movwf	_ADC_Value,c
   328                           
   329                           ;main.c: 78: ADC_Value = ADC_Value >> 4;
   330  0009E0  3836               	swapf	_ADC_Value,w,c
   331  0009E2  0B0F               	andlw	15
   332  0009E4  6E36               	movwf	_ADC_Value,c
   333                           
   334                           ;main.c: 80: SetLCDDDRamAddr(0x040);
   335  0009E6  0E40               	movlw	64
   336  0009E8  EC02  F005         	call	_SetLCDDDRamAddr
   337                           
   338                           ;main.c: 81: putIntLCD(ADC_Value);
   339  0009EC  C036  F030         	movff	_ADC_Value,putIntLCD@n
   340  0009F0  6A31               	clrf	putIntLCD@n+1,c
   341  0009F2  ECF6  F005         	call	_putIntLCD	;wreg free
   342                           
   343                           ;main.c: 83: LATDbits.LATD7 = ~LATDbits.LATD7;
   344  0009F6  7E8C               	btg	3980,7,c	;volatile
   345                           
   346                           ;main.c: 84: Delay1KTCYx(250);
   347  0009F8  0EFA               	movlw	250
   348  0009FA  EC3A  F006         	call	_Delay1KTCYx
   349  0009FE  D7EA               	goto	l1408
   350  000A00  EF60  F000         	goto	start
   351  000A04                     __end_of_main:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           
   355 ;; *************** function _LCDInitialDisplay *****************
   356 ;; Defined at:
   357 ;;		line 7 in file "lcddisplay.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;		None               void
   364 ;; Registers used:
   365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   371 ;;      Params:         0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    7
   378 ;; This function calls:
   379 ;;		_SetLCDCGRamAddr
   380 ;;		_SetLCDDDRamAddr
   381 ;;		_WriteCmdLCD
   382 ;;		_WriteDataLCD
   383 ;;		_putIntLCD
   384 ;;		_putLCD
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text1
   391  0006D4                     __ptext1:
   392                           	opt stack 0
   393  0006D4                     _LCDInitialDisplay:
   394                           	opt stack 23
   395                           
   396                           ;lcddisplay.c: 12: SetLCDCGRamAddr(0x00);
   397                           
   398                           ;incstack = 0
   399  0006D4  0E00               	movlw	0
   400  0006D6  ECAA  F004         	call	_SetLCDCGRamAddr
   401                           
   402                           ;lcddisplay.c: 13: WriteDataLCD(0b00000);
   403  0006DA  0E00               	movlw	0
   404  0006DC  EC7A  F005         	call	_WriteDataLCD
   405                           
   406                           ;lcddisplay.c: 14: WriteDataLCD(0b01111);
   407  0006E0  0E0F               	movlw	15
   408  0006E2  EC7A  F005         	call	_WriteDataLCD
   409                           
   410                           ;lcddisplay.c: 15: WriteDataLCD(0b10001);
   411  0006E6  0E11               	movlw	17
   412  0006E8  EC7A  F005         	call	_WriteDataLCD
   413                           
   414                           ;lcddisplay.c: 16: WriteDataLCD(0b10001);
   415  0006EC  0E11               	movlw	17
   416  0006EE  EC7A  F005         	call	_WriteDataLCD
   417                           
   418                           ;lcddisplay.c: 17: WriteDataLCD(0b10001);
   419  0006F2  0E11               	movlw	17
   420  0006F4  EC7A  F005         	call	_WriteDataLCD
   421                           
   422                           ;lcddisplay.c: 18: WriteDataLCD(0b01111);
   423  0006F8  0E0F               	movlw	15
   424  0006FA  EC7A  F005         	call	_WriteDataLCD
   425                           
   426                           ;lcddisplay.c: 19: WriteDataLCD(0b00111);
   427  0006FE  0E07               	movlw	7
   428  000700  EC7A  F005         	call	_WriteDataLCD
   429                           
   430                           ;lcddisplay.c: 20: WriteDataLCD(0b00111);
   431  000704  0E07               	movlw	7
   432  000706  EC7A  F005         	call	_WriteDataLCD
   433                           
   434                           ;lcddisplay.c: 23: SetLCDCGRamAddr(0x08);
   435  00070A  0E08               	movlw	8
   436  00070C  ECAA  F004         	call	_SetLCDCGRamAddr
   437                           
   438                           ;lcddisplay.c: 24: WriteDataLCD(0b11111);
   439  000710  0E1F               	movlw	31
   440  000712  EC7A  F005         	call	_WriteDataLCD
   441                           
   442                           ;lcddisplay.c: 25: WriteDataLCD(0b10001);
   443  000716  0E11               	movlw	17
   444  000718  EC7A  F005         	call	_WriteDataLCD
   445                           
   446                           ;lcddisplay.c: 26: WriteDataLCD(0b10001);
   447  00071C  0E11               	movlw	17
   448  00071E  EC7A  F005         	call	_WriteDataLCD
   449                           
   450                           ;lcddisplay.c: 27: WriteDataLCD(0b10101);
   451  000722  0E15               	movlw	21
   452  000724  EC7A  F005         	call	_WriteDataLCD
   453                           
   454                           ;lcddisplay.c: 28: WriteDataLCD(0b10001);
   455  000728  0E11               	movlw	17
   456  00072A  EC7A  F005         	call	_WriteDataLCD
   457                           
   458                           ;lcddisplay.c: 29: WriteDataLCD(0b10001);
   459  00072E  0E11               	movlw	17
   460  000730  EC7A  F005         	call	_WriteDataLCD
   461                           
   462                           ;lcddisplay.c: 30: WriteDataLCD(0b10001);
   463  000734  0E11               	movlw	17
   464  000736  EC7A  F005         	call	_WriteDataLCD
   465                           
   466                           ;lcddisplay.c: 31: WriteDataLCD(0b11111);
   467  00073A  0E1F               	movlw	31
   468  00073C  EC7A  F005         	call	_WriteDataLCD
   469                           
   470                           ;lcddisplay.c: 33: WriteCmdLCD(0b00000010);
   471  000740  0E02               	movlw	2
   472  000742  EC9A  F005         	call	_WriteCmdLCD
   473                           
   474                           ;lcddisplay.c: 34: putLCD( (unsigned char *)"Testing ");
   475  000746  0E0B               	movlw	low STR_1
   476  000748  6E22               	movwf	putLCD@buffer,c
   477  00074A  0E06               	movlw	high STR_1
   478  00074C  6E23               	movwf	putLCD@buffer+1,c
   479  00074E  EC4C  F004         	call	_putLCD	;wreg free
   480                           
   481                           ;lcddisplay.c: 36: putIntLCD(3455);
   482  000752  0E0D               	movlw	13
   483  000754  6E31               	movwf	putIntLCD@n+1,c
   484  000756  0E7F               	movlw	127
   485  000758  6E30               	movwf	putIntLCD@n,c
   486  00075A  ECF6  F005         	call	_putIntLCD	;wreg free
   487                           
   488                           ;lcddisplay.c: 38: SetLCDDDRamAddr(0x040);
   489  00075E  0E40               	movlw	64
   490  000760  EC02  F005         	call	_SetLCDDDRamAddr
   491                           
   492                           ;lcddisplay.c: 39: putLCD( (unsigned char *)"Line 000 ");
   493  000764  0E01               	movlw	low STR_2
   494  000766  6E22               	movwf	putLCD@buffer,c
   495  000768  0E06               	movlw	high STR_2
   496  00076A  6E23               	movwf	putLCD@buffer+1,c
   497  00076C  EC4C  F004         	call	_putLCD	;wreg free
   498                           
   499                           ;lcddisplay.c: 41: WriteDataLCD(0);
   500  000770  0E00               	movlw	0
   501  000772  EC7A  F005         	call	_WriteDataLCD
   502                           
   503                           ;lcddisplay.c: 42: WriteDataLCD(1);
   504  000776  0E01               	movlw	1
   505  000778  EC7A  F005         	call	_WriteDataLCD
   506  00077C  0012               	return		;funcret
   507  00077E                     __end_of_LCDInitialDisplay:
   508                           	opt stack 0
   509                           tblptru	equ	0xFF8
   510                           
   511 ;; *************** function _putIntLCD *****************
   512 ;; Defined at:
   513 ;;		line 378 in file "lcddisplay.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  n               2   47[COMRAM] short 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  result          4   49[COMRAM] unsigned char [4]
   518 ;; Return value:  Size  Location     Type
   519 ;;		None               void
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         2       0       0       0       0       0       0
   528 ;;      Locals:         4       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0
   530 ;;      Totals:         6       0       0       0       0       0       0
   531 ;;Total ram usage:        6 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    6
   534 ;; This function calls:
   535 ;;		_putLCD
   536 ;;		_utoa
   537 ;; This function is called by:
   538 ;;		_main
   539 ;;		_LCDInitialDisplay
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  000BEC                     __ptext2:
   545                           	opt stack 0
   546  000BEC                     _putIntLCD:
   547                           	opt stack 24
   548                           
   549                           ;lcddisplay.c: 379: unsigned char result[4];
   550                           ;lcddisplay.c: 380: utoa((char*)result, n, 10);
   551                           
   552                           ;incstack = 0
   553  000BEC  0E32               	movlw	low putIntLCD@result
   554  000BEE  6E27               	movwf	utoa@buf,c
   555  000BF0  0E00               	movlw	high putIntLCD@result
   556  000BF2  6E28               	movwf	utoa@buf+1,c
   557  000BF4  C030  F029         	movff	putIntLCD@n,utoa@val
   558  000BF8  C031  F02A         	movff	putIntLCD@n+1,utoa@val+1
   559  000BFC  0E00               	movlw	0
   560  000BFE  6E2C               	movwf	utoa@base+1,c
   561  000C00  0E0A               	movlw	10
   562  000C02  6E2B               	movwf	utoa@base,c
   563  000C04  ECBF  F003         	call	_utoa	;wreg free
   564                           
   565                           ;lcddisplay.c: 381: putLCD(result);
   566  000C08  0E32               	movlw	low putIntLCD@result
   567  000C0A  6E22               	movwf	putLCD@buffer,c
   568  000C0C  0E00               	movlw	high putIntLCD@result
   569  000C0E  6E23               	movwf	putLCD@buffer+1,c
   570  000C10  EC4C  F004         	call	_putLCD	;wreg free
   571  000C14  0012               	return		;funcret
   572  000C16                     __end_of_putIntLCD:
   573                           	opt stack 0
   574                           tblptru	equ	0xFF8
   575                           
   576 ;; *************** function _utoa *****************
   577 ;; Defined at:
   578 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  buf             2   38[COMRAM] PTR unsigned char 
   581 ;;		 -> putIntLCD@result(4), 
   582 ;;  val             2   40[COMRAM] unsigned int 
   583 ;;  base            2   42[COMRAM] int 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  v               2   44[COMRAM] unsigned int 
   586 ;;  c               1   46[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  2   38[COMRAM] PTR unsigned char 
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   596 ;;      Params:         6       0       0       0       0       0       0
   597 ;;      Locals:         3       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0
   599 ;;      Totals:         9       0       0       0       0       0       0
   600 ;;Total ram usage:        9 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    3
   603 ;; This function calls:
   604 ;;		___lwdiv
   605 ;;		___lwmod
   606 ;; This function is called by:
   607 ;;		_putIntLCD
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text3
   612  00077E                     __ptext3:
   613                           	opt stack 0
   614  00077E                     _utoa:
   615                           	opt stack 26
   616                           
   617                           ;incstack = 0
   618  00077E  C029  F02D         	movff	utoa@val,utoa@v
   619  000782  C02A  F02E         	movff	utoa@val+1,utoa@v+1
   620  000786  D000               	goto	l1344
   621  000788                     l1344:
   622  000788  C02D  F020         	movff	utoa@v,___lwdiv@dividend
   623  00078C  C02E  F021         	movff	utoa@v+1,___lwdiv@dividend+1
   624  000790  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   625  000794  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   626  000798  EC7C  F004         	call	___lwdiv	;wreg free
   627  00079C  C020  F02D         	movff	?___lwdiv,utoa@v
   628  0007A0  C021  F02E         	movff	?___lwdiv+1,utoa@v+1
   629  0007A4  4A27               	infsnz	utoa@buf,f,c
   630  0007A6  2A28               	incf	utoa@buf+1,f,c
   631  0007A8  502D               	movf	utoa@v,w,c
   632  0007AA  102E               	iorwf	utoa@v+1,w,c
   633  0007AC  A4D8               	btfss	status,2,c
   634  0007AE  D7EC               	goto	l1344
   635  0007B0  C027  FFD9         	movff	utoa@buf,fsr2l
   636  0007B4  C028  FFDA         	movff	utoa@buf+1,fsr2h
   637  0007B8  0E00               	movlw	0
   638  0007BA  6EDF               	movwf	indf2,c
   639  0007BC  0627               	decf	utoa@buf,f,c
   640  0007BE  A0D8               	btfss	status,0,c
   641  0007C0  0628               	decf	utoa@buf+1,f,c
   642  0007C2  D000               	goto	l1354
   643  0007C4                     l1354:
   644  0007C4  C029  F020         	movff	utoa@val,___lwmod@dividend
   645  0007C8  C02A  F021         	movff	utoa@val+1,___lwmod@dividend+1
   646  0007CC  C02B  F022         	movff	utoa@base,___lwmod@divisor
   647  0007D0  C02C  F023         	movff	utoa@base+1,___lwmod@divisor+1
   648  0007D4  EC54  F005         	call	___lwmod	;wreg free
   649  0007D8  5020               	movf	?___lwmod,w,c
   650  0007DA  6E2F               	movwf	utoa@c,c
   651  0007DC  C029  F020         	movff	utoa@val,___lwdiv@dividend
   652  0007E0  C02A  F021         	movff	utoa@val+1,___lwdiv@dividend+1
   653  0007E4  C02B  F022         	movff	utoa@base,___lwdiv@divisor
   654  0007E8  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
   655  0007EC  EC7C  F004         	call	___lwdiv	;wreg free
   656  0007F0  C020  F029         	movff	?___lwdiv,utoa@val
   657  0007F4  C021  F02A         	movff	?___lwdiv+1,utoa@val+1
   658  0007F8  0E09               	movlw	9
   659  0007FA  642F               	cpfsgt	utoa@c,c
   660  0007FC  D002               	goto	l701
   661  0007FE  0E07               	movlw	7
   662  000800  262F               	addwf	utoa@c,f,c
   663  000802                     l701:
   664  000802  0E30               	movlw	48
   665  000804  262F               	addwf	utoa@c,f,c
   666  000806  C027  FFD9         	movff	utoa@buf,fsr2l
   667  00080A  C028  FFDA         	movff	utoa@buf+1,fsr2h
   668  00080E  C02F  FFDF         	movff	utoa@c,indf2
   669  000812  0627               	decf	utoa@buf,f,c
   670  000814  A0D8               	btfss	status,0,c
   671  000816  0628               	decf	utoa@buf+1,f,c
   672  000818  5029               	movf	utoa@val,w,c
   673  00081A  102A               	iorwf	utoa@val+1,w,c
   674  00081C  A4D8               	btfss	status,2,c
   675  00081E  D7D2               	goto	l1354
   676                           
   677                           ;	Return value of _utoa is never used
   678  000820  4A27               	infsnz	utoa@buf,f,c
   679  000822  2A28               	incf	utoa@buf+1,f,c
   680  000824  0012               	return	
   681  000826  0012               	return		;funcret
   682  000828                     __end_of_utoa:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           indf2	equ	0xFDF
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           status	equ	0xFD8
   689                           
   690 ;; *************** function ___lwmod *****************
   691 ;; Defined at:
   692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  dividend        2   31[COMRAM] unsigned int 
   695 ;;  divisor         2   33[COMRAM] unsigned int 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  counter         1   35[COMRAM] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  2   31[COMRAM] unsigned int 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   707 ;;      Params:         4       0       0       0       0       0       0
   708 ;;      Locals:         1       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0
   710 ;;      Totals:         5       0       0       0       0       0       0
   711 ;;Total ram usage:        5 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    2
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_utoa
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text4
   722  000AA8                     __ptext4:
   723                           	opt stack 0
   724  000AA8                     ___lwmod:
   725                           	opt stack 26
   726                           
   727                           ;incstack = 0
   728  000AA8  5022               	movf	___lwmod@divisor,w,c
   729  000AAA  1023               	iorwf	___lwmod@divisor+1,w,c
   730  000AAC  B4D8               	btfsc	status,2,c
   731  000AAE  D01D               	goto	l805
   732  000AB0  0E01               	movlw	1
   733  000AB2  6E24               	movwf	___lwmod@counter,c
   734  000AB4  D005               	goto	l1322
   735  000AB6                     l1320:
   736  000AB6  90D8               	bcf	status,0,c
   737  000AB8  3622               	rlcf	___lwmod@divisor,f,c
   738  000ABA  3623               	rlcf	___lwmod@divisor+1,f,c
   739  000ABC  2A24               	incf	___lwmod@counter,f,c
   740  000ABE  D000               	goto	l1322
   741  000AC0                     l1322:
   742  000AC0  BE23               	btfsc	___lwmod@divisor+1,7,c
   743  000AC2  D002               	goto	l1324
   744  000AC4  D7F8               	goto	l1320
   745  000AC6  D000               	goto	l1324
   746  000AC8                     l1324:
   747  000AC8  5022               	movf	___lwmod@divisor,w,c
   748  000ACA  5C20               	subwf	___lwmod@dividend,w,c
   749  000ACC  5023               	movf	___lwmod@divisor+1,w,c
   750  000ACE  5821               	subwfb	___lwmod@dividend+1,w,c
   751  000AD0  A0D8               	btfss	status,0,c
   752  000AD2  D005               	goto	l1328
   753  000AD4  5022               	movf	___lwmod@divisor,w,c
   754  000AD6  5E20               	subwf	___lwmod@dividend,f,c
   755  000AD8  5023               	movf	___lwmod@divisor+1,w,c
   756  000ADA  5A21               	subwfb	___lwmod@dividend+1,f,c
   757  000ADC  D000               	goto	l1328
   758  000ADE                     l1328:
   759  000ADE  90D8               	bcf	status,0,c
   760  000AE0  3223               	rrcf	___lwmod@divisor+1,f,c
   761  000AE2  3222               	rrcf	___lwmod@divisor,f,c
   762  000AE4  2E24               	decfsz	___lwmod@counter,f,c
   763  000AE6  D7F0               	goto	l1324
   764  000AE8  D000               	goto	l805
   765  000AEA                     l805:
   766  000AEA  C020  F020         	movff	___lwmod@dividend,?___lwmod
   767  000AEE  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
   768  000AF2  0012               	return		;funcret
   769  000AF4                     __end_of___lwmod:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           indf2	equ	0xFDF
   773                           fsr2h	equ	0xFDA
   774                           fsr2l	equ	0xFD9
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function ___lwdiv *****************
   778 ;; Defined at:
   779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  dividend        2   31[COMRAM] unsigned int 
   782 ;;  divisor         2   33[COMRAM] unsigned int 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  quotient        2   35[COMRAM] unsigned int 
   785 ;;  counter         1   37[COMRAM] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  2   31[COMRAM] unsigned int 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   795 ;;      Params:         4       0       0       0       0       0       0
   796 ;;      Locals:         3       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0
   798 ;;      Totals:         7       0       0       0       0       0       0
   799 ;;Total ram usage:        7 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_utoa
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text5
   810  0008F8                     __ptext5:
   811                           	opt stack 0
   812  0008F8                     ___lwdiv:
   813                           	opt stack 26
   814                           
   815                           ;incstack = 0
   816  0008F8  0E00               	movlw	0
   817  0008FA  6E25               	movwf	___lwdiv@quotient+1,c
   818  0008FC  0E00               	movlw	0
   819  0008FE  6E24               	movwf	___lwdiv@quotient,c
   820  000900  5022               	movf	___lwdiv@divisor,w,c
   821  000902  1023               	iorwf	___lwdiv@divisor+1,w,c
   822  000904  B4D8               	btfsc	status,2,c
   823  000906  D021               	goto	l795
   824  000908  0E01               	movlw	1
   825  00090A  6E26               	movwf	___lwdiv@counter,c
   826  00090C  D005               	goto	l1302
   827  00090E                     l1300:
   828  00090E  90D8               	bcf	status,0,c
   829  000910  3622               	rlcf	___lwdiv@divisor,f,c
   830  000912  3623               	rlcf	___lwdiv@divisor+1,f,c
   831  000914  2A26               	incf	___lwdiv@counter,f,c
   832  000916  D000               	goto	l1302
   833  000918                     l1302:
   834  000918  BE23               	btfsc	___lwdiv@divisor+1,7,c
   835  00091A  D002               	goto	l1304
   836  00091C  D7F8               	goto	l1300
   837  00091E  D000               	goto	l1304
   838  000920                     l1304:
   839  000920  90D8               	bcf	status,0,c
   840  000922  3624               	rlcf	___lwdiv@quotient,f,c
   841  000924  3625               	rlcf	___lwdiv@quotient+1,f,c
   842  000926  5022               	movf	___lwdiv@divisor,w,c
   843  000928  5C20               	subwf	___lwdiv@dividend,w,c
   844  00092A  5023               	movf	___lwdiv@divisor+1,w,c
   845  00092C  5821               	subwfb	___lwdiv@dividend+1,w,c
   846  00092E  A0D8               	btfss	status,0,c
   847  000930  D006               	goto	l1312
   848  000932  5022               	movf	___lwdiv@divisor,w,c
   849  000934  5E20               	subwf	___lwdiv@dividend,f,c
   850  000936  5023               	movf	___lwdiv@divisor+1,w,c
   851  000938  5A21               	subwfb	___lwdiv@dividend+1,f,c
   852  00093A  8024               	bsf	___lwdiv@quotient,0,c
   853  00093C  D000               	goto	l1312
   854  00093E                     l1312:
   855  00093E  90D8               	bcf	status,0,c
   856  000940  3223               	rrcf	___lwdiv@divisor+1,f,c
   857  000942  3222               	rrcf	___lwdiv@divisor,f,c
   858  000944  2E26               	decfsz	___lwdiv@counter,f,c
   859  000946  D7EC               	goto	l1304
   860  000948  D000               	goto	l795
   861  00094A                     l795:
   862  00094A  C024  F020         	movff	___lwdiv@quotient,?___lwdiv
   863  00094E  C025  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
   864  000952  0012               	return		;funcret
   865  000954                     __end_of___lwdiv:
   866                           	opt stack 0
   867                           tblptru	equ	0xFF8
   868                           indf2	equ	0xFDF
   869                           fsr2h	equ	0xFDA
   870                           fsr2l	equ	0xFD9
   871                           status	equ	0xFD8
   872                           
   873 ;; *************** function _putLCD *****************
   874 ;; Defined at:
   875 ;;		line 385 in file "lcddisplay.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  buffer          2   33[COMRAM] PTR unsigned char 
   878 ;;		 -> putIntLCD@result(4), STR_2(10), STR_1(9), 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   890 ;;      Params:         2       0       0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    5
   897 ;; This function calls:
   898 ;;		_BusyLCD
   899 ;;		_WriteDataLCD
   900 ;; This function is called by:
   901 ;;		_LCDInitialDisplay
   902 ;;		_putIntLCD
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text6
   907  000898                     __ptext6:
   908                           	opt stack 0
   909  000898                     _putLCD:
   910                           	opt stack 24
   911                           
   912                           ;lcddisplay.c: 387: while(*buffer)
   913                           
   914                           ;incstack = 0
   915  000898  D01B               	goto	l1340
   916                           
   917                           ;lcddisplay.c: 388: {
   918                           ;lcddisplay.c: 389: while(BusyLCD());
   919  00089A  D000               	goto	l1334
   920  00089C                     l1334:
   921  00089C  ECD8  F005         	call	_BusyLCD	;wreg free
   922  0008A0  0900               	iorlw	0
   923  0008A2  A4D8               	btfss	status,2,c
   924  0008A4  D7FB               	goto	l1334
   925                           
   926                           ;lcddisplay.c: 390: WriteDataLCD(*buffer);
   927  0008A6  C022  FFF6         	movff	putLCD@buffer,tblptrl
   928  0008AA  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   929  0008AE  6AF8               	clrf	tblptru,c
   930  0008B0  0E05               	movlw	(high __ramtop+-1)
   931  0008B2  64F7               	cpfsgt	tblptrh,c
   932  0008B4  D003               	bra	u427
   933  0008B6  0008               	tblrd		*
   934  0008B8  50F5               	movf	tablat,w,c
   935  0008BA  D005               	bra	u420
   936  0008BC                     u427:
   937  0008BC  CFF6 FFE9          	movff	tblptrl,fsr0l
   938  0008C0  CFF7 FFEA          	movff	tblptrh,fsr0h
   939  0008C4  50EF               	movf	indf0,w,c
   940  0008C6                     u420:
   941  0008C6  EC7A  F005         	call	_WriteDataLCD
   942                           
   943                           ;lcddisplay.c: 391: buffer++;
   944  0008CA  4A22               	infsnz	putLCD@buffer,f,c
   945  0008CC  2A23               	incf	putLCD@buffer+1,f,c
   946  0008CE  D000               	goto	l1340
   947  0008D0                     l1340:
   948  0008D0  C022  FFF6         	movff	putLCD@buffer,tblptrl
   949  0008D4  C023  FFF7         	movff	putLCD@buffer+1,tblptrh
   950  0008D8  6AF8               	clrf	tblptru,c
   951  0008DA  0E05               	movlw	(high __ramtop+-1)
   952  0008DC  64F7               	cpfsgt	tblptrh,c
   953  0008DE  D003               	bra	u437
   954  0008E0  0008               	tblrd		*
   955  0008E2  50F5               	movf	tablat,w,c
   956  0008E4  D005               	bra	u430
   957  0008E6                     u437:
   958  0008E6  CFF6 FFE9          	movff	tblptrl,fsr0l
   959  0008EA  CFF7 FFEA          	movff	tblptrh,fsr0h
   960  0008EE  50EF               	movf	indf0,w,c
   961  0008F0                     u430:
   962  0008F0  0900               	iorlw	0
   963  0008F2  A4D8               	btfss	status,2,c
   964  0008F4  D7D3               	goto	l1334
   965                           
   966                           ;lcddisplay.c: 392: }
   967                           ;lcddisplay.c: 393: return;
   968  0008F6  0012               	return		;funcret
   969  0008F8                     __end_of_putLCD:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           indf0	equ	0xFEF
   976                           fsr0h	equ	0xFEA
   977                           fsr0l	equ	0xFE9
   978                           indf2	equ	0xFDF
   979                           fsr2h	equ	0xFDA
   980                           fsr2l	equ	0xFD9
   981                           status	equ	0xFD8
   982                           
   983 ;; *************** function _WriteDataLCD *****************
   984 ;; Defined at:
   985 ;;		line 396 in file "lcddisplay.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  data            1    wreg     unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  data            1   32[COMRAM] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;		None               void
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         0       0       0       0       0       0       0
  1000 ;;      Locals:         1       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0
  1002 ;;      Totals:         1       0       0       0       0       0       0
  1003 ;;Total ram usage:        1 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		_DelayFor18TCY
  1008 ;; This function is called by:
  1009 ;;		_LCDInitialDisplay
  1010 ;;		_putLCD
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text7
  1015  000AF4                     __ptext7:
  1016                           	opt stack 0
  1017  000AF4                     _WriteDataLCD:
  1018                           	opt stack 24
  1019                           
  1020                           ;incstack = 0
  1021                           ;WriteDataLCD@data stored from wreg
  1022  000AF4  6E21               	movwf	WriteDataLCD@data,c
  1023                           
  1024                           ;lcddisplay.c: 415: TRISD &= 0xf0;
  1025  000AF6  0EF0               	movlw	240
  1026  000AF8  1695               	andwf	3989,f,c	;volatile
  1027                           
  1028                           ;lcddisplay.c: 416: PORTD &= 0xf0;
  1029  000AFA  0EF0               	movlw	240
  1030  000AFC  1683               	andwf	3971,f,c	;volatile
  1031                           
  1032                           ;lcddisplay.c: 417: PORTD |= ((data>>4)&0x0f);
  1033  000AFE  3821               	swapf	WriteDataLCD@data,w,c
  1034  000B00  0B0F               	andlw	15
  1035  000B02  0B0F               	andlw	15
  1036  000B04  1283               	iorwf	3971,f,c	;volatile
  1037                           
  1038                           ;lcddisplay.c: 419: LATEbits.LATE0 = 1;
  1039  000B06  808D               	bsf	3981,0,c	;volatile
  1040                           
  1041                           ;lcddisplay.c: 420: LATEbits.LATE1 = 0;
  1042  000B08  928D               	bcf	3981,1,c	;volatile
  1043                           
  1044                           ;lcddisplay.c: 421: DelayFor18TCY();
  1045  000B0A  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1046                           
  1047                           ;lcddisplay.c: 422: LATEbits.LATE2 = 1;
  1048  000B0E  848D               	bsf	3981,2,c	;volatile
  1049                           
  1050                           ;lcddisplay.c: 423: DelayFor18TCY();
  1051  000B10  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1052                           
  1053                           ;lcddisplay.c: 424: LATEbits.LATE2 = 0;
  1054  000B14  948D               	bcf	3981,2,c	;volatile
  1055                           
  1056                           ;lcddisplay.c: 429: PORTD &= 0xf0;
  1057  000B16  0EF0               	movlw	240
  1058  000B18  1683               	andwf	3971,f,c	;volatile
  1059                           
  1060                           ;lcddisplay.c: 430: PORTD |= (data&0x0f);
  1061  000B1A  5021               	movf	WriteDataLCD@data,w,c
  1062  000B1C  0B0F               	andlw	15
  1063  000B1E  1283               	iorwf	3971,f,c	;volatile
  1064                           
  1065                           ;lcddisplay.c: 432: DelayFor18TCY();
  1066  000B20  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1067                           
  1068                           ;lcddisplay.c: 433: LATEbits.LATE2 = 1;
  1069  000B24  848D               	bsf	3981,2,c	;volatile
  1070                           
  1071                           ;lcddisplay.c: 434: DelayFor18TCY();
  1072  000B26  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1073                           
  1074                           ;lcddisplay.c: 435: LATEbits.LATE2 = 0;
  1075  000B2A  948D               	bcf	3981,2,c	;volatile
  1076                           
  1077                           ;lcddisplay.c: 439: TRISD |= 0x0f;
  1078  000B2C  0E0F               	movlw	15
  1079  000B2E  1295               	iorwf	3989,f,c	;volatile
  1080  000B30  0012               	return	
  1081                           
  1082                           ;lcddisplay.c: 443: return;
  1083  000B32  0012               	return		;funcret
  1084  000B34                     __end_of_WriteDataLCD:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           indf0	equ	0xFEF
  1091                           fsr0h	equ	0xFEA
  1092                           fsr0l	equ	0xFE9
  1093                           indf2	equ	0xFDF
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _SetLCDCGRamAddr *****************
  1099 ;; Defined at:
  1100 ;;		line 326 in file "lcddisplay.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  CGaddr          1    wreg     unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  CGaddr          1   35[COMRAM] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;		None               void
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1114 ;;      Params:         0       0       0       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0       0       0
  1116 ;;      Temps:          3       0       0       0       0       0       0
  1117 ;;      Totals:         4       0       0       0       0       0       0
  1118 ;;Total ram usage:        4 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    4
  1121 ;; This function calls:
  1122 ;;		_DelayFor18TCY
  1123 ;; This function is called by:
  1124 ;;		_LCDInitialDisplay
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text8
  1129  000954                     __ptext8:
  1130                           	opt stack 0
  1131  000954                     _SetLCDCGRamAddr:
  1132                           	opt stack 25
  1133                           
  1134                           ;incstack = 0
  1135                           ;SetLCDCGRamAddr@CGaddr stored from wreg
  1136  000954  6E24               	movwf	SetLCDCGRamAddr@CGaddr,c
  1137                           
  1138                           ;lcddisplay.c: 345: TRISD &= 0xf0;
  1139  000956  0EF0               	movlw	240
  1140  000958  1695               	andwf	3989,f,c	;volatile
  1141                           
  1142                           ;lcddisplay.c: 346: PORTD &= 0xf0;
  1143  00095A  0EF0               	movlw	240
  1144  00095C  1683               	andwf	3971,f,c	;volatile
  1145                           
  1146                           ;lcddisplay.c: 347: PORTD |= (((CGaddr |0b01000000)>>4) & 0x0f);
  1147  00095E  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1148  000960  6E21               	movwf	??_SetLCDCGRamAddr& (0+255),c
  1149  000962  6A22               	clrf	(??_SetLCDCGRamAddr+1)& (0+255),c
  1150  000964  0E40               	movlw	64
  1151  000966  1221               	iorwf	??_SetLCDCGRamAddr,f,c
  1152  000968  0E00               	movlw	0
  1153  00096A  1222               	iorwf	??_SetLCDCGRamAddr+1,f,c
  1154  00096C  0E04               	movlw	4
  1155  00096E  6E23               	movwf	(??_SetLCDCGRamAddr+2)& (0+255),c
  1156  000970                     u175:
  1157  000970  3422               	rlcf	??_SetLCDCGRamAddr+1,w,c
  1158  000972  3222               	rrcf	??_SetLCDCGRamAddr+1,f,c
  1159  000974  3221               	rrcf	??_SetLCDCGRamAddr,f,c
  1160  000976  2E23               	decfsz	(??_SetLCDCGRamAddr+2)& (0+255),f,c
  1161  000978  D7FB               	goto	u175
  1162  00097A  5021               	movf	??_SetLCDCGRamAddr,w,c
  1163  00097C  0B0F               	andlw	15
  1164  00097E  1283               	iorwf	3971,f,c	;volatile
  1165                           
  1166                           ;lcddisplay.c: 349: LATEbits.LATE1 = 0;
  1167  000980  928D               	bcf	3981,1,c	;volatile
  1168                           
  1169                           ;lcddisplay.c: 350: LATEbits.LATE0 = 0;
  1170  000982  908D               	bcf	3981,0,c	;volatile
  1171                           
  1172                           ;lcddisplay.c: 351: DelayFor18TCY();
  1173  000984  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1174                           
  1175                           ;lcddisplay.c: 352: LATEbits.LATE2 = 1;
  1176  000988  848D               	bsf	3981,2,c	;volatile
  1177                           
  1178                           ;lcddisplay.c: 353: DelayFor18TCY();
  1179  00098A  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1180                           
  1181                           ;lcddisplay.c: 354: LATEbits.LATE2 = 0;
  1182  00098E  948D               	bcf	3981,2,c	;volatile
  1183                           
  1184                           ;lcddisplay.c: 359: PORTD &= 0xf0;
  1185  000990  0EF0               	movlw	240
  1186  000992  1683               	andwf	3971,f,c	;volatile
  1187                           
  1188                           ;lcddisplay.c: 360: PORTD |= (CGaddr&0x0f);
  1189  000994  5024               	movf	SetLCDCGRamAddr@CGaddr,w,c
  1190  000996  0B0F               	andlw	15
  1191  000998  1283               	iorwf	3971,f,c	;volatile
  1192                           
  1193                           ;lcddisplay.c: 362: DelayFor18TCY();
  1194  00099A  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1195                           
  1196                           ;lcddisplay.c: 363: LATEbits.LATE2 = 1;
  1197  00099E  848D               	bsf	3981,2,c	;volatile
  1198                           
  1199                           ;lcddisplay.c: 364: DelayFor18TCY();
  1200  0009A0  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1201                           
  1202                           ;lcddisplay.c: 365: LATEbits.LATE2 = 0;
  1203  0009A4  948D               	bcf	3981,2,c	;volatile
  1204                           
  1205                           ;lcddisplay.c: 369: TRISD |= 0x0f;
  1206  0009A6  0E0F               	movlw	15
  1207  0009A8  1295               	iorwf	3989,f,c	;volatile
  1208  0009AA  0012               	return	
  1209                           
  1210                           ;lcddisplay.c: 373: return;
  1211  0009AC  0012               	return		;funcret
  1212  0009AE                     __end_of_SetLCDCGRamAddr:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           tblptrh	equ	0xFF7
  1216                           tblptrl	equ	0xFF6
  1217                           tablat	equ	0xFF5
  1218                           indf0	equ	0xFEF
  1219                           fsr0h	equ	0xFEA
  1220                           fsr0l	equ	0xFE9
  1221                           indf2	equ	0xFDF
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _InitPorts *****************
  1227 ;; Defined at:
  1228 ;;		line 42 in file "ports.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, status,2
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1242 ;;      Params:         0       0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text9
  1257  000C16                     __ptext9:
  1258                           	opt stack 0
  1259  000C16                     _InitPorts:
  1260                           	opt stack 28
  1261                           
  1262                           ;ports.c: 44: ANSEL = 0;
  1263                           
  1264                           ;incstack = 0
  1265  000C16  0E00               	movlw	0
  1266  000C18  6E7E               	movwf	3966,c	;volatile
  1267                           
  1268                           ;ports.c: 45: ANSELH = 0;
  1269  000C1A  0E00               	movlw	0
  1270  000C1C  6E7F               	movwf	3967,c	;volatile
  1271                           
  1272                           ;ports.c: 57: TRISA = 0b11100000;
  1273  000C1E  0EE0               	movlw	224
  1274  000C20  6E92               	movwf	3986,c	;volatile
  1275                           
  1276                           ;ports.c: 58: ANSEL = 0b11100000;
  1277  000C22  0EE0               	movlw	224
  1278  000C24  6E7E               	movwf	3966,c	;volatile
  1279                           
  1280                           ;ports.c: 70: INTCON2bits.RBPU = 0;
  1281  000C26  9EF1               	bcf	intcon2,7,c	;volatile
  1282                           
  1283                           ;ports.c: 71: WPUBbits.WPUB0 = 1;
  1284  000C28  807C               	bsf	3964,0,c	;volatile
  1285                           
  1286                           ;ports.c: 73: TRISB = 0b00110111;
  1287  000C2A  0E37               	movlw	55
  1288  000C2C  6E93               	movwf	3987,c	;volatile
  1289                           
  1290                           ;ports.c: 77: TRISCbits.RC2 = 0;
  1291  000C2E  9494               	bcf	3988,2,c	;volatile
  1292                           
  1293                           ;ports.c: 90: TRISD = 0b00010000;
  1294  000C30  0E10               	movlw	16
  1295  000C32  6E95               	movwf	3989,c	;volatile
  1296  000C34  0012               	return		;funcret
  1297  000C36                     __end_of_InitPorts:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           intcon2	equ	0xFF1
  1304                           indf0	equ	0xFEF
  1305                           fsr0h	equ	0xFEA
  1306                           fsr0l	equ	0xFE9
  1307                           indf2	equ	0xFDF
  1308                           fsr2h	equ	0xFDA
  1309                           fsr2l	equ	0xFD9
  1310                           status	equ	0xFD8
  1311                           
  1312 ;; *************** function _InitMotorPWM *****************
  1313 ;; Defined at:
  1314 ;;		line 106 in file "ports.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text10
  1343  000C86                     __ptext10:
  1344                           	opt stack 0
  1345  000C86                     _InitMotorPWM:
  1346                           	opt stack 28
  1347                           
  1348                           ;ports.c: 108: CCP1CON = 0b00001100;
  1349                           
  1350                           ;incstack = 0
  1351  000C86  0E0C               	movlw	12
  1352  000C88  6EBD               	movwf	4029,c	;volatile
  1353                           
  1354                           ;ports.c: 111: PR2 = 255;
  1355  000C8A  68CB               	setf	4043,c	;volatile
  1356                           
  1357                           ;ports.c: 114: T2CON = 0b00001100;
  1358  000C8C  0E0C               	movlw	12
  1359  000C8E  6ECA               	movwf	4042,c	;volatile
  1360                           
  1361                           ;ports.c: 117: CCPR1L = 0;
  1362  000C90  0E00               	movlw	0
  1363  000C92  6EBE               	movwf	4030,c	;volatile
  1364  000C94  0012               	return		;funcret
  1365  000C96                     __end_of_InitMotorPWM:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           intcon2	equ	0xFF1
  1372                           indf0	equ	0xFEF
  1373                           fsr0h	equ	0xFEA
  1374                           fsr0l	equ	0xFE9
  1375                           indf2	equ	0xFDF
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _InitLCD *****************
  1381 ;; Defined at:
  1382 ;;		line 47 in file "lcddisplay.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    6
  1403 ;; This function calls:
  1404 ;;		_BusyLCD
  1405 ;;		_OpenLCD
  1406 ;;		_WriteCmdLCD
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text11
  1413  000A58                     __ptext11:
  1414                           	opt stack 0
  1415  000A58                     _InitLCD:
  1416                           	opt stack 24
  1417                           
  1418                           ;lcddisplay.c: 48: OpenLCD(0b00101100 & 0b00111000);
  1419                           
  1420                           ;incstack = 0
  1421  000A58  0E28               	movlw	40
  1422  000A5A  EC0B  F003         	call	_OpenLCD
  1423                           
  1424                           ;lcddisplay.c: 49: while(BusyLCD());
  1425  000A5E  D000               	goto	l1204
  1426  000A60                     l1204:
  1427  000A60  ECD8  F005         	call	_BusyLCD	;wreg free
  1428  000A64  0900               	iorlw	0
  1429  000A66  A4D8               	btfss	status,2,c
  1430  000A68  D7FB               	goto	l1204
  1431                           
  1432                           ;lcddisplay.c: 50: WriteCmdLCD(0x06);
  1433  000A6A  0E06               	movlw	6
  1434  000A6C  EC9A  F005         	call	_WriteCmdLCD
  1435                           
  1436                           ;lcddisplay.c: 51: while(BusyLCD());
  1437  000A70  D000               	goto	l1208
  1438  000A72                     l1208:
  1439  000A72  ECD8  F005         	call	_BusyLCD	;wreg free
  1440  000A76  0900               	iorlw	0
  1441  000A78  A4D8               	btfss	status,2,c
  1442  000A7A  D7FB               	goto	l1208
  1443                           
  1444                           ;lcddisplay.c: 52: WriteCmdLCD(0x0C);
  1445  000A7C  0E0C               	movlw	12
  1446  000A7E  EC9A  F005         	call	_WriteCmdLCD
  1447                           
  1448                           ;lcddisplay.c: 53: while(BusyLCD());
  1449  000A82  D000               	goto	l1212
  1450  000A84                     l1212:
  1451  000A84  ECD8  F005         	call	_BusyLCD	;wreg free
  1452  000A88  0900               	iorlw	0
  1453  000A8A  A4D8               	btfss	status,2,c
  1454  000A8C  D7FB               	goto	l1212
  1455                           
  1456                           ;lcddisplay.c: 54: WriteCmdLCD(0x01);
  1457  000A8E  0E01               	movlw	1
  1458  000A90  EC9A  F005         	call	_WriteCmdLCD
  1459                           
  1460                           ;lcddisplay.c: 55: while(BusyLCD());
  1461  000A94  D000               	goto	l1216
  1462  000A96                     l1216:
  1463  000A96  ECD8  F005         	call	_BusyLCD	;wreg free
  1464  000A9A  0900               	iorlw	0
  1465  000A9C  A4D8               	btfss	status,2,c
  1466  000A9E  D7FB               	goto	l1216
  1467                           
  1468                           ;lcddisplay.c: 56: WriteCmdLCD(66);
  1469  000AA0  0E42               	movlw	66
  1470  000AA2  EC9A  F005         	call	_WriteCmdLCD
  1471  000AA6  0012               	return		;funcret
  1472  000AA8                     __end_of_InitLCD:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           intcon2	equ	0xFF1
  1479                           indf0	equ	0xFEF
  1480                           fsr0h	equ	0xFEA
  1481                           fsr0l	equ	0xFE9
  1482                           indf2	equ	0xFDF
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _OpenLCD *****************
  1488 ;; Defined at:
  1489 ;;		line 65 in file "lcddisplay.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  lcdtype         1    wreg     unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  lcdtype         1   36[COMRAM] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;		None               void
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1503 ;;      Params:         0       0       0       0       0       0       0
  1504 ;;      Locals:         1       0       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0
  1506 ;;      Totals:         1       0       0       0       0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    5
  1510 ;; This function calls:
  1511 ;;		_BusyLCD
  1512 ;;		_BusyXLCD
  1513 ;;		_Delay100TCYx
  1514 ;;		_Delay10KTCYx
  1515 ;;		_SetLCDDDRamAddr
  1516 ;;		_WriteCmdLCD
  1517 ;; This function is called by:
  1518 ;;		_InitLCD
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text12
  1523  000616                     __ptext12:
  1524                           	opt stack 0
  1525  000616                     _OpenLCD:
  1526                           	opt stack 24
  1527                           
  1528                           ;incstack = 0
  1529                           ;OpenLCD@lcdtype stored from wreg
  1530  000616  6E25               	movwf	OpenLCD@lcdtype,c
  1531                           
  1532                           ;lcddisplay.c: 68: Delay100TCYx(38);
  1533  000618  0E26               	movlw	38
  1534  00061A  EC31  F006         	call	_Delay100TCYx
  1535                           
  1536                           ;lcddisplay.c: 79: PORTD &= 0xf0;
  1537  00061E  0EF0               	movlw	240
  1538  000620  1683               	andwf	3971,f,c	;volatile
  1539                           
  1540                           ;lcddisplay.c: 80: TRISD &= 0xF0;
  1541  000622  0EF0               	movlw	240
  1542  000624  1695               	andwf	3989,f,c	;volatile
  1543                           
  1544                           ;lcddisplay.c: 83: TRISEbits.TRISE1 = 0;
  1545  000626  9296               	bcf	3990,1,c	;volatile
  1546                           
  1547                           ;lcddisplay.c: 84: TRISEbits.TRISE0 = 0;
  1548  000628  9096               	bcf	3990,0,c	;volatile
  1549                           
  1550                           ;lcddisplay.c: 85: TRISEbits.TRISE2 = 0;
  1551  00062A  9496               	bcf	3990,2,c	;volatile
  1552                           
  1553                           ;lcddisplay.c: 86: LATEbits.LATE1 = 0;
  1554  00062C  928D               	bcf	3981,1,c	;volatile
  1555                           
  1556                           ;lcddisplay.c: 87: LATEbits.LATE0 = 0;
  1557  00062E  908D               	bcf	3981,0,c	;volatile
  1558                           
  1559                           ;lcddisplay.c: 88: LATEbits.LATE2 = 0;
  1560  000630  948D               	bcf	3981,2,c	;volatile
  1561                           
  1562                           ;lcddisplay.c: 91: Delay100TCYx(38);
  1563  000632  0E26               	movlw	38
  1564  000634  EC31  F006         	call	_Delay100TCYx
  1565                           
  1566                           ;lcddisplay.c: 94: WriteCmdLCD(0x30);
  1567  000638  0E30               	movlw	48
  1568  00063A  EC9A  F005         	call	_WriteCmdLCD
  1569                           
  1570                           ;lcddisplay.c: 95: Delay10KTCYx(0x05);
  1571  00063E  0E05               	movlw	5
  1572  000640  EC1B  F006         	call	_Delay10KTCYx
  1573                           
  1574                           ;lcddisplay.c: 97: WriteCmdLCD(0x30);
  1575  000644  0E30               	movlw	48
  1576  000646  EC9A  F005         	call	_WriteCmdLCD
  1577                           
  1578                           ;lcddisplay.c: 98: Delay10KTCYx(0x01);
  1579  00064A  0E01               	movlw	1
  1580  00064C  EC1B  F006         	call	_Delay10KTCYx
  1581                           
  1582                           ;lcddisplay.c: 101: WriteCmdLCD(0x32);
  1583  000650  0E32               	movlw	50
  1584  000652  EC9A  F005         	call	_WriteCmdLCD
  1585                           
  1586                           ;lcddisplay.c: 102: while( BusyXLCD() );
  1587  000656  D000               	goto	l1160
  1588  000658                     l1160:
  1589  000658  ECBA  F005         	call	_BusyXLCD	;wreg free
  1590  00065C  0900               	iorlw	0
  1591  00065E  B4D8               	btfsc	status,2,c
  1592  000660  D002               	goto	l1162
  1593  000662  D7FA               	goto	l1160
  1594                           
  1595                           ;lcddisplay.c: 107: while(BusyLCD());
  1596  000664  D000               	goto	l1162
  1597  000666                     l1162:
  1598  000666  ECD8  F005         	call	_BusyLCD	;wreg free
  1599  00066A  0900               	iorlw	0
  1600  00066C  A4D8               	btfss	status,2,c
  1601  00066E  D7FB               	goto	l1162
  1602                           
  1603                           ;lcddisplay.c: 108: WriteCmdLCD(lcdtype);
  1604  000670  5025               	movf	OpenLCD@lcdtype,w,c
  1605  000672  EC9A  F005         	call	_WriteCmdLCD
  1606                           
  1607                           ;lcddisplay.c: 111: while(BusyLCD());
  1608  000676  D000               	goto	l1166
  1609  000678                     l1166:
  1610  000678  ECD8  F005         	call	_BusyLCD	;wreg free
  1611  00067C  0900               	iorlw	0
  1612  00067E  A4D8               	btfss	status,2,c
  1613  000680  D7FB               	goto	l1166
  1614                           
  1615                           ;lcddisplay.c: 112: WriteCmdLCD(0b00001011&0b00001101&0b00001110);
  1616  000682  0E08               	movlw	8
  1617  000684  EC9A  F005         	call	_WriteCmdLCD
  1618                           
  1619                           ;lcddisplay.c: 113: while(BusyLCD());
  1620  000688  D000               	goto	l1170
  1621  00068A                     l1170:
  1622  00068A  ECD8  F005         	call	_BusyLCD	;wreg free
  1623  00068E  0900               	iorlw	0
  1624  000690  A4D8               	btfss	status,2,c
  1625  000692  D7FB               	goto	l1170
  1626                           
  1627                           ;lcddisplay.c: 114: WriteCmdLCD(0b00001111&0b00001111&0b00001111);
  1628  000694  0E0F               	movlw	15
  1629  000696  EC9A  F005         	call	_WriteCmdLCD
  1630                           
  1631                           ;lcddisplay.c: 117: while(BusyLCD());
  1632  00069A  D000               	goto	l1174
  1633  00069C                     l1174:
  1634  00069C  ECD8  F005         	call	_BusyLCD	;wreg free
  1635  0006A0  0900               	iorlw	0
  1636  0006A2  A4D8               	btfss	status,2,c
  1637  0006A4  D7FB               	goto	l1174
  1638                           
  1639                           ;lcddisplay.c: 118: WriteCmdLCD(0x01);
  1640  0006A6  0E01               	movlw	1
  1641  0006A8  EC9A  F005         	call	_WriteCmdLCD
  1642                           
  1643                           ;lcddisplay.c: 121: while(BusyLCD());
  1644  0006AC  D000               	goto	l1178
  1645  0006AE                     l1178:
  1646  0006AE  ECD8  F005         	call	_BusyLCD	;wreg free
  1647  0006B2  0900               	iorlw	0
  1648  0006B4  A4D8               	btfss	status,2,c
  1649  0006B6  D7FB               	goto	l1178
  1650                           
  1651                           ;lcddisplay.c: 122: WriteCmdLCD(0b00000100);
  1652  0006B8  0E04               	movlw	4
  1653  0006BA  EC9A  F005         	call	_WriteCmdLCD
  1654                           
  1655                           ;lcddisplay.c: 125: while(BusyLCD());
  1656  0006BE  D000               	goto	l1182
  1657  0006C0                     l1182:
  1658  0006C0  ECD8  F005         	call	_BusyLCD	;wreg free
  1659  0006C4  0900               	iorlw	0
  1660  0006C6  A4D8               	btfss	status,2,c
  1661  0006C8  D7FB               	goto	l1182
  1662                           
  1663                           ;lcddisplay.c: 126: SetLCDDDRamAddr(0x80);
  1664  0006CA  0E80               	movlw	128
  1665  0006CC  EC02  F005         	call	_SetLCDDDRamAddr
  1666  0006D0  0012               	return	
  1667                           
  1668                           ;lcddisplay.c: 128: return;
  1669  0006D2  0012               	return		;funcret
  1670  0006D4                     __end_of_OpenLCD:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           intcon2	equ	0xFF1
  1677                           indf0	equ	0xFEF
  1678                           fsr0h	equ	0xFEA
  1679                           fsr0l	equ	0xFE9
  1680                           indf2	equ	0xFDF
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _WriteCmdLCD *****************
  1686 ;; Defined at:
  1687 ;;		line 131 in file "lcddisplay.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  cmd             1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  cmd             1   32[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;		None               void
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         0       0       0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		_DelayFor18TCY
  1710 ;; This function is called by:
  1711 ;;		_LCDInitialDisplay
  1712 ;;		_InitLCD
  1713 ;;		_OpenLCD
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text13
  1718  000B34                     __ptext13:
  1719                           	opt stack 0
  1720  000B34                     _WriteCmdLCD:
  1721                           	opt stack 25
  1722                           
  1723                           ;incstack = 0
  1724                           ;WriteCmdLCD@cmd stored from wreg
  1725  000B34  6E21               	movwf	WriteCmdLCD@cmd,c
  1726                           
  1727                           ;lcddisplay.c: 196: TRISD &= 0xf0;
  1728  000B36  0EF0               	movlw	240
  1729  000B38  1695               	andwf	3989,f,c	;volatile
  1730                           
  1731                           ;lcddisplay.c: 197: PORTD &= 0xf0;
  1732  000B3A  0EF0               	movlw	240
  1733  000B3C  1683               	andwf	3971,f,c	;volatile
  1734                           
  1735                           ;lcddisplay.c: 198: PORTD |= (cmd>>4)&0x0f;
  1736  000B3E  3821               	swapf	WriteCmdLCD@cmd,w,c
  1737  000B40  0B0F               	andlw	15
  1738  000B42  0B0F               	andlw	15
  1739  000B44  1283               	iorwf	3971,f,c	;volatile
  1740                           
  1741                           ;lcddisplay.c: 200: LATEbits.LATE1 = 0;
  1742  000B46  928D               	bcf	3981,1,c	;volatile
  1743                           
  1744                           ;lcddisplay.c: 201: LATEbits.LATE0 = 0;
  1745  000B48  908D               	bcf	3981,0,c	;volatile
  1746                           
  1747                           ;lcddisplay.c: 202: DelayFor18TCY();
  1748  000B4A  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1749                           
  1750                           ;lcddisplay.c: 203: LATEbits.LATE2 = 1;
  1751  000B4E  848D               	bsf	3981,2,c	;volatile
  1752                           
  1753                           ;lcddisplay.c: 204: DelayFor18TCY();
  1754  000B50  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1755                           
  1756                           ;lcddisplay.c: 205: LATEbits.LATE2 = 0;
  1757  000B54  948D               	bcf	3981,2,c	;volatile
  1758                           
  1759                           ;lcddisplay.c: 210: PORTD &= 0xf0;
  1760  000B56  0EF0               	movlw	240
  1761  000B58  1683               	andwf	3971,f,c	;volatile
  1762                           
  1763                           ;lcddisplay.c: 211: PORTD |= cmd&0x0f;
  1764  000B5A  5021               	movf	WriteCmdLCD@cmd,w,c
  1765  000B5C  0B0F               	andlw	15
  1766  000B5E  1283               	iorwf	3971,f,c	;volatile
  1767                           
  1768                           ;lcddisplay.c: 213: DelayFor18TCY();
  1769  000B60  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1770                           
  1771                           ;lcddisplay.c: 214: LATEbits.LATE2 = 1;
  1772  000B64  848D               	bsf	3981,2,c	;volatile
  1773                           
  1774                           ;lcddisplay.c: 215: DelayFor18TCY();
  1775  000B66  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1776                           
  1777                           ;lcddisplay.c: 216: LATEbits.LATE2 = 0;
  1778  000B6A  948D               	bcf	3981,2,c	;volatile
  1779                           
  1780                           ;lcddisplay.c: 220: TRISD |= 0x0f;
  1781  000B6C  0E0F               	movlw	15
  1782  000B6E  1295               	iorwf	3989,f,c	;volatile
  1783  000B70  0012               	return	
  1784                           
  1785                           ;lcddisplay.c: 224: return;
  1786  000B72  0012               	return		;funcret
  1787  000B74                     __end_of_WriteCmdLCD:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           intcon2	equ	0xFF1
  1794                           indf0	equ	0xFEF
  1795                           fsr0h	equ	0xFEA
  1796                           fsr0l	equ	0xFE9
  1797                           indf2	equ	0xFDF
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _SetLCDDDRamAddr *****************
  1803 ;; Defined at:
  1804 ;;		line 276 in file "lcddisplay.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  DDaddr          1    wreg     unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  DDaddr          1   35[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1818 ;;      Params:         0       0       0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0
  1820 ;;      Temps:          3       0       0       0       0       0       0
  1821 ;;      Totals:         4       0       0       0       0       0       0
  1822 ;;Total ram usage:        4 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    4
  1825 ;; This function calls:
  1826 ;;		_DelayFor18TCY
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;;		_LCDInitialDisplay
  1830 ;;		_OpenLCD
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text14
  1835  000A04                     __ptext14:
  1836                           	opt stack 0
  1837  000A04                     _SetLCDDDRamAddr:
  1838                           	opt stack 26
  1839                           
  1840                           ;incstack = 0
  1841                           ;SetLCDDDRamAddr@DDaddr stored from wreg
  1842  000A04  6E24               	movwf	SetLCDDDRamAddr@DDaddr,c
  1843                           
  1844                           ;lcddisplay.c: 295: TRISD &= 0xf0;
  1845  000A06  0EF0               	movlw	240
  1846  000A08  1695               	andwf	3989,f,c	;volatile
  1847                           
  1848                           ;lcddisplay.c: 296: PORTD &= 0xf0;
  1849  000A0A  0EF0               	movlw	240
  1850  000A0C  1683               	andwf	3971,f,c	;volatile
  1851                           
  1852                           ;lcddisplay.c: 297: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1853  000A0E  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1854  000A10  6E21               	movwf	??_SetLCDDDRamAddr& (0+255),c
  1855  000A12  6A22               	clrf	(??_SetLCDDDRamAddr+1)& (0+255),c
  1856  000A14  8E21               	bsf	??_SetLCDDDRamAddr,7,c
  1857  000A16  0E04               	movlw	4
  1858  000A18  6E23               	movwf	(??_SetLCDDDRamAddr+2)& (0+255),c
  1859  000A1A                     u85:
  1860  000A1A  3422               	rlcf	??_SetLCDDDRamAddr+1,w,c
  1861  000A1C  3222               	rrcf	??_SetLCDDDRamAddr+1,f,c
  1862  000A1E  3221               	rrcf	??_SetLCDDDRamAddr,f,c
  1863  000A20  2E23               	decfsz	(??_SetLCDDDRamAddr+2)& (0+255),f,c
  1864  000A22  D7FB               	goto	u85
  1865  000A24  5021               	movf	??_SetLCDDDRamAddr,w,c
  1866  000A26  0B0F               	andlw	15
  1867  000A28  1283               	iorwf	3971,f,c	;volatile
  1868                           
  1869                           ;lcddisplay.c: 299: LATEbits.LATE1 = 0;
  1870  000A2A  928D               	bcf	3981,1,c	;volatile
  1871                           
  1872                           ;lcddisplay.c: 300: LATEbits.LATE0 = 0;
  1873  000A2C  908D               	bcf	3981,0,c	;volatile
  1874                           
  1875                           ;lcddisplay.c: 301: DelayFor18TCY();
  1876  000A2E  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1877                           
  1878                           ;lcddisplay.c: 302: LATEbits.LATE2 = 1;
  1879  000A32  848D               	bsf	3981,2,c	;volatile
  1880                           
  1881                           ;lcddisplay.c: 303: DelayFor18TCY();
  1882  000A34  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1883                           
  1884                           ;lcddisplay.c: 304: LATEbits.LATE2 = 0;
  1885  000A38  948D               	bcf	3981,2,c	;volatile
  1886                           
  1887                           ;lcddisplay.c: 309: PORTD &= 0xf0;
  1888  000A3A  0EF0               	movlw	240
  1889  000A3C  1683               	andwf	3971,f,c	;volatile
  1890                           
  1891                           ;lcddisplay.c: 310: PORTD |= (DDaddr&0x0f);
  1892  000A3E  5024               	movf	SetLCDDDRamAddr@DDaddr,w,c
  1893  000A40  0B0F               	andlw	15
  1894  000A42  1283               	iorwf	3971,f,c	;volatile
  1895                           
  1896                           ;lcddisplay.c: 312: DelayFor18TCY();
  1897  000A44  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1898                           
  1899                           ;lcddisplay.c: 313: LATEbits.LATE2 = 1;
  1900  000A48  848D               	bsf	3981,2,c	;volatile
  1901                           
  1902                           ;lcddisplay.c: 314: DelayFor18TCY();
  1903  000A4A  EC66  F006         	call	_DelayFor18TCY	;wreg free
  1904                           
  1905                           ;lcddisplay.c: 315: LATEbits.LATE2 = 0;
  1906  000A4E  948D               	bcf	3981,2,c	;volatile
  1907                           
  1908                           ;lcddisplay.c: 319: TRISD |= 0x0f;
  1909  000A50  0E0F               	movlw	15
  1910  000A52  1295               	iorwf	3989,f,c	;volatile
  1911  000A54  0012               	return	
  1912                           
  1913                           ;lcddisplay.c: 323: return;
  1914  000A56  0012               	return		;funcret
  1915  000A58                     __end_of_SetLCDDDRamAddr:
  1916                           	opt stack 0
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           intcon2	equ	0xFF1
  1922                           indf0	equ	0xFEF
  1923                           fsr0h	equ	0xFEA
  1924                           fsr0l	equ	0xFE9
  1925                           indf2	equ	0xFDF
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _Delay10KTCYx *****************
  1931 ;; Defined at:
  1932 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  unit            1    wreg     unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  unit            1   32[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;		None               void
  1939 ;; Registers used:
  1940 ;;		wreg
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         0       0       0       0       0       0       0
  1947 ;;      Locals:         1       0       0       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0
  1949 ;;      Totals:         2       0       0       0       0       0       0
  1950 ;;Total ram usage:        2 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    2
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_OpenLCD
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text15
  1961  000C36                     __ptext15:
  1962                           	opt stack 0
  1963  000C36                     _Delay10KTCYx:
  1964                           	opt stack 26
  1965                           
  1966                           ;incstack = 0
  1967                           ;Delay10KTCYx@unit stored from wreg
  1968  000C36  6E21               	movwf	Delay10KTCYx@unit,c
  1969  000C38  0E0D               	movlw	13
  1970  000C3A  6E20               	movwf	??_Delay10KTCYx& (0+255),c
  1971  000C3C  0EFC               	movlw	252
  1972  000C3E                     u487:
  1973  000C3E  2EE8               	decfsz	wreg,f,c
  1974  000C40  D7FE               	goto	u487
  1975  000C42  2E20               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1976  000C44  D7FC               	goto	u487
  1977  000C46  2E21               	decfsz	Delay10KTCYx@unit,f,c
  1978  000C48  D7F7               	goto	l1036
  1979  000C4A  0012               	return	
  1980  000C4C  0012               	return		;funcret
  1981  000C4E                     __end_of_Delay10KTCYx:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           intcon2	equ	0xFF1
  1988                           indf0	equ	0xFEF
  1989                           fsr0h	equ	0xFEA
  1990                           fsr0l	equ	0xFE9
  1991                           wreg	equ	0xFE8
  1992                           indf2	equ	0xFDF
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8
  1996                           
  1997 ;; *************** function _Delay100TCYx *****************
  1998 ;; Defined at:
  1999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  unit            1    wreg     unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  unit            1   31[COMRAM] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;		None               void
  2006 ;; Registers used:
  2007 ;;		wreg
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         0       0       0       0       0       0       0
  2014 ;;      Locals:         1       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         1       0       0       0       0       0       0
  2017 ;;Total ram usage:        1 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    2
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_OpenLCD
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text16
  2028  000C62                     __ptext16:
  2029                           	opt stack 0
  2030  000C62                     _Delay100TCYx:
  2031                           	opt stack 26
  2032                           
  2033                           ;incstack = 0
  2034                           ;Delay100TCYx@unit stored from wreg
  2035  000C62  6E20               	movwf	Delay100TCYx@unit,c
  2036  000C64  0E21               	movlw	33
  2037  000C66                     u497:
  2038  000C66  2EE8               	decfsz	wreg,f,c
  2039  000C68  D7FE               	goto	u497
  2040  000C6A  F000               	nop	
  2041  000C6C  2E20               	decfsz	Delay100TCYx@unit,f,c
  2042  000C6E  D7FA               	goto	l1032
  2043  000C70  0012               	return	
  2044  000C72  0012               	return		;funcret
  2045  000C74                     __end_of_Delay100TCYx:
  2046                           	opt stack 0
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           intcon2	equ	0xFF1
  2052                           indf0	equ	0xFEF
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           indf2	equ	0xFDF
  2057                           fsr2h	equ	0xFDA
  2058                           fsr2l	equ	0xFD9
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _BusyXLCD *****************
  2062 ;; Defined at:
  2063 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\XLCD\busyxlcd.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      unsigned char 
  2070 ;; Registers used:
  2071 ;;		wreg, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    4
  2084 ;; This function calls:
  2085 ;;		_DelayFor18TCY
  2086 ;; This function is called by:
  2087 ;;		_OpenLCD
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text17
  2092  000B74                     __ptext17:
  2093                           	opt stack 0
  2094  000B74                     _BusyXLCD:
  2095                           	opt stack 24
  2096                           
  2097                           ;incstack = 0
  2098  000B74  8C8A               	bsf	3978,6,c	;volatile
  2099  000B76  9A8A               	bcf	3978,5,c	;volatile
  2100  000B78  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2101  000B7C  888A               	bsf	3978,4,c	;volatile
  2102  000B7E  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2103  000B82  A681               	btfss	3969,3,c	;volatile
  2104  000B84  D00A               	goto	l230
  2105  000B86  988A               	bcf	3978,4,c	;volatile
  2106  000B88  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2107  000B8C  888A               	bsf	3978,4,c	;volatile
  2108  000B8E  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2109  000B92  988A               	bcf	3978,4,c	;volatile
  2110  000B94  9C8A               	bcf	3978,6,c	;volatile
  2111  000B96  0E01               	movlw	1
  2112  000B98  0012               	return	
  2113  000B9A                     l230:
  2114  000B9A  988A               	bcf	3978,4,c	;volatile
  2115  000B9C  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2116  000BA0  888A               	bsf	3978,4,c	;volatile
  2117  000BA2  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2118  000BA6  988A               	bcf	3978,4,c	;volatile
  2119  000BA8  9C8A               	bcf	3978,6,c	;volatile
  2120  000BAA  0E00               	movlw	0
  2121  000BAC  0012               	return	
  2122  000BAE  0012               	return		;funcret
  2123  000BB0                     __end_of_BusyXLCD:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           intcon2	equ	0xFF1
  2130                           indf0	equ	0xFEF
  2131                           fsr0h	equ	0xFEA
  2132                           fsr0l	equ	0xFE9
  2133                           wreg	equ	0xFE8
  2134                           indf2	equ	0xFDF
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function _BusyLCD *****************
  2140 ;; Defined at:
  2141 ;;		line 227 in file "lcddisplay.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      unsigned char 
  2148 ;; Registers used:
  2149 ;;		wreg, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2155 ;;      Params:         0       0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    4
  2162 ;; This function calls:
  2163 ;;		_DelayFor18TCY
  2164 ;; This function is called by:
  2165 ;;		_InitLCD
  2166 ;;		_OpenLCD
  2167 ;;		_putLCD
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text18
  2172  000BB0                     __ptext18:
  2173                           	opt stack 0
  2174  000BB0                     _BusyLCD:
  2175                           	opt stack 24
  2176                           
  2177                           ;lcddisplay.c: 229: LATEbits.LATE1 = 1;
  2178                           
  2179                           ;incstack = 0
  2180  000BB0  828D               	bsf	3981,1,c	;volatile
  2181                           
  2182                           ;lcddisplay.c: 230: LATEbits.LATE0 = 0;
  2183  000BB2  908D               	bcf	3981,0,c	;volatile
  2184                           
  2185                           ;lcddisplay.c: 231: DelayFor18TCY();
  2186  000BB4  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2187                           
  2188                           ;lcddisplay.c: 232: LATEbits.LATE2 = 1;
  2189  000BB8  848D               	bsf	3981,2,c	;volatile
  2190                           
  2191                           ;lcddisplay.c: 233: DelayFor18TCY();
  2192  000BBA  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2193                           
  2194                           ;lcddisplay.c: 251: if(PORTD&0x08)
  2195  000BBE  A683               	btfss	3971,3,c	;volatile
  2196  000BC0  D00A               	goto	l198
  2197                           
  2198                           ;lcddisplay.c: 253: {
  2199                           ;lcddisplay.c: 254: LATEbits.LATE2 = 0;
  2200  000BC2  948D               	bcf	3981,2,c	;volatile
  2201                           
  2202                           ;lcddisplay.c: 255: DelayFor18TCY();
  2203  000BC4  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2204                           
  2205                           ;lcddisplay.c: 256: LATEbits.LATE2 = 1;
  2206  000BC8  848D               	bsf	3981,2,c	;volatile
  2207                           
  2208                           ;lcddisplay.c: 257: DelayFor18TCY();
  2209  000BCA  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2210                           
  2211                           ;lcddisplay.c: 258: LATEbits.LATE2 = 0;
  2212  000BCE  948D               	bcf	3981,2,c	;volatile
  2213                           
  2214                           ;lcddisplay.c: 259: LATEbits.LATE1 = 0;
  2215  000BD0  928D               	bcf	3981,1,c	;volatile
  2216                           
  2217                           ;lcddisplay.c: 260: return 1;
  2218  000BD2  0E01               	movlw	1
  2219                           
  2220                           ;lcddisplay.c: 261: }
  2221  000BD4  0012               	return	
  2222  000BD6                     l198:
  2223                           
  2224                           ;lcddisplay.c: 262: else
  2225                           ;lcddisplay.c: 263: {
  2226                           ;lcddisplay.c: 264: LATEbits.LATE2 = 0;
  2227  000BD6  948D               	bcf	3981,2,c	;volatile
  2228                           
  2229                           ;lcddisplay.c: 265: DelayFor18TCY();
  2230  000BD8  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2231                           
  2232                           ;lcddisplay.c: 266: LATEbits.LATE2 = 1;
  2233  000BDC  848D               	bsf	3981,2,c	;volatile
  2234                           
  2235                           ;lcddisplay.c: 267: DelayFor18TCY();
  2236  000BDE  EC66  F006         	call	_DelayFor18TCY	;wreg free
  2237                           
  2238                           ;lcddisplay.c: 268: LATEbits.LATE2 = 0;
  2239  000BE2  948D               	bcf	3981,2,c	;volatile
  2240                           
  2241                           ;lcddisplay.c: 269: LATEbits.LATE1 = 0;
  2242  000BE4  928D               	bcf	3981,1,c	;volatile
  2243                           
  2244                           ;lcddisplay.c: 270: return 0;
  2245  000BE6  0E00               	movlw	0
  2246  000BE8  0012               	return	
  2247  000BEA  0012               	return		;funcret
  2248  000BEC                     __end_of_BusyLCD:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           intcon2	equ	0xFF1
  2255                           indf0	equ	0xFEF
  2256                           fsr0h	equ	0xFEA
  2257                           fsr0l	equ	0xFE9
  2258                           wreg	equ	0xFE8
  2259                           indf2	equ	0xFDF
  2260                           fsr2h	equ	0xFDA
  2261                           fsr2l	equ	0xFD9
  2262                           status	equ	0xFD8
  2263                           
  2264 ;; *************** function _DelayFor18TCY *****************
  2265 ;; Defined at:
  2266 ;;		line 59 in file "lcddisplay.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;		None               void
  2273 ;; Registers used:
  2274 ;;		wreg, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         0       0       0       0       0       0       0
  2281 ;;      Locals:         0       0       0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0
  2283 ;;      Totals:         0       0       0       0       0       0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		_Delay1TCYx
  2289 ;; This function is called by:
  2290 ;;		_WriteCmdLCD
  2291 ;;		_BusyLCD
  2292 ;;		_SetLCDDDRamAddr
  2293 ;;		_SetLCDCGRamAddr
  2294 ;;		_WriteDataLCD
  2295 ;;		_BusyXLCD
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text19
  2300  000CCC                     __ptext19:
  2301                           	opt stack 0
  2302  000CCC                     _DelayFor18TCY:
  2303                           	opt stack 24
  2304                           
  2305                           ;lcddisplay.c: 61: Delay1TCYx(18);
  2306                           
  2307                           ;incstack = 0
  2308  000CCC  0E12               	movlw	18
  2309  000CCE  EC60  F006         	call	_Delay1TCYx
  2310  000CD2  0012               	return		;funcret
  2311  000CD4                     __end_of_DelayFor18TCY:
  2312                           	opt stack 0
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           intcon2	equ	0xFF1
  2318                           indf0	equ	0xFEF
  2319                           fsr0h	equ	0xFEA
  2320                           fsr0l	equ	0xFE9
  2321                           wreg	equ	0xFE8
  2322                           indf2	equ	0xFDF
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _Delay1TCYx *****************
  2328 ;; Defined at:
  2329 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  unit            1    wreg     unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  unit            1   31[COMRAM] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		wreg
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2343 ;;      Params:         0       0       0       0       0       0       0
  2344 ;;      Locals:         1       0       0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0
  2346 ;;      Totals:         1       0       0       0       0       0       0
  2347 ;;Total ram usage:        1 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    2
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_DelayFor18TCY
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text20
  2358  000CC0                     __ptext20:
  2359                           	opt stack 0
  2360  000CC0                     _Delay1TCYx:
  2361                           	opt stack 24
  2362                           
  2363                           ;incstack = 0
  2364                           ;Delay1TCYx@unit stored from wreg
  2365  000CC0  6E20               	movwf	Delay1TCYx@unit,c
  2366  000CC2                     l479:
  2367  000CC2  F000               	nop	
  2368  000CC4  2E20               	decfsz	Delay1TCYx@unit,f,c
  2369  000CC6  D7FD               	goto	l479
  2370  000CC8  0012               	return	
  2371  000CCA  0012               	return		;funcret
  2372  000CCC                     __end_of_Delay1TCYx:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           intcon2	equ	0xFF1
  2379                           indf0	equ	0xFEF
  2380                           fsr0h	equ	0xFEA
  2381                           fsr0l	equ	0xFE9
  2382                           wreg	equ	0xFE8
  2383                           indf2	equ	0xFDF
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _InitInterrupts *****************
  2389 ;; Defined at:
  2390 ;;		line 93 in file "ports.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		None
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2404 ;;      Params:         0       0       0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0
  2407 ;;      Totals:         0       0       0       0       0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    2
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text21
  2419  000CA4                     __ptext21:
  2420                           	opt stack 0
  2421  000CA4                     _InitInterrupts:
  2422                           	opt stack 28
  2423                           
  2424                           ;ports.c: 96: INTCON2bits.INTEDG0 = 0;
  2425                           
  2426                           ;incstack = 0
  2427  000CA4  9CF1               	bcf	intcon2,6,c	;volatile
  2428                           
  2429                           ;ports.c: 97: INTCONbits.INT0IF = 0;
  2430  000CA6  92F2               	bcf	intcon,1,c	;volatile
  2431                           
  2432                           ;ports.c: 98: INTCONbits.INT0IE = 1;
  2433  000CA8  88F2               	bsf	intcon,4,c	;volatile
  2434                           
  2435                           ;ports.c: 101: RCONbits.IPEN = 1;
  2436  000CAA  8ED0               	bsf	4048,7,c	;volatile
  2437                           
  2438                           ;ports.c: 102: INTCONbits.GIEL = 1;
  2439  000CAC  8CF2               	bsf	intcon,6,c	;volatile
  2440                           
  2441                           ;ports.c: 103: INTCONbits.GIEH = 1;
  2442  000CAE  8EF2               	bsf	intcon,7,c	;volatile
  2443  000CB0  0012               	return		;funcret
  2444  000CB2                     __end_of_InitInterrupts:
  2445                           	opt stack 0
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           intcon	equ	0xFF2
  2451                           intcon2	equ	0xFF1
  2452                           indf0	equ	0xFEF
  2453                           fsr0h	equ	0xFEA
  2454                           fsr0l	equ	0xFE9
  2455                           wreg	equ	0xFE8
  2456                           indf2	equ	0xFDF
  2457                           fsr2h	equ	0xFDA
  2458                           fsr2l	equ	0xFD9
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _InitAnalogueInputs *****************
  2462 ;; Defined at:
  2463 ;;		line 120 in file "ports.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, status,2
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text22
  2492  000C4E                     __ptext22:
  2493                           	opt stack 0
  2494  000C4E                     _InitAnalogueInputs:
  2495                           	opt stack 28
  2496                           
  2497                           ;ports.c: 123: TRISAbits.TRISA0 = 1;
  2498                           
  2499                           ;incstack = 0
  2500  000C4E  8092               	bsf	3986,0,c	;volatile
  2501                           
  2502                           ;ports.c: 132: ANSEL = 0b00000001;
  2503  000C50  0E01               	movlw	1
  2504  000C52  6E7E               	movwf	3966,c	;volatile
  2505                           
  2506                           ;ports.c: 135: ADCON1 = 0b00000000;
  2507  000C54  0E00               	movlw	0
  2508  000C56  6EC1               	movwf	4033,c	;volatile
  2509                           
  2510                           ;ports.c: 136: ADCON2 = 0b00111000;
  2511  000C58  0E38               	movlw	56
  2512  000C5A  6EC0               	movwf	4032,c	;volatile
  2513                           
  2514                           ;ports.c: 154: ADCON0 = 0b00000001;
  2515  000C5C  0E01               	movlw	1
  2516  000C5E  6EC2               	movwf	4034,c	;volatile
  2517  000C60  0012               	return		;funcret
  2518  000C62                     __end_of_InitAnalogueInputs:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           intcon	equ	0xFF2
  2525                           intcon2	equ	0xFF1
  2526                           indf0	equ	0xFEF
  2527                           fsr0h	equ	0xFEA
  2528                           fsr0l	equ	0xFE9
  2529                           wreg	equ	0xFE8
  2530                           indf2	equ	0xFDF
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _Delay1KTCYx *****************
  2536 ;; Defined at:
  2537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  unit            1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  unit            1   31[COMRAM] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;		None               void
  2544 ;; Registers used:
  2545 ;;		wreg
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2551 ;;      Params:         0       0       0       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0
  2554 ;;      Totals:         1       0       0       0       0       0       0
  2555 ;;Total ram usage:        1 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    2
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text23
  2566  000C74                     __ptext23:
  2567                           	opt stack 0
  2568  000C74                     _Delay1KTCYx:
  2569                           	opt stack 28
  2570                           
  2571                           ;incstack = 0
  2572                           ;Delay1KTCYx@unit stored from wreg
  2573  000C74  6E20               	movwf	Delay1KTCYx@unit,c
  2574  000C76  0EFA               	movlw	250
  2575  000C78                     u507:
  2576  000C78  F000               	nop	
  2577  000C7A  2EE8               	decfsz	wreg,f,c
  2578  000C7C  D7FD               	goto	u507
  2579  000C7E  2E20               	decfsz	Delay1KTCYx@unit,f,c
  2580  000C80  D7FA               	goto	l1244
  2581  000C82  0012               	return	
  2582  000C84  0012               	return		;funcret
  2583  000C86                     __end_of_Delay1KTCYx:
  2584                           	opt stack 0
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           intcon	equ	0xFF2
  2590                           intcon2	equ	0xFF1
  2591                           indf0	equ	0xFEF
  2592                           fsr0h	equ	0xFEA
  2593                           fsr0l	equ	0xFE9
  2594                           wreg	equ	0xFE8
  2595                           indf2	equ	0xFDF
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _ADC_Convert *****************
  2601 ;; Defined at:
  2602 ;;		line 158 in file "ports.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      unsigned char 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2616 ;;      Params:         0       0       0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    2
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text24
  2631  000CB2                     __ptext24:
  2632                           	opt stack 0
  2633  000CB2                     _ADC_Convert:
  2634                           	opt stack 28
  2635                           
  2636                           ;ports.c: 160: ADCON0bits.GO_DONE = 1;
  2637                           
  2638                           ;incstack = 0
  2639  000CB2  82C2               	bsf	4034,1,c	;volatile
  2640                           
  2641                           ;ports.c: 161: while (ADCON0bits.GO_DONE == 1);
  2642  000CB4  D000               	goto	l110
  2643  000CB6                     l110:
  2644  000CB6  B2C2               	btfsc	4034,1,c	;volatile
  2645  000CB8  D7FE               	goto	l110
  2646                           
  2647                           ;ports.c: 162: return ADRESH;
  2648  000CBA  50C4               	movf	4036,w,c	;volatile
  2649  000CBC  0012               	return	
  2650  000CBE  0012               	return		;funcret
  2651  000CC0                     __end_of_ADC_Convert:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           intcon	equ	0xFF2
  2658                           intcon2	equ	0xFF1
  2659                           indf0	equ	0xFEF
  2660                           fsr0h	equ	0xFEA
  2661                           fsr0l	equ	0xFE9
  2662                           wreg	equ	0xFE8
  2663                           indf2	equ	0xFDF
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function _XC8_LowISR_Handler *****************
  2669 ;; Defined at:
  2670 ;;		line 125 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		None
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         0       0       0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0
  2686 ;;      Temps:         17       0       0       0       0       0       0
  2687 ;;      Totals:        17       0       0       0       0       0       0
  2688 ;;Total ram usage:       17 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		Interrupt level 1
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	intcodelo
  2699  000018                     __pintcodelo:
  2700                           	opt stack 0
  2701  000018                     _XC8_LowISR_Handler:
  2702                           	opt stack 23
  2703                           
  2704                           ;incstack = 0
  2705  000018  CFD8 F001          	movff	status,??_XC8_LowISR_Handler
  2706  00001C  CFE8 F002          	movff	wreg,??_XC8_LowISR_Handler+1
  2707  000020  CFE0 F003          	movff	bsr,??_XC8_LowISR_Handler+2
  2708  000024  CFFA F004          	movff	pclath,??_XC8_LowISR_Handler+3
  2709  000028  CFFB F005          	movff	pclatu,??_XC8_LowISR_Handler+4
  2710  00002C  CFE9 F006          	movff	fsr0l,??_XC8_LowISR_Handler+5
  2711  000030  CFEA F007          	movff	fsr0h,??_XC8_LowISR_Handler+6
  2712  000034  CFE1 F008          	movff	fsr1l,??_XC8_LowISR_Handler+7
  2713  000038  CFE2 F009          	movff	fsr1h,??_XC8_LowISR_Handler+8
  2714  00003C  CFD9 F00A          	movff	fsr2l,??_XC8_LowISR_Handler+9
  2715  000040  CFDA F00B          	movff	fsr2h,??_XC8_LowISR_Handler+10
  2716  000044  CFF3 F00C          	movff	prodl,??_XC8_LowISR_Handler+11
  2717  000048  CFF4 F00D          	movff	prodh,??_XC8_LowISR_Handler+12
  2718  00004C  CFF6 F00E          	movff	tblptrl,??_XC8_LowISR_Handler+13
  2719  000050  CFF7 F00F          	movff	tblptrh,??_XC8_LowISR_Handler+14
  2720  000054  CFF8 F010          	movff	tblptru,??_XC8_LowISR_Handler+15
  2721  000058  CFF5 F011          	movff	tablat,??_XC8_LowISR_Handler+16
  2722                           
  2723                           ;main.c: 129: if (INTCON3bits.INT1IF) {
  2724  00005C  A0F0               	btfss	intcon3,0,c	;volatile
  2725  00005E  D002               	goto	i1l51
  2726                           
  2727                           ;main.c: 130: INTCON3bits.INT1IF = 0;
  2728  000060  90F0               	bcf	intcon3,0,c	;volatile
  2729                           
  2730                           ;main.c: 131: LATDbits.LATD1 = ~LATDbits.LATD1;
  2731  000062  728C               	btg	3980,1,c	;volatile
  2732  000064                     i1l51:
  2733                           
  2734                           ;main.c: 132: }
  2735                           ;main.c: 134: if (INTCONbits.RBIF) {
  2736  000064  A0F2               	btfss	intcon,0,c	;volatile
  2737  000066  D009               	goto	i1l55
  2738                           
  2739                           ;main.c: 135: PortBValue = PORTB;
  2740  000068  CF81 F037          	movff	3969,_PortBValue	;volatile
  2741                           
  2742                           ;main.c: 136: INTCONbits.RBIF = 0;
  2743  00006C  90F2               	bcf	intcon,0,c	;volatile
  2744                           
  2745                           ;main.c: 137: if (PortBValue & 0b00010000) {
  2746  00006E  B837               	btfsc	_PortBValue,4,c
  2747                           
  2748                           ;main.c: 138: LATDbits.LATD4 = ~LATDbits.LATD4;
  2749  000070  788C               	btg	3980,4,c	;volatile
  2750                           
  2751                           ;main.c: 139: }
  2752                           ;main.c: 140: if (PortBValue & 0b00100000) {
  2753  000072  AA37               	btfss	_PortBValue,5,c
  2754  000074  D002               	goto	i1l55
  2755                           
  2756                           ;main.c: 141: LATDbits.LATD5 = ~LATDbits.LATD5;
  2757  000076  7A8C               	btg	3980,5,c	;volatile
  2758  000078  D000               	goto	i1l55
  2759  00007A                     i1l55:
  2760  00007A  C011  FFF5         	movff	??_XC8_LowISR_Handler+16,tablat
  2761  00007E  C010  FFF8         	movff	??_XC8_LowISR_Handler+15,tblptru
  2762  000082  C00F  FFF7         	movff	??_XC8_LowISR_Handler+14,tblptrh
  2763  000086  C00E  FFF6         	movff	??_XC8_LowISR_Handler+13,tblptrl
  2764  00008A  C00D  FFF4         	movff	??_XC8_LowISR_Handler+12,prodh
  2765  00008E  C00C  FFF3         	movff	??_XC8_LowISR_Handler+11,prodl
  2766  000092  C00B  FFDA         	movff	??_XC8_LowISR_Handler+10,fsr2h
  2767  000096  C00A  FFD9         	movff	??_XC8_LowISR_Handler+9,fsr2l
  2768  00009A  C009  FFE2         	movff	??_XC8_LowISR_Handler+8,fsr1h
  2769  00009E  C008  FFE1         	movff	??_XC8_LowISR_Handler+7,fsr1l
  2770  0000A2  C007  FFEA         	movff	??_XC8_LowISR_Handler+6,fsr0h
  2771  0000A6  C006  FFE9         	movff	??_XC8_LowISR_Handler+5,fsr0l
  2772  0000AA  C005  FFFB         	movff	??_XC8_LowISR_Handler+4,pclatu
  2773  0000AE  C004  FFFA         	movff	??_XC8_LowISR_Handler+3,pclath
  2774  0000B2  C003  FFE0         	movff	??_XC8_LowISR_Handler+2,bsr
  2775  0000B6  C002  FFE8         	movff	??_XC8_LowISR_Handler+1,wreg
  2776  0000BA  C001  FFD8         	movff	??_XC8_LowISR_Handler,status
  2777  0000BE  0010               	retfie	
  2778  0000C0                     __end_of_XC8_LowISR_Handler:
  2779                           	opt stack 0
  2780                           pclatu	equ	0xFFB
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           intcon2	equ	0xFF1
  2790                           intcon3	equ	0xFF0
  2791                           indf0	equ	0xFEF
  2792                           fsr0h	equ	0xFEA
  2793                           fsr0l	equ	0xFE9
  2794                           wreg	equ	0xFE8
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           bsr	equ	0xFE0
  2798                           indf2	equ	0xFDF
  2799                           fsr2h	equ	0xFDA
  2800                           fsr2l	equ	0xFD9
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _XC8_HighISR_Handler *****************
  2804 ;; Defined at:
  2805 ;;		line 93 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;		None               void
  2812 ;; Registers used:
  2813 ;;		None
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2819 ;;      Params:         0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0
  2821 ;;      Temps:         14       0       0       0       0       0       0
  2822 ;;      Totals:        14       0       0       0       0       0       0
  2823 ;;Total ram usage:       14 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		Interrupt level 2
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	intcode
  2833  000008                     __pintcode:
  2834                           	opt stack 0
  2835  000008                     _XC8_HighISR_Handler:
  2836                           	opt stack 23
  2837                           
  2838                           ;incstack = 0
  2839  000008  CFFA F012          	movff	pclath,??_XC8_HighISR_Handler
  2840  00000C  CFFB F013          	movff	pclatu,??_XC8_HighISR_Handler+1
  2841  000010  CFE9 F014          	movff	fsr0l,??_XC8_HighISR_Handler+2
  2842  000014  EF14  F004         	goto	int_func
  2843                           pclatu	equ	0xFFB
  2844                           pclath	equ	0xFFA
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           intcon2	equ	0xFF1
  2853                           intcon3	equ	0xFF0
  2854                           indf0	equ	0xFEF
  2855                           fsr0h	equ	0xFEA
  2856                           fsr0l	equ	0xFE9
  2857                           wreg	equ	0xFE8
  2858                           fsr1h	equ	0xFE2
  2859                           fsr1l	equ	0xFE1
  2860                           bsr	equ	0xFE0
  2861                           indf2	equ	0xFDF
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866                           	psect	intcode_body
  2867  000828                     __pintcode_body:
  2868                           	opt stack 23
  2869  000828                     int_func:
  2870                           	opt stack 23
  2871  000828  CFEA F015          	movff	fsr0h,??_XC8_HighISR_Handler+3
  2872  00082C  CFE1 F016          	movff	fsr1l,??_XC8_HighISR_Handler+4
  2873  000830  CFE2 F017          	movff	fsr1h,??_XC8_HighISR_Handler+5
  2874  000834  CFD9 F018          	movff	fsr2l,??_XC8_HighISR_Handler+6
  2875  000838  CFDA F019          	movff	fsr2h,??_XC8_HighISR_Handler+7
  2876  00083C  CFF3 F01A          	movff	prodl,??_XC8_HighISR_Handler+8
  2877  000840  CFF4 F01B          	movff	prodh,??_XC8_HighISR_Handler+9
  2878  000844  CFF6 F01C          	movff	tblptrl,??_XC8_HighISR_Handler+10
  2879  000848  CFF7 F01D          	movff	tblptrh,??_XC8_HighISR_Handler+11
  2880  00084C  CFF8 F01E          	movff	tblptru,??_XC8_HighISR_Handler+12
  2881  000850  CFF5 F01F          	movff	tablat,??_XC8_HighISR_Handler+13
  2882                           
  2883                           ;main.c: 100: if (INTCONbits.INT0IF )
  2884  000854  A2F2               	btfss	intcon,1,c	;volatile
  2885  000856  D003               	goto	i2l48
  2886                           
  2887                           ;main.c: 101: {
  2888                           ;main.c: 103: INTCONbits.INT0IF = 0;
  2889  000858  92F2               	bcf	intcon,1,c	;volatile
  2890                           
  2891                           ;main.c: 105: LATDbits.LATD6 = ~LATDbits.LATD6;
  2892  00085A  7C8C               	btg	3980,6,c	;volatile
  2893  00085C  D000               	goto	i2l48
  2894  00085E                     i2l48:
  2895  00085E  C01F  FFF5         	movff	??_XC8_HighISR_Handler+13,tablat
  2896  000862  C01E  FFF8         	movff	??_XC8_HighISR_Handler+12,tblptru
  2897  000866  C01D  FFF7         	movff	??_XC8_HighISR_Handler+11,tblptrh
  2898  00086A  C01C  FFF6         	movff	??_XC8_HighISR_Handler+10,tblptrl
  2899  00086E  C01B  FFF4         	movff	??_XC8_HighISR_Handler+9,prodh
  2900  000872  C01A  FFF3         	movff	??_XC8_HighISR_Handler+8,prodl
  2901  000876  C019  FFDA         	movff	??_XC8_HighISR_Handler+7,fsr2h
  2902  00087A  C018  FFD9         	movff	??_XC8_HighISR_Handler+6,fsr2l
  2903  00087E  C017  FFE2         	movff	??_XC8_HighISR_Handler+5,fsr1h
  2904  000882  C016  FFE1         	movff	??_XC8_HighISR_Handler+4,fsr1l
  2905  000886  C015  FFEA         	movff	??_XC8_HighISR_Handler+3,fsr0h
  2906  00088A  C014  FFE9         	movff	??_XC8_HighISR_Handler+2,fsr0l
  2907  00088E  C013  FFFB         	movff	??_XC8_HighISR_Handler+1,pclatu
  2908  000892  C012  FFFA         	movff	??_XC8_HighISR_Handler,pclath
  2909  000896  0011               	retfie		f
  2910  000898                     __end_of_XC8_HighISR_Handler:
  2911                           	opt stack 0
  2912                           pclatu	equ	0xFFB
  2913                           pclath	equ	0xFFA
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           intcon	equ	0xFF2
  2921                           intcon2	equ	0xFF1
  2922                           intcon3	equ	0xFF0
  2923                           indf0	equ	0xFEF
  2924                           fsr0h	equ	0xFEA
  2925                           fsr0l	equ	0xFE9
  2926                           wreg	equ	0xFE8
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           bsr	equ	0xFE0
  2930                           indf2	equ	0xFDF
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           pclatu	equ	0xFFB
  2935                           pclath	equ	0xFFA
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           intcon2	equ	0xFF1
  2944                           intcon3	equ	0xFF0
  2945                           indf0	equ	0xFEF
  2946                           fsr0h	equ	0xFEA
  2947                           fsr0l	equ	0xFE9
  2948                           wreg	equ	0xFE8
  2949                           fsr1h	equ	0xFE2
  2950                           fsr1l	equ	0xFE1
  2951                           bsr	equ	0xFE0
  2952                           indf2	equ	0xFDF
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957                           	psect	rparam
  2958  0000                     pclatu	equ	0xFFB
  2959                           pclath	equ	0xFFA
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           intcon	equ	0xFF2
  2967                           intcon2	equ	0xFF1
  2968                           intcon3	equ	0xFF0
  2969                           indf0	equ	0xFEF
  2970                           fsr0h	equ	0xFEA
  2971                           fsr0l	equ	0xFE9
  2972                           wreg	equ	0xFE8
  2973                           fsr1h	equ	0xFE2
  2974                           fsr1l	equ	0xFE1
  2975                           bsr	equ	0xFE0
  2976                           indf2	equ	0xFDF
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    putLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> putIntLCD@result(COMRAM[4]), STR_2(CODE[10]), STR_1(CODE[9]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 4
		 -> putIntLCD@result(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_putIntLCD
    _LCDInitialDisplay->_putIntLCD
    _putIntLCD->_utoa
    _utoa->___lwdiv
    _putLCD->_WriteDataLCD
    _InitLCD->_OpenLCD
    _OpenLCD->_SetLCDDDRamAddr
    _DelayFor18TCY->_Delay1TCYx

Critical Paths under _XC8_HighISR_Handler in COMRAM

    None.

Critical Paths under _XC8_LowISR_Handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _XC8_HighISR_Handler in BANK0

    None.

Critical Paths under _XC8_LowISR_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _XC8_HighISR_Handler in BANK1

    None.

Critical Paths under _XC8_LowISR_Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _XC8_HighISR_Handler in BANK2

    None.

Critical Paths under _XC8_LowISR_Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _XC8_HighISR_Handler in BANK3

    None.

Critical Paths under _XC8_LowISR_Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _XC8_HighISR_Handler in BANK4

    None.

Critical Paths under _XC8_LowISR_Handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _XC8_HighISR_Handler in BANK5

    None.

Critical Paths under _XC8_LowISR_Handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4460
                        _ADC_Convert
                        _Delay1KTCYx
                 _InitAnalogueInputs
                     _InitInterrupts
                            _InitLCD
                       _InitMotorPWM
                          _InitPorts
                  _LCDInitialDisplay
                    _SetLCDDDRamAddr
                          _putIntLCD
 ---------------------------------------------------------------------------------
 (1) _LCDInitialDisplay                                    0     0      0    2326
                    _SetLCDCGRamAddr
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
                       _WriteDataLCD
                          _putIntLCD
                             _putLCD
 ---------------------------------------------------------------------------------
 (1) _putIntLCD                                            6     4      2    1849
                                             47 COMRAM     6     4      2
                             _putLCD
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1352
                                             38 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               2     0      2     297
                                             33 COMRAM     2     0      2
                            _BusyLCD
                       _WriteDataLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataLCD                                         1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetLCDCGRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitMotorPWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0     225
                            _BusyLCD
                            _OpenLCD
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _OpenLCD                                              1     1      0     165
                                             36 COMRAM     1     1      0
                            _BusyLCD
                           _BusyXLCD
                       _Delay100TCYx
                       _Delay10KTCYx
                    _SetLCDDDRamAddr
                        _WriteCmdLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdLCD                                          1     1      0      45
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetLCDDDRamAddr                                      4     4      0      45
                                             32 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyLCD                                              0     0      0      15
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0      15
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay1TCYx                                           1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAnalogueInputs                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay1KTCYx                                          1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _XC8_LowISR_Handler                                  17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _XC8_HighISR_Handler                                 14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
   _Delay1KTCYx
   _InitAnalogueInputs
   _InitInterrupts
   _InitLCD
     _BusyLCD
       _DelayFor18TCY
         _Delay1TCYx
     _OpenLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _BusyXLCD
         _DelayFor18TCY
           _Delay1TCYx
       _Delay100TCYx
       _Delay10KTCYx
       _SetLCDDDRamAddr
         _DelayFor18TCY
           _Delay1TCYx
       _WriteCmdLCD
         _DelayFor18TCY
           _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
   _InitMotorPWM
   _InitPorts
   _LCDInitialDisplay
     _SetLCDCGRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _SetLCDDDRamAddr
       _DelayFor18TCY
         _Delay1TCYx
     _WriteCmdLCD
       _DelayFor18TCY
         _Delay1TCYx
     _WriteDataLCD
       _DelayFor18TCY
         _Delay1TCYx
     _putIntLCD
       _putLCD
         _BusyLCD
           _DelayFor18TCY
             _Delay1TCYx
         _WriteDataLCD
           _DelayFor18TCY
             _Delay1TCYx
       _utoa
         ___lwdiv
         ___lwmod
     _putLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _WriteDataLCD
         _DelayFor18TCY
           _Delay1TCYx
   _SetLCDDDRamAddr
     _DelayFor18TCY
       _Delay1TCYx
   _putIntLCD
     _putLCD
       _BusyLCD
         _DelayFor18TCY
           _Delay1TCYx
       _WriteDataLCD
         _DelayFor18TCY
           _Delay1TCYx
     _utoa
       ___lwdiv
       ___lwmod

 _XC8_LowISR_Handler (ROOT)

 _XC8_HighISR_Handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      37       1       57.9%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      14        0.0%
DATA                 0      0      37      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Apr 21 10:37:37 2015

                          u85 0A1A          __size_of_WriteCmdLCD 0040                            bsr 000FE0  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l110 0CB6                           l230 0B9A  
                         l701 0802                           l198 0BD6                           l805 0AEA  
                         l479 0CC2                           l795 094A                  __CFG_CPB$OFF 000000  
                         u420 08C6                           u430 08F0                           _PR2 000FCB  
                         u175 0970                  __CFG_CPD$OFF 000000                           u507 0C78  
                         u427 08BC                           u437 08E6                           u487 0C3E  
                         u497 0C66                  __CFG_BORV$30 000000         __size_of_WriteDataLCD 0040  
                         wreg 000FE8                  __CFG_LVP$OFF 000000          __size_of_ADC_Convert 000E  
                  _Delay1TCYx 0CC0                          l1032 0C64                          l1036 0C38  
                        l1212 0A84                          l1204 0A60                          l1300 090E  
                        l1302 0918                          l1160 0658                          l1216 0A96  
                        l1208 0A72                          l1312 093E                          l1304 0920  
                        l1320 0AB6                          l1170 068A                          l1162 0666  
                        l1322 0AC0                          l1244 0C76                          l1340 08D0  
                        l1324 0AC8                          l1182 06C0                          l1174 069C  
                        l1166 0678                          l1334 089C                          l1328 0ADE  
                        l1344 0788                          l1408 09D4                          l1178 06AE  
                        l1354 07C4                          STR_1 060B                          STR_2 0601  
                        _LATC 000F8B                          _LATD 000F8C                          i1l51 0064  
                        i1l55 007A                          i2l48 085E                          _main 09AE  
       SetLCDDDRamAddr@DDaddr 0024                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        _utoa 077E                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00C0                 __CFG_IESO$OFF 000000  
                ___param_bank 000010               __end_of_BusyLCD 0BEC               __end_of_InitLCD 0AA8  
               ?_InitMotorPWM 0001               __end_of_OpenLCD 06D4                  _WriteDataLCD 0AF4  
                 _Delay1KTCYx 0C74                         ?_main 0001         __size_of_Delay100TCYx 0012  
                       _ANSEL 000F7E                         ?_utoa 0027                         _T2CON 000FCA  
             __end_of___lwdiv 0954               __end_of___lwmod 0AF4                         _PORTB 000F81  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95         __size_of_Delay10KTCYx 0018                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         tablat 000FF5                         utoa@c 002F  
                       utoa@v 002D                         status 000FD8                __CFG_PBADEN$ON 000000  
           ??_SetLCDDDRamAddr 0021             ??_SetLCDCGRamAddr 0021               __initialization 0C96  
                _Delay100TCYx 0C62                ??_InitMotorPWM 0020                  __end_of_main 0A04  
              _InitInterrupts 0CA4                  __end_of_utoa 0828              __end_of_BusyXLCD 0BB0  
              WriteCmdLCD@cmd 0021                  _Delay10KTCYx 0C36                        ??_main 0036  
                      ??_utoa 002D                 __activetblptr 000002                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                 ?_Delay1TCYx 0001                        _CCPR1L 000FBE                        _ANSELH 000F7F  
              __CFG_WDTEN$OFF 000000            __size_of_InitPorts 0020                     ??_BusyLCD 0021  
                   ??_InitLCD 0026                     ??_OpenLCD 0025        __end_of_InitInterrupts 0CB2  
              __CFG_XINST$OFF 000000                    _PortBValue 0037                __CFG_STVREN$ON 000000  
                   ??___lwdiv 0024                     ??___lwmod 0024    __end_of_InitAnalogueInputs 0C62  
  __end_of_XC8_LowISR_Handler 00C0                        _putLCD 0898                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0C9A                 ___rparam_used 000001  
             ?_InitInterrupts 0001                __pcstackCOMRAM 0001           __size_of_Delay1TCYx 000C  
           __end_of_InitPorts 0C36   __end_of_XC8_HighISR_Handler 0898               __CFG_LPT1OSC$ON 000000  
        __end_of_InitMotorPWM 0C96        __size_of_DelayFor18TCY 0008                     ?_BusyXLCD 0001  
       SetLCDCGRamAddr@CGaddr 0024                 ??_WriteCmdLCD 0021                       _CCP1CON 000FBD  
                ?_Delay1KTCYx 0001                       ?_putLCD 0022            __size_of_putIntLCD 002A  
               ??_ADC_Convert 0020               _SetLCDDDRamAddr 0A04               _SetLCDCGRamAddr 0954  
                  ??_BusyXLCD 0021                       _BusyLCD 0BB0                       _InitLCD 0A58  
                   _ADC_Value 0036                       _OpenLCD 0616                       __Hparam 0000  
                     __Lparam 0000                 _DelayFor18TCY 0CCC                       ___lwdiv 08F8  
                     ___lwmod 0AA8                  __psmallconst 0600                       __pcinit 0C96  
                     __ramtop 0600               __size_of_putLCD 0060                       __ptext0 09AE  
                     __ptext1 06D4                       __ptext2 0BEC                       __ptext3 077E  
                     __ptext4 0AA8                       __ptext5 08F8                       __ptext6 0898  
                     __ptext7 0AF4                       __ptext8 0954                       __ptext9 0C16  
         __end_of_WriteCmdLCD 0B74                  ??_Delay1TCYx 0020                __pintcode_body 0828  
        end_of_initialization 0C9A           __end_of_ADC_Convert 0CC0             _LCDInitialDisplay 06D4  
               __Lmediumconst 0000                       int_func 0828            ?_LCDInitialDisplay 0001  
           __end_of_putIntLCD 0C16                ?_DelayFor18TCY 0001           ??_LCDInitialDisplay 0036  
                     utoa@buf 0027                       utoa@val 0029            __end_of_Delay1TCYx 0CCC  
     __end_of_SetLCDDDRamAddr 0A58         __size_of_InitMotorPWM 0010       __end_of_SetLCDCGRamAddr 09AE  
                   _TRISAbits 000F92                     _TRISCbits 000F94                     _TRISEbits 000F96  
          _InitAnalogueInputs 0C4E            _XC8_LowISR_Handler 0018     __end_of_LCDInitialDisplay 077E  
            ??_InitInterrupts 0020           ?_InitAnalogueInputs 0001           ?_XC8_LowISR_Handler 0001  
            Delay100TCYx@unit 0020                   _WriteCmdLCD 0B34                  _InitMotorPWM 0C86  
        ??_InitAnalogueInputs 0020          ??_XC8_LowISR_Handler 0001          __size_of_Delay1KTCYx 0012  
              __end_of_putLCD 08F8           start_initialization 0C96                   _ADC_Convert 0CB2  
                   _InitPorts 0C16             __size_of_BusyXLCD 003C               ??_DelayFor18TCY 0021  
               ?_WriteDataLCD 0001                      ??_putLCD 0024                OpenLCD@lcdtype 0025  
            ?_SetLCDDDRamAddr 0001              ?_SetLCDCGRamAddr 0001                   __pbssCOMRAM 0036  
                  ?_InitPorts 0001              WriteDataLCD@data 0021    __size_of_LCDInitialDisplay 00AA  
             Delay1KTCYx@unit 0020  __size_of_XC8_HighISR_Handler 0890                      ?_BusyLCD 0001  
                    ?_InitLCD 0001                      ?_OpenLCD 0001              ___lwdiv@dividend 0020  
           __CFG_CCP2MX$PORTC 000000                 ?_Delay100TCYx 0001                     __pintcode 0008  
              ??_WriteDataLCD 0021                 ?_Delay10KTCYx 0001                      ?___lwdiv 0020  
                    ?___lwmod 0020                   __pintcodelo 0018                   __smallconst 0600  
            ___lwdiv@quotient 0024                      _LATBbits 000F8A                      _LATDbits 000F8C  
                    _LATEbits 000F8D                ??_Delay100TCYx 0020                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                ??_Delay10KTCYx 0020                     _putIntLCD 0BEC  
                  putIntLCD@n 0030                    _ADCON0bits 000FC2                  putLCD@buffer 0022  
                    _WPUBbits 000F7C              Delay10KTCYx@unit 0021                   ??_InitPorts 0020  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                      _BusyXLCD 0B74  
            __size_of_BusyLCD 003C              __size_of_InitLCD 0050                      __Hrparam 0000  
            __size_of_OpenLCD 00BE                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
                ?_WriteCmdLCD 0001                    ?_putIntLCD 0030              __size_of___lwdiv 005C  
            __size_of___lwmod 004C                  ?_ADC_Convert 0001               ___lwdiv@divisor 0022  
             ___lwdiv@counter 0026                      __ptext10 0C86                      __ptext11 0A58  
                    __ptext20 0CC0                      __ptext12 0616                      __ptext21 0CA4  
                    __ptext13 0B34                      __ptext22 0C4E                      __ptext14 0A04  
                    __ptext23 0C74                      __ptext15 0C36                      __ptext24 0CB2  
                    __ptext16 0C62                      __ptext17 0B74                      __ptext18 0BB0  
                    __ptext19 0CCC          __end_of_WriteDataLCD 0B34                 __size_of_main 0056  
               __size_of_utoa 00AA                Delay1TCYx@unit 0020                 ??_Delay1KTCYx 0020  
         _XC8_HighISR_Handler 0008   __size_of_InitAnalogueInputs 0014   __size_of_XC8_LowISR_Handler 00A8  
                  _INTCONbits 000FF2          __end_of_Delay100TCYx 0C74          __end_of_Delay10KTCYx 0C4E  
                    intlevel1 0000                      intlevel2 0000          ?_XC8_HighISR_Handler 0001  
            ___lwmod@dividend 0020         __end_of_DelayFor18TCY 0CD4                   ??_putIntLCD 0032  
     __size_of_InitInterrupts 000E               putIntLCD@result 0032                      utoa@base 002B  
             ___lwmod@divisor 0022           __end_of_Delay1KTCYx 0C86               ___lwmod@counter 0024  
    __size_of_SetLCDDDRamAddr 0054         ??_XC8_HighISR_Handler 0012      __size_of_SetLCDCGRamAddr 005A  
           __CFG_FOSC$INTIO67 000000  

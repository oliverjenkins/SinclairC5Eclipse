

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Mar 28 07:31:27 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           	psect	nvCOMRAM
    16  000003                     __pnvCOMRAM:
    17                           	opt stack 0
    18  000003                     _LED_Display:
    19                           	opt stack 0
    20  000003                     	ds	1
    21  0000                     _ADCON0	set	4034
    22  0000                     _ADCON0bits	set	4034
    23  0000                     _ADCON1	set	4033
    24  0000                     _ADCON2	set	4032
    25  0000                     _ADRESH	set	4036
    26  0000                     _ANSEL	set	3966
    27  0000                     _ANSELH	set	3967
    28  0000                     _ANSELbits	set	3966
    29  0000                     _INTCON2bits	set	4081
    30  0000                     _INTCONbits	set	4082
    31  0000                     _LATD	set	3980
    32  0000                     _PORTBbits	set	3969
    33  0000                     _T0CON	set	4053
    34  0000                     _T0CONbits	set	4053
    35  0000                     _TMR0H	set	4055
    36  0000                     _TMR0L	set	4054
    37  0000                     _TRISAbits	set	3986
    38  0000                     _TRISBbits	set	3987
    39  0000                     _TRISD	set	3989
    40  0000                     _WPUBbits	set	3964
    41                           
    42                           ; #config settings
    43  0000                     
    44                           	psect	cinit
    45  007F36                     __pcinit:
    46                           	opt stack 0
    47  007F36                     start_initialization:
    48                           	opt stack 0
    49  007F36                     __initialization:
    50                           	opt stack 0
    51  007F36                     end_of_initialization:
    52                           	opt stack 0
    53  007F36                     __end_of__initialization:
    54                           	opt stack 0
    55  007F36  0100               	movlb	0
    56  007F38  EFBA  F03F         	goto	_main	;jump to C main() function
    57                           
    58                           	psect	cstackCOMRAM
    59  000001                     __pcstackCOMRAM:
    60                           	opt stack 0
    61  000001                     main@SwitchPressed:
    62                           	opt stack 0
    63                           
    64                           ; 1 bytes @ 0x0
    65  000001                     	ds	1
    66  000002                     main@Direction:
    67                           	opt stack 0
    68                           
    69                           ; 1 bytes @ 0x1
    70  000002                     	ds	1
    71                           
    72 ;;
    73 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    74 ;;
    75 ;; *************** function _main *****************
    76 ;; Defined at:
    77 ;;		line 69 in file "07_ADC.c"
    78 ;; Parameters:    Size  Location     Type
    79 ;;		None
    80 ;; Auto vars:     Size  Location     Type
    81 ;;  Direction       1    1[COMRAM] enum E4325
    82 ;;  SwitchPresse    1    0[COMRAM] enum E3679
    83 ;; Return value:  Size  Location     Type
    84 ;;		None               void
    85 ;; Registers used:
    86 ;;		wreg, status,2, status,0, cstack
    87 ;; Tracked objects:
    88 ;;		On entry : 0/0
    89 ;;		On exit  : 0/0
    90 ;;		Unchanged: 0/0
    91 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    92 ;;      Params:         0       0       0       0       0       0       0
    93 ;;      Locals:         2       0       0       0       0       0       0
    94 ;;      Temps:          0       0       0       0       0       0       0
    95 ;;      Totals:         2       0       0       0       0       0       0
    96 ;;Total ram usage:        2 bytes
    97 ;; Hardware stack levels required when called:    1
    98 ;; This function calls:
    99 ;;		_ADC_Convert
   100 ;;		_ADC_Init
   101 ;;		_Timer0_Init
   102 ;; This function is called by:
   103 ;;		Startup code after reset
   104 ;; This function uses a non-reentrant model
   105 ;;
   106                           
   107                           	psect	text0
   108  007F74                     __ptext0:
   109                           	opt stack 0
   110  007F74                     _main:
   111                           	opt stack 30
   112                           
   113                           ;07_ADC.c: 71: LEDDirections Direction = LEFT2RIGHT;
   114                           
   115                           ;incstack = 0
   116  007F74  0E00               	movlw	0
   117  007F76  6E02               	movwf	main@Direction,c
   118                           
   119                           ;07_ADC.c: 72: BOOL SwitchPressed = FALSE;
   120  007F78  0E00               	movlw	0
   121  007F7A  6E01               	movwf	main@SwitchPressed,c
   122                           
   123                           ;07_ADC.c: 74: LED_Display = 1;
   124  007F7C  0E01               	movlw	1
   125  007F7E  6E03               	movwf	_LED_Display,c
   126                           
   127                           ;07_ADC.c: 77: TRISD = 0b00000000;
   128  007F80  0E00               	movlw	0
   129  007F82  6E95               	movwf	3989,c	;volatile
   130                           
   131                           ;07_ADC.c: 78: TRISAbits.TRISA0 = 1;
   132  007F84  8092               	bsf	3986,0,c	;volatile
   133                           
   134                           ;07_ADC.c: 80: INTCON2bits.RBPU = 0;
   135  007F86  9EF1               	bcf	intcon2,7,c	;volatile
   136                           
   137                           ;07_ADC.c: 81: WPUBbits.WPUB0 = 1;
   138  007F88  807C               	bsf	3964,0,c	;volatile
   139                           
   140                           ;07_ADC.c: 84: TRISBbits.TRISB0 = 1;
   141  007F8A  8093               	bsf	3987,0,c	;volatile
   142                           
   143                           ;07_ADC.c: 87: Timer0_Init();
   144  007F8C  ECA5  F03F         	call	_Timer0_Init	;wreg free
   145                           
   146                           ;07_ADC.c: 90: ADC_Init();
   147  007F90  ECAE  F03F         	call	_ADC_Init	;wreg free
   148  007F94                     l51:
   149                           
   150                           ;07_ADC.c: 93: {
   151                           ;07_ADC.c: 95: if (Direction == LEFT2RIGHT)
   152  007F94  5002               	movf	main@Direction,w,c
   153  007F96  A4D8               	btfss	status,2,c
   154  007F98  D008               	goto	l695
   155                           
   156                           ;07_ADC.c: 96: {
   157                           ;07_ADC.c: 97: LED_Display <<= 1;
   158  007F9A  90D8               	bcf	status,0,c
   159  007F9C  3603               	rlcf	_LED_Display,f,c
   160                           
   161                           ;07_ADC.c: 98: if (LED_Display == 0)
   162  007F9E  5003               	movf	_LED_Display,w,c
   163  007FA0  A4D8               	btfss	status,2,c
   164  007FA2  D003               	goto	l695
   165                           
   166                           ;07_ADC.c: 99: LED_Display = 1;
   167  007FA4  0E01               	movlw	1
   168  007FA6  6E03               	movwf	_LED_Display,c
   169  007FA8  D000               	goto	l695
   170  007FAA                     l695:
   171                           
   172                           ;07_ADC.c: 100: }
   173                           ;07_ADC.c: 101: if (Direction == RIGHT2LEFT)
   174  007FAA  0402               	decf	main@Direction,w,c
   175  007FAC  A4D8               	btfss	status,2,c
   176  007FAE  D008               	goto	l703
   177                           
   178                           ;07_ADC.c: 102: {
   179                           ;07_ADC.c: 103: LED_Display >>= 1;
   180  007FB0  90D8               	bcf	status,0,c
   181  007FB2  3203               	rrcf	_LED_Display,f,c
   182                           
   183                           ;07_ADC.c: 104: if (LED_Display == 0)
   184  007FB4  5003               	movf	_LED_Display,w,c
   185  007FB6  A4D8               	btfss	status,2,c
   186  007FB8  D003               	goto	l703
   187                           
   188                           ;07_ADC.c: 105: LED_Display = 0x80;
   189  007FBA  0E80               	movlw	128
   190  007FBC  6E03               	movwf	_LED_Display,c
   191  007FBE  D000               	goto	l703
   192  007FC0                     l703:
   193                           
   194                           ;07_ADC.c: 106: }
   195                           ;07_ADC.c: 108: LATD = LED_Display;
   196  007FC0  C003  FF8C         	movff	_LED_Display,3980	;volatile
   197  007FC4  D000               	goto	l705
   198  007FC6                     l705:
   199                           
   200                           ;07_ADC.c: 111: {
   201                           ;07_ADC.c: 112: if (PORTBbits.RB0 == 1)
   202  007FC6  A081               	btfss	3969,0,c	;volatile
   203  007FC8  D003               	goto	l709
   204                           
   205                           ;07_ADC.c: 113: {
   206                           ;07_ADC.c: 114: SwitchPressed = FALSE;
   207  007FCA  0E00               	movlw	0
   208  007FCC  6E01               	movwf	main@SwitchPressed,c
   209                           
   210                           ;07_ADC.c: 115: }
   211  007FCE  D00D               	goto	l717
   212  007FD0                     l709:
   213                           
   214                           ;07_ADC.c: 116: else if (SwitchPressed == FALSE)
   215  007FD0  5001               	movf	main@SwitchPressed,w,c
   216  007FD2  A4D8               	btfss	status,2,c
   217  007FD4  D00A               	goto	l717
   218                           
   219                           ;07_ADC.c: 117: {
   220                           ;07_ADC.c: 118: SwitchPressed = TRUE;
   221  007FD6  0E01               	movlw	1
   222  007FD8  6E01               	movwf	main@SwitchPressed,c
   223                           
   224                           ;07_ADC.c: 120: if (Direction == LEFT2RIGHT)
   225  007FDA  5002               	movf	main@Direction,w,c
   226  007FDC  A4D8               	btfss	status,2,c
   227  007FDE  D002               	goto	l715
   228                           
   229                           ;07_ADC.c: 121: Direction = RIGHT2LEFT;
   230  007FE0  0E01               	movlw	1
   231  007FE2  D001               	goto	L1
   232  007FE4                     l715:
   233                           
   234                           ;07_ADC.c: 122: else
   235                           ;07_ADC.c: 123: Direction = LEFT2RIGHT;
   236  007FE4  0E00               	movlw	0
   237  007FE6                     L1:
   238  007FE6  6E02               	movwf	main@Direction,c
   239  007FE8  D000               	goto	l717
   240  007FEA                     l717:
   241                           
   242                           ;07_ADC.c: 124: }
   243                           ;07_ADC.c: 126: } while (INTCONbits.TMR0IF == 0);
   244  007FEA  A4F2               	btfss	intcon,2,c	;volatile
   245  007FEC  D7EC               	goto	l705
   246                           
   247                           ;07_ADC.c: 129: INTCONbits.TMR0IF = 0;
   248  007FEE  94F2               	bcf	intcon,2,c	;volatile
   249                           
   250                           ;07_ADC.c: 132: TMR0H = ADC_Convert();
   251  007FF0  EC9E  F03F         	call	_ADC_Convert	;wreg free
   252  007FF4  6ED7               	movwf	4055,c	;volatile
   253                           
   254                           ;07_ADC.c: 133: TMR0L = 0;
   255  007FF6  0E00               	movlw	0
   256  007FF8  6ED6               	movwf	4054,c	;volatile
   257  007FFA  D7CC               	goto	l51
   258  007FFC  EF00  F000         	goto	start
   259  008000                     __end_of_main:
   260                           	opt stack 0
   261                           intcon	equ	0xFF2
   262                           intcon2	equ	0xFF1
   263                           status	equ	0xFD8
   264                           
   265 ;; *************** function _Timer0_Init *****************
   266 ;; Defined at:
   267 ;;		line 138 in file "07_ADC.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;		None               void
   274 ;; Registers used:
   275 ;;		wreg, status,2
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  007F4A                     __ptext1:
   296                           	opt stack 0
   297  007F4A                     _Timer0_Init:
   298                           	opt stack 30
   299                           
   300                           ;07_ADC.c: 140: INTCONbits.TMR0IF = 0;
   301                           
   302                           ;incstack = 0
   303  007F4A  94F2               	bcf	intcon,2,c	;volatile
   304                           
   305                           ;07_ADC.c: 141: T0CON = 0b00000001;
   306  007F4C  0E01               	movlw	1
   307  007F4E  6ED5               	movwf	4053,c	;volatile
   308                           
   309                           ;07_ADC.c: 142: TMR0H = 0;
   310  007F50  0E00               	movlw	0
   311  007F52  6ED7               	movwf	4055,c	;volatile
   312                           
   313                           ;07_ADC.c: 143: TMR0L = 0;
   314  007F54  0E00               	movlw	0
   315  007F56  6ED6               	movwf	4054,c	;volatile
   316                           
   317                           ;07_ADC.c: 144: T0CONbits.TMR0ON = 1;
   318  007F58  8ED5               	bsf	4053,7,c	;volatile
   319  007F5A  0012               	return		;funcret
   320  007F5C                     __end_of_Timer0_Init:
   321                           	opt stack 0
   322                           intcon	equ	0xFF2
   323                           intcon2	equ	0xFF1
   324                           status	equ	0xFD8
   325                           
   326 ;; *************** function _ADC_Init *****************
   327 ;; Defined at:
   328 ;;		line 147 in file "07_ADC.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;		None               void
   335 ;; Registers used:
   336 ;;		wreg, status,2
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   342 ;;      Params:         0       0       0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356  007F5C                     __ptext2:
   357                           	opt stack 0
   358  007F5C                     _ADC_Init:
   359                           	opt stack 30
   360                           
   361                           ;07_ADC.c: 152: ANSEL = 0;
   362                           
   363                           ;incstack = 0
   364  007F5C  0E00               	movlw	0
   365  007F5E  6E7E               	movwf	3966,c	;volatile
   366                           
   367                           ;07_ADC.c: 153: ANSELH = 0;
   368  007F60  0E00               	movlw	0
   369  007F62  6E7F               	movwf	3967,c	;volatile
   370                           
   371                           ;07_ADC.c: 154: ANSELbits.ANS0 = 1;
   372  007F64  807E               	bsf	3966,0,c	;volatile
   373                           
   374                           ;07_ADC.c: 158: ADCON1 = 0;
   375  007F66  0E00               	movlw	0
   376  007F68  6EC1               	movwf	4033,c	;volatile
   377                           
   378                           ;07_ADC.c: 176: ADCON2 = 0b00111000;
   379  007F6A  0E38               	movlw	56
   380  007F6C  6EC0               	movwf	4032,c	;volatile
   381                           
   382                           ;07_ADC.c: 179: ADCON0 = 0b00000001;
   383  007F6E  0E01               	movlw	1
   384  007F70  6EC2               	movwf	4034,c	;volatile
   385  007F72  0012               	return		;funcret
   386  007F74                     __end_of_ADC_Init:
   387                           	opt stack 0
   388                           intcon	equ	0xFF2
   389                           intcon2	equ	0xFF1
   390                           status	equ	0xFD8
   391                           
   392 ;; *************** function _ADC_Convert *****************
   393 ;; Defined at:
   394 ;;		line 182 in file "07_ADC.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      unsigned char 
   401 ;; Registers used:
   402 ;;		wreg, status,2
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text3
   422  007F3C                     __ptext3:
   423                           	opt stack 0
   424  007F3C                     _ADC_Convert:
   425                           	opt stack 30
   426                           
   427                           ;07_ADC.c: 184: ADCON0bits.GO_DONE = 1;
   428                           
   429                           ;incstack = 0
   430  007F3C  82C2               	bsf	4034,1,c	;volatile
   431                           
   432                           ;07_ADC.c: 185: while (ADCON0bits.GO_DONE == 1);
   433  007F3E  D000               	goto	l74
   434  007F40                     l74:
   435  007F40  B2C2               	btfsc	4034,1,c	;volatile
   436  007F42  D7FE               	goto	l74
   437                           
   438                           ;07_ADC.c: 186: return ADRESH;
   439  007F44  50C4               	movf	4036,w,c	;volatile
   440  007F46  0012               	return	
   441  007F48  0012               	return		;funcret
   442  007F4A                     __end_of_ADC_Convert:
   443                           	opt stack 0
   444  0000                     intcon	equ	0xFF2
   445                           intcon2	equ	0xFF1
   446                           status	equ	0xFD8
   447                           intcon	equ	0xFF2
   448                           intcon2	equ	0xFF1
   449                           status	equ	0xFD8
   450                           
   451                           	psect	rparam
   452  0000                     intcon	equ	0xFF2
   453                           intcon2	equ	0xFF1
   454                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              0 COMRAM     2     2      0
                        _ADC_Convert
                           _ADC_Init
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
   _ADC_Init
   _Timer0_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       3       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       3      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Mar 28 07:31:27 2015

                     l51 7F94                       l74 7F40             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l703 7FC0                      l705 7FC6                      l715 7FE4  
                    l717 7FEA                      l709 7FD0                      l695 7FAA  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000            main@Direction 0002  
           __CFG_BORV$30 000000             __CFG_LVP$OFF 000000     __size_of_ADC_Convert 000E  
                   _LATD 000F8C                     _main 7F74         __end_of_ADC_Init 7F74  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000010  
                  ?_main 0001                    _ANSEL 000F7E                    _T0CON 000FD5  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000          __initialization 7F36  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ANSELH 000F7F           __CFG_WDTEN$OFF 000000  
          ??_Timer0_Init 0001           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
              ?_ADC_Init 0001               __accesstop 0060  __end_of__initialization 7F36  
          ___rparam_used 000001           __pcstackCOMRAM 0001      __end_of_Timer0_Init 7F5C  
             ??_ADC_Init 0001          __CFG_LPT1OSC$ON 000000               __pnvCOMRAM 0003  
          ??_ADC_Convert 0001                  __Hparam 0000              _Timer0_Init 7F4A  
                __Lparam 0000                  __pcinit 7F36                _ANSELbits 000F7E  
                __ramtop 0600                  __ptext0 7F74                  __ptext1 7F4A  
                __ptext2 7F5C                  __ptext3 7F3C                _T0CONbits 000FD5  
   end_of_initialization 7F36      __end_of_ADC_Convert 7F4A                _PORTBbits 000F81  
              _TRISAbits 000F92                _TRISBbits 000F93        __size_of_ADC_Init 0018  
    start_initialization 7F36              _ADC_Convert 7F3C             ?_Timer0_Init 0001  
      __CFG_CCP2MX$PORTC 000000                 _ADC_Init 7F5C         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2                 _WPUBbits 000F7C              _LED_Display 0003  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000             ?_ADC_Convert 0001        main@SwitchPressed 0001  
          __size_of_main 008C     __size_of_Timer0_Init 0012               _INTCONbits 000FF2  
      __CFG_FOSC$INTIO67 000000  



Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 13 09:23:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0042                     _RD2	set	66
    80  0043                     _RD3	set	67
    81  0044                     _RD4	set	68
    82  0045                     _RD5	set	69
    83  0046                     _RD6	set	70
    84  0047                     _RD7	set	71
    85  0088                     _TRISD	set	136
    86                           
    87                           	psect	strings
    88  0003                     __pstrings:	
    89  0003                     stringtab:	
    90  0003                     __stringtab:	
    91  0003                     stringcode:	
    92                           ;	String table - string pointers are 1 byte each
    93                           
    94  0003                     stringdir:	
    95  0003  3000               	movlw	high stringdir
    96  0004  008A               	movwf	10
    97  0005  0804               	movf	4,w
    98  0006  0A84               	incf	4,f
    99  0007  0782               	addwf	2,f
   100  0008                     __stringbase:	
   101  0008  3400               	retlw	0
   102  0009                     __end_of__stringtab:	
   103  0009                     STR_5:	
   104  0009  3477               	retlw	119	;'w'
   105  000A  3477               	retlw	119	;'w'
   106  000B  3477               	retlw	119	;'w'
   107  000C  342E               	retlw	46	;'.'
   108  000D  3465               	retlw	101	;'e'
   109  000E  346C               	retlw	108	;'l'
   110  000F  3465               	retlw	101	;'e'
   111  0010  3463               	retlw	99	;'c'
   112  0011  3474               	retlw	116	;'t'
   113  0012  3472               	retlw	114	;'r'
   114  0013  346F               	retlw	111	;'o'
   115  0014  3453               	retlw	83	;'S'
   116  0015  346F               	retlw	111	;'o'
   117  0016  346D               	retlw	109	;'m'
   118  0017  3465               	retlw	101	;'e'
   119  0018  342E               	retlw	46	;'.'
   120  0019  3463               	retlw	99	;'c'
   121  001A  346F               	retlw	111	;'o'
   122  001B  346D               	retlw	109	;'m'
   123  001C  3400               	retlw	0
   124  001D                     STR_1:	
   125  001D  344C               	retlw	76	;'L'
   126  001E  3443               	retlw	67	;'C'
   127  001F  3444               	retlw	68	;'D'
   128  0020  3420               	retlw	32	;' '
   129  0021  344C               	retlw	76	;'L'
   130  0022  3469               	retlw	105	;'i'
   131  0023  3462               	retlw	98	;'b'
   132  0024  3472               	retlw	114	;'r'
   133  0025  3461               	retlw	97	;'a'
   134  0026  3472               	retlw	114	;'r'
   135  0027  3479               	retlw	121	;'y'
   136  0028  3420               	retlw	32	;' '
   137  0029  3466               	retlw	102	;'f'
   138  002A  346F               	retlw	111	;'o'
   139  002B  3472               	retlw	114	;'r'
   140  002C  3400               	retlw	0
   141  002D                     STR_3:	
   142  002D  3444               	retlw	68	;'D'
   143  002E  3465               	retlw	101	;'e'
   144  002F  3476               	retlw	118	;'v'
   145  0030  3465               	retlw	101	;'e'
   146  0031  346C               	retlw	108	;'l'
   147  0032  346F               	retlw	111	;'o'
   148  0033  3470               	retlw	112	;'p'
   149  0034  3465               	retlw	101	;'e'
   150  0035  3464               	retlw	100	;'d'
   151  0036  3420               	retlw	32	;' '
   152  0037  3442               	retlw	66	;'B'
   153  0038  3479               	retlw	121	;'y'
   154  0039  3400               	retlw	0
   155  003A                     STR_4:	
   156  003A  3465               	retlw	101	;'e'
   157  003B  346C               	retlw	108	;'l'
   158  003C  3465               	retlw	101	;'e'
   159  003D  3463               	retlw	99	;'c'
   160  003E  3474               	retlw	116	;'t'
   161  003F  3472               	retlw	114	;'r'
   162  0040  346F               	retlw	111	;'o'
   163  0041  3453               	retlw	83	;'S'
   164  0042  346F               	retlw	111	;'o'
   165  0043  346D               	retlw	109	;'m'
   166  0044  3465               	retlw	101	;'e'
   167  0045  3400               	retlw	0
   168  0046                     STR_2:	
   169  0046  344D               	retlw	77	;'M'
   170  0047  3450               	retlw	80	;'P'
   171  0048  344C               	retlw	76	;'L'
   172  0049  3441               	retlw	65	;'A'
   173  004A  3442               	retlw	66	;'B'
   174  004B  3420               	retlw	32	;' '
   175  004C  3458               	retlw	88	;'X'
   176  004D  3443               	retlw	67	;'C'
   177  004E  3438               	retlw	56	;'8'
   178  004F  3400               	retlw	0
   179                           
   180                           ; #config settings
   181  0000                     
   182                           	psect	cinit
   183  07FC                     start_initialization:	
   184  07FC                     __initialization:	
   185  07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  07FC                     __end_of__initialization:	
   189  07FC  0183               	clrf	3
   190  07FD  120A  118A  2F08   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193  0070                     __pcstackCOMMON:	
   194  0070                     ?_Lcd_Port:	
   195  0070                     ??_Lcd_Port:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_Lcd_Cmd:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_Lcd_Init:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_Lcd_Write_Char:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_Lcd_Write_String:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_Lcd_Shift_Right:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_Lcd_Shift_Left:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_Lcd_Clear:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_main:	
   220                           ; 2 bytes @ 0x0
   221                           
   222  0070                     Lcd_Port@a:	
   223                           ; 2 bytes @ 0x0
   224                           
   225                           
   226                           ; 1 bytes @ 0x0
   227  0070                     	ds	1
   228  0071                     ??_Lcd_Cmd:	
   229  0071                     ??_Lcd_Write_Char:	
   230                           ; 0 bytes @ 0x1
   231                           
   232                           
   233                           ; 0 bytes @ 0x1
   234  0071                     	ds	1
   235  0072                     Lcd_Write_Char@temp:	
   236                           
   237                           ; 1 bytes @ 0x2
   238  0072                     	ds	1
   239  0073                     Lcd_Cmd@a:	
   240  0073                     Lcd_Write_Char@y:	
   241                           ; 1 bytes @ 0x3
   242                           
   243                           
   244                           ; 1 bytes @ 0x3
   245  0073                     	ds	1
   246  0074                     ??_Lcd_Clear:	
   247  0074                     ?_Lcd_Set_Cursor:	
   248                           ; 0 bytes @ 0x4
   249                           
   250  0074                     ??_Lcd_Init:	
   251                           ; 0 bytes @ 0x4
   252                           
   253  0074                     ??_Lcd_Shift_Right:	
   254                           ; 0 bytes @ 0x4
   255                           
   256  0074                     ??_Lcd_Shift_Left:	
   257                           ; 0 bytes @ 0x4
   258                           
   259  0074                     Lcd_Set_Cursor@b:	
   260                           ; 0 bytes @ 0x4
   261                           
   262  0074                     Lcd_Write_Char@a:	
   263                           ; 1 bytes @ 0x4
   264                           
   265                           
   266                           ; 1 bytes @ 0x4
   267  0074                     	ds	1
   268  0075                     ??_Lcd_Set_Cursor:	
   269  0075                     ??_Lcd_Write_String:	
   270                           ; 0 bytes @ 0x5
   271                           
   272  0075                     Lcd_Write_String@i:	
   273                           ; 0 bytes @ 0x5
   274                           
   275                           
   276                           ; 2 bytes @ 0x5
   277  0075                     	ds	2
   278  0077                     Lcd_Set_Cursor@a:	
   279  0077                     Lcd_Write_String@a:	
   280                           ; 1 bytes @ 0x7
   281                           
   282                           
   283                           ; 1 bytes @ 0x7
   284  0077                     	ds	1
   285  0078                     Lcd_Set_Cursor@z:	
   286                           
   287                           ; 1 bytes @ 0x8
   288  0078                     	ds	1
   289  0079                     Lcd_Set_Cursor@y:	
   290                           
   291                           ; 1 bytes @ 0x9
   292  0079                     	ds	1
   293  007A                     Lcd_Set_Cursor@temp:	
   294                           
   295                           ; 1 bytes @ 0xA
   296  007A                     	ds	1
   297  007B                     ??_main:	
   298                           
   299                           ; 0 bytes @ 0xB
   300  007B                     	ds	3
   301                           
   302                           	psect	cstackBANK0
   303  0020                     __pcstackBANK0:	
   304  0020                     main@a:	
   305                           
   306                           ; 2 bytes @ 0x0
   307  0020                     	ds	2
   308                           
   309                           	psect	maintext
   310  0708                     __pmaintext:	
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 24 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  a               2    0[BANK0 ] unsigned int 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  2   59[None  ] int 
   323 ;; Registers used:
   324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : B00/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       2       0       0       0
   332 ;;      Temps:          3       0       0       0       0
   333 ;;      Totals:         3       2       0       0       0
   334 ;;Total ram usage:        5 bytes
   335 ;; Hardware stack levels required when called:    3
   336 ;; This function calls:
   337 ;;		_Lcd_Clear
   338 ;;		_Lcd_Init
   339 ;;		_Lcd_Set_Cursor
   340 ;;		_Lcd_Shift_Left
   341 ;;		_Lcd_Shift_Right
   342 ;;		_Lcd_Write_Char
   343 ;;		_Lcd_Write_String
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _main
   351  0708                     _main:	
   352                           
   353                           ;main.c: 26: unsigned int a;
   354                           ;main.c: 27: TRISD = 0x00;
   355                           
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   358  0708  1683               	bsf	3,5	;RP0=1, select bank1
   359  0709  1303               	bcf	3,6	;RP1=0, select bank1
   360  070A  0188               	clrf	8	;volatile
   361                           
   362                           ;main.c: 28: Lcd_Init();
   363  070B  120A  118A  26AD  120A  118A  	fcall	_Lcd_Init
   364  0710                     l765:	
   365                           ;main.c: 29: while(1)
   366                           
   367                           
   368                           ;main.c: 30: {
   369                           ;main.c: 31: Lcd_Clear();
   370  0710  120A  118A  25B3  120A  118A  	fcall	_Lcd_Clear
   371                           
   372                           ;main.c: 32: Lcd_Set_Cursor(1,1);
   373  0715  01F4               	clrf	Lcd_Set_Cursor@b
   374  0716  0AF4               	incf	Lcd_Set_Cursor@b,f
   375  0717  3001               	movlw	1
   376  0718  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   377                           
   378                           ;main.c: 33: Lcd_Write_String("LCD Library for");
   379  071D  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   380  071E  120A  118A  2608  120A  118A  	fcall	_Lcd_Write_String
   381                           
   382                           ;main.c: 34: Lcd_Set_Cursor(2,1);
   383  0723  01F4               	clrf	Lcd_Set_Cursor@b
   384  0724  0AF4               	incf	Lcd_Set_Cursor@b,f
   385  0725  3002               	movlw	2
   386  0726  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   387                           
   388                           ;main.c: 35: Lcd_Write_String("MPLAB XC8");
   389  072B  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   390  072C  120A  118A  2608  120A  118A  	fcall	_Lcd_Write_String
   391                           
   392                           ;main.c: 36: _delay((unsigned long)((2000)*(8000000/4000.0)));
   393  0731  3015               	movlw	21
   394  0732  00FD               	movwf	??_main+2
   395  0733  304B               	movlw	75
   396  0734  00FC               	movwf	??_main+1
   397  0735  30D1               	movlw	209
   398  0736  00FB               	movwf	??_main
   399  0737                     u297:	
   400  0737  0BFB               	decfsz	??_main,f
   401  0738  2F37               	goto	u297
   402  0739  0BFC               	decfsz	??_main+1,f
   403  073A  2F37               	goto	u297
   404  073B  0BFD               	decfsz	??_main+2,f
   405  073C  2F37               	goto	u297
   406  073D  0000               	nop
   407                           
   408                           ;main.c: 37: Lcd_Clear();
   409  073E  120A  118A  25B3  120A  118A  	fcall	_Lcd_Clear
   410                           
   411                           ;main.c: 38: Lcd_Set_Cursor(1,1);
   412  0743  01F4               	clrf	Lcd_Set_Cursor@b
   413  0744  0AF4               	incf	Lcd_Set_Cursor@b,f
   414  0745  3001               	movlw	1
   415  0746  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   416                           
   417                           ;main.c: 39: Lcd_Write_String("Developed By");
   418  074B  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   419  074C  120A  118A  2608  120A  118A  	fcall	_Lcd_Write_String
   420                           
   421                           ;main.c: 40: Lcd_Set_Cursor(2,1);
   422  0751  01F4               	clrf	Lcd_Set_Cursor@b
   423  0752  0AF4               	incf	Lcd_Set_Cursor@b,f
   424  0753  3002               	movlw	2
   425  0754  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   426                           
   427                           ;main.c: 41: Lcd_Write_String("electroSome");
   428  0759  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   429  075A  120A  118A  2608  120A  118A  	fcall	_Lcd_Write_String
   430                           
   431                           ;main.c: 42: _delay((unsigned long)((2000)*(8000000/4000.0)));
   432  075F  3015               	movlw	21
   433  0760  00FD               	movwf	??_main+2
   434  0761  304B               	movlw	75
   435  0762  00FC               	movwf	??_main+1
   436  0763  30D1               	movlw	209
   437  0764  00FB               	movwf	??_main
   438  0765                     u307:	
   439  0765  0BFB               	decfsz	??_main,f
   440  0766  2F65               	goto	u307
   441  0767  0BFC               	decfsz	??_main+1,f
   442  0768  2F65               	goto	u307
   443  0769  0BFD               	decfsz	??_main+2,f
   444  076A  2F65               	goto	u307
   445  076B  0000               	nop
   446                           
   447                           ;main.c: 43: Lcd_Clear();
   448  076C  120A  118A  25B3  120A  118A  	fcall	_Lcd_Clear
   449                           
   450                           ;main.c: 44: Lcd_Set_Cursor(1,1);
   451  0771  01F4               	clrf	Lcd_Set_Cursor@b
   452  0772  0AF4               	incf	Lcd_Set_Cursor@b,f
   453  0773  3001               	movlw	1
   454  0774  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   455                           
   456                           ;main.c: 45: Lcd_Write_String("www.electroSome.com");
   457  0779  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   458  077A  120A  118A  2608  120A  118A  	fcall	_Lcd_Write_String
   459                           
   460                           ;main.c: 47: for(a=0;a<15;a++)
   461  077F  1283               	bcf	3,5	;RP0=0, select bank0
   462  0780  1303               	bcf	3,6	;RP1=0, select bank0
   463  0781  01A0               	clrf	main@a
   464  0782  01A1               	clrf	main@a+1
   465  0783  3000               	movlw	0
   466  0784  0221               	subwf	main@a+1,w
   467  0785  300F               	movlw	15
   468  0786  1903               	skipnz
   469  0787  0220               	subwf	main@a,w
   470  0788  1803               	btfsc	3,0
   471  0789  2FAB               	goto	l809
   472  078A                     l801:	
   473                           
   474                           ;main.c: 48: {
   475                           ;main.c: 49: _delay((unsigned long)((300)*(8000000/4000.0)));
   476  078A  3004               	movlw	4
   477  078B  00FD               	movwf	??_main+2
   478  078C  300C               	movlw	12
   479  078D  00FC               	movwf	??_main+1
   480  078E  3035               	movlw	53
   481  078F  00FB               	movwf	??_main
   482  0790                     u317:	
   483  0790  0BFB               	decfsz	??_main,f
   484  0791  2F90               	goto	u317
   485  0792  0BFC               	decfsz	??_main+1,f
   486  0793  2F90               	goto	u317
   487  0794  0BFD               	decfsz	??_main+2,f
   488  0795  2F90               	goto	u317
   489  0796  2F97               	nop2
   490                           
   491                           ;main.c: 50: Lcd_Shift_Left();
   492  0797  120A  118A  25BE  120A  118A  	fcall	_Lcd_Shift_Left
   493  079C  3001               	movlw	1
   494  079D  1283               	bcf	3,5	;RP0=0, select bank0
   495  079E  1303               	bcf	3,6	;RP1=0, select bank0
   496  079F  07A0               	addwf	main@a,f
   497  07A0  1803               	skipnc
   498  07A1  0AA1               	incf	main@a+1,f
   499  07A2  3000               	movlw	0
   500  07A3  07A1               	addwf	main@a+1,f
   501  07A4  3000               	movlw	0
   502  07A5  0221               	subwf	main@a+1,w
   503  07A6  300F               	movlw	15
   504  07A7  1903               	skipnz
   505  07A8  0220               	subwf	main@a,w
   506  07A9  1C03               	skipc
   507  07AA  2F8A               	goto	l801
   508  07AB                     l809:	
   509                           
   510                           ;main.c: 51: }
   511                           ;main.c: 53: for(a=0;a<15;a++)
   512  07AB  01A0               	clrf	main@a
   513  07AC  01A1               	clrf	main@a+1
   514  07AD  3000               	movlw	0
   515  07AE  0221               	subwf	main@a+1,w
   516  07AF  300F               	movlw	15
   517  07B0  1903               	skipnz
   518  07B1  0220               	subwf	main@a,w
   519  07B2  1803               	btfsc	3,0
   520  07B3  2FD5               	goto	l823
   521  07B4                     l815:	
   522                           
   523                           ;main.c: 54: {
   524                           ;main.c: 55: _delay((unsigned long)((300)*(8000000/4000.0)));
   525  07B4  3004               	movlw	4
   526  07B5  00FD               	movwf	??_main+2
   527  07B6  300C               	movlw	12
   528  07B7  00FC               	movwf	??_main+1
   529  07B8  3035               	movlw	53
   530  07B9  00FB               	movwf	??_main
   531  07BA                     u327:	
   532  07BA  0BFB               	decfsz	??_main,f
   533  07BB  2FBA               	goto	u327
   534  07BC  0BFC               	decfsz	??_main+1,f
   535  07BD  2FBA               	goto	u327
   536  07BE  0BFD               	decfsz	??_main+2,f
   537  07BF  2FBA               	goto	u327
   538  07C0  2FC1               	nop2
   539                           
   540                           ;main.c: 56: Lcd_Shift_Right();
   541  07C1  120A  118A  25C9  120A  118A  	fcall	_Lcd_Shift_Right
   542  07C6  3001               	movlw	1
   543  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   544  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   545  07C9  07A0               	addwf	main@a,f
   546  07CA  1803               	skipnc
   547  07CB  0AA1               	incf	main@a+1,f
   548  07CC  3000               	movlw	0
   549  07CD  07A1               	addwf	main@a+1,f
   550  07CE  3000               	movlw	0
   551  07CF  0221               	subwf	main@a+1,w
   552  07D0  300F               	movlw	15
   553  07D1  1903               	skipnz
   554  07D2  0220               	subwf	main@a,w
   555  07D3  1C03               	skipc
   556  07D4  2FB4               	goto	l815
   557  07D5                     l823:	
   558                           
   559                           ;main.c: 57: }
   560                           ;main.c: 59: Lcd_Clear();
   561  07D5  120A  118A  25B3  120A  118A  	fcall	_Lcd_Clear
   562                           
   563                           ;main.c: 60: Lcd_Set_Cursor(2,1);
   564  07DA  01F4               	clrf	Lcd_Set_Cursor@b
   565  07DB  0AF4               	incf	Lcd_Set_Cursor@b,f
   566  07DC  3002               	movlw	2
   567  07DD  120A  118A  2663  120A  118A  	fcall	_Lcd_Set_Cursor
   568                           
   569                           ;main.c: 61: Lcd_Write_Char('e');
   570  07E2  3065               	movlw	101
   571  07E3  120A  118A  262A  120A  118A  	fcall	_Lcd_Write_Char
   572                           
   573                           ;main.c: 62: Lcd_Write_Char('S');
   574  07E8  3053               	movlw	83
   575  07E9  120A  118A  262A  120A  118A  	fcall	_Lcd_Write_Char
   576                           
   577                           ;main.c: 63: _delay((unsigned long)((2000)*(8000000/4000.0)));
   578  07EE  3015               	movlw	21
   579  07EF  00FD               	movwf	??_main+2
   580  07F0  304B               	movlw	75
   581  07F1  00FC               	movwf	??_main+1
   582  07F2  30D1               	movlw	209
   583  07F3  00FB               	movwf	??_main
   584  07F4                     u337:	
   585  07F4  0BFB               	decfsz	??_main,f
   586  07F5  2FF4               	goto	u337
   587  07F6  0BFC               	decfsz	??_main+1,f
   588  07F7  2FF4               	goto	u337
   589  07F8  0BFD               	decfsz	??_main+2,f
   590  07F9  2FF4               	goto	u337
   591  07FA  0000               	nop
   592  07FB  2F10               	goto	l765
   593  07FC                     __end_of_main:	
   594                           ;main.c: 64: }
   595                           ;main.c: 65: return 0;
   596                           ;	Return value of _main is never used
   597                           
   598                           
   599                           	psect	text1
   600  0608                     __ptext1:	
   601 ;; *************** function _Lcd_Write_String *****************
   602 ;; Defined at:
   603 ;;		line 97 in file "lcd.h"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  a               1    wreg     PTR unsigned char 
   606 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   607 ;;		 -> STR_1(16), 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  a               1    7[COMMON] PTR unsigned char 
   610 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   611 ;;		 -> STR_1(16), 
   612 ;;  i               2    5[COMMON] int 
   613 ;; Return value:  Size  Location     Type
   614 ;;		None               void
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         3       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    2
   629 ;; This function calls:
   630 ;;		_Lcd_Write_Char
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _Lcd_Write_String
   638  0608                     _Lcd_Write_String:	
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   642                           ;Lcd_Write_String@a stored from wreg
   643  0608  00F7               	movwf	Lcd_Write_String@a
   644                           
   645                           ;lcd.h: 99: int i;
   646                           ;lcd.h: 100: for(i=0;a[i]!='\0';i++)
   647  0609  01F5               	clrf	Lcd_Write_String@i
   648  060A  01F6               	clrf	Lcd_Write_String@i+1
   649  060B                     l755:	
   650  060B  0875               	movf	Lcd_Write_String@i,w
   651  060C  0777               	addwf	Lcd_Write_String@a,w
   652  060D  0084               	movwf	4
   653  060E  120A  118A  2003  120A  118A  	fcall	stringdir
   654  0613  3A00               	xorlw	0
   655  0614  1903               	btfsc	3,2
   656  0615  0008               	return
   657                           
   658                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
   659  0616  0875               	movf	Lcd_Write_String@i,w
   660  0617  0777               	addwf	Lcd_Write_String@a,w
   661  0618  0084               	movwf	4
   662  0619  120A  118A  2003  120A  118A  	fcall	stringdir
   663  061E  120A  118A  262A  120A  118A  	fcall	_Lcd_Write_Char
   664  0623  3001               	movlw	1
   665  0624  07F5               	addwf	Lcd_Write_String@i,f
   666  0625  1803               	skipnc
   667  0626  0AF6               	incf	Lcd_Write_String@i+1,f
   668  0627  3000               	movlw	0
   669  0628  07F6               	addwf	Lcd_Write_String@i+1,f
   670  0629  2E0B               	goto	l755
   671  062A                     __end_of_Lcd_Write_String:	
   672                           
   673                           	psect	text2
   674  062A                     __ptext2:	
   675 ;; *************** function _Lcd_Write_Char *****************
   676 ;; Defined at:
   677 ;;		line 81 in file "lcd.h"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  a               1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  a               1    4[COMMON] unsigned char 
   682 ;;  y               1    3[COMMON] unsigned char 
   683 ;;  temp            1    2[COMMON] unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;		None               void
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, pclath, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         3       0       0       0       0
   695 ;;      Temps:          1       0       0       0       0
   696 ;;      Totals:         4       0       0       0       0
   697 ;;Total ram usage:        4 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    1
   700 ;; This function calls:
   701 ;;		_Lcd_Port
   702 ;; This function is called by:
   703 ;;		_Lcd_Write_String
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _Lcd_Write_Char
   710  062A                     _Lcd_Write_Char:	
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   714                           ;Lcd_Write_Char@a stored from wreg
   715  062A  00F4               	movwf	Lcd_Write_Char@a
   716                           
   717                           ;lcd.h: 83: char temp,y;
   718                           ;lcd.h: 84: temp = a&0x0F;
   719  062B  0874               	movf	Lcd_Write_Char@a,w
   720  062C  390F               	andlw	15
   721  062D  00F1               	movwf	??_Lcd_Write_Char
   722  062E  0871               	movf	??_Lcd_Write_Char,w
   723  062F  00F2               	movwf	Lcd_Write_Char@temp
   724                           
   725                           ;lcd.h: 85: y = a&0xF0;
   726  0630  0874               	movf	Lcd_Write_Char@a,w
   727  0631  39F0               	andlw	240
   728  0632  00F1               	movwf	??_Lcd_Write_Char
   729  0633  0871               	movf	??_Lcd_Write_Char,w
   730  0634  00F3               	movwf	Lcd_Write_Char@y
   731                           
   732                           ;lcd.h: 86: RD2 = 1;
   733  0635  1283               	bcf	3,5	;RP0=0, select bank0
   734  0636  1303               	bcf	3,6	;RP1=0, select bank0
   735  0637  1508               	bsf	8,2	;volatile
   736                           
   737                           ;lcd.h: 87: Lcd_Port(y>>4);
   738  0638  0873               	movf	Lcd_Write_Char@y,w
   739  0639  00F1               	movwf	??_Lcd_Write_Char
   740  063A  3004               	movlw	4
   741  063B                     u195:	
   742  063B  1003               	clrc
   743  063C  0CF1               	rrf	??_Lcd_Write_Char,f
   744  063D  3EFF               	addlw	-1
   745  063E  1D03               	skipz
   746  063F  2E3B               	goto	u195
   747  0640  0871               	movf	??_Lcd_Write_Char,w
   748  0641  120A  118A  25D4  120A  118A  	fcall	_Lcd_Port
   749                           
   750                           ;lcd.h: 88: RD3 = 1;
   751  0646  1283               	bcf	3,5	;RP0=0, select bank0
   752  0647  1303               	bcf	3,6	;RP1=0, select bank0
   753  0648  1588               	bsf	8,3	;volatile
   754                           
   755                           ;lcd.h: 89: _delay((unsigned long)((40)*(8000000/4000000.0)));
   756  0649  301A               	movlw	26
   757  064A  00F1               	movwf	??_Lcd_Write_Char
   758  064B                     u347:	
   759  064B  0BF1               	decfsz	??_Lcd_Write_Char,f
   760  064C  2E4B               	goto	u347
   761  064D  0000               	nop
   762                           
   763                           ;lcd.h: 90: RD3 = 0;
   764  064E  1283               	bcf	3,5	;RP0=0, select bank0
   765  064F  1303               	bcf	3,6	;RP1=0, select bank0
   766  0650  1188               	bcf	8,3	;volatile
   767                           
   768                           ;lcd.h: 91: Lcd_Port(temp);
   769  0651  0872               	movf	Lcd_Write_Char@temp,w
   770  0652  120A  118A  25D4  120A  118A  	fcall	_Lcd_Port
   771                           
   772                           ;lcd.h: 92: RD3 = 1;
   773  0657  1283               	bcf	3,5	;RP0=0, select bank0
   774  0658  1303               	bcf	3,6	;RP1=0, select bank0
   775  0659  1588               	bsf	8,3	;volatile
   776                           
   777                           ;lcd.h: 93: _delay((unsigned long)((40)*(8000000/4000000.0)));
   778  065A  301A               	movlw	26
   779  065B  00F1               	movwf	??_Lcd_Write_Char
   780  065C                     u357:	
   781  065C  0BF1               	decfsz	??_Lcd_Write_Char,f
   782  065D  2E5C               	goto	u357
   783  065E  0000               	nop
   784                           
   785                           ;lcd.h: 94: RD3 = 0;
   786  065F  1283               	bcf	3,5	;RP0=0, select bank0
   787  0660  1303               	bcf	3,6	;RP1=0, select bank0
   788  0661  1188               	bcf	8,3	;volatile
   789  0662  0008               	return
   790  0663                     __end_of_Lcd_Write_Char:	
   791                           
   792                           	psect	text3
   793  05C9                     __ptext3:	
   794 ;; *************** function _Lcd_Shift_Right *****************
   795 ;; Defined at:
   796 ;;		line 104 in file "lcd.h"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    2
   817 ;; This function calls:
   818 ;;		_Lcd_Cmd
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _Lcd_Shift_Right
   826  05C9                     _Lcd_Shift_Right:	
   827                           
   828                           ;lcd.h: 106: Lcd_Cmd(0x01);
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
   832  05C9  3001               	movlw	1
   833  05CA  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
   834                           
   835                           ;lcd.h: 107: Lcd_Cmd(0x0C);
   836  05CF  300C               	movlw	12
   837  05D0  120A  118A  25EE   	fcall	_Lcd_Cmd
   838  05D3  0008               	return
   839  05D4                     __end_of_Lcd_Shift_Right:	
   840                           
   841                           	psect	text4
   842  05BE                     __ptext4:	
   843 ;; *************** function _Lcd_Shift_Left *****************
   844 ;; Defined at:
   845 ;;		line 110 in file "lcd.h"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		_Lcd_Cmd
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _Lcd_Shift_Left
   875  05BE                     _Lcd_Shift_Left:	
   876                           
   877                           ;lcd.h: 112: Lcd_Cmd(0x01);
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
   881  05BE  3001               	movlw	1
   882  05BF  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
   883                           
   884                           ;lcd.h: 113: Lcd_Cmd(0x08);
   885  05C4  3008               	movlw	8
   886  05C5  120A  118A  25EE   	fcall	_Lcd_Cmd
   887  05C8  0008               	return
   888  05C9                     __end_of_Lcd_Shift_Left:	
   889                           
   890                           	psect	text5
   891  0663                     __ptext5:	
   892 ;; *************** function _Lcd_Set_Cursor *****************
   893 ;; Defined at:
   894 ;;		line 41 in file "lcd.h"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  a               1    wreg     unsigned char 
   897 ;;  b               1    4[COMMON] unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  a               1    7[COMMON] unsigned char 
   900 ;;  temp            1   10[COMMON] unsigned char 
   901 ;;  y               1    9[COMMON] unsigned char 
   902 ;;  z               1    8[COMMON] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         1       0       0       0       0
   913 ;;      Locals:         4       0       0       0       0
   914 ;;      Temps:          2       0       0       0       0
   915 ;;      Totals:         7       0       0       0       0
   916 ;;Total ram usage:        7 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    2
   919 ;; This function calls:
   920 ;;		_Lcd_Cmd
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _Lcd_Set_Cursor
   928  0663                     _Lcd_Set_Cursor:	
   929                           
   930                           ;incstack = 0
   931                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   932                           ;Lcd_Set_Cursor@a stored from wreg
   933  0663  00F7               	movwf	Lcd_Set_Cursor@a
   934                           
   935                           ;lcd.h: 43: char temp,z,y;
   936                           ;lcd.h: 44: if(a == 1)
   937  0664  0377               	decf	Lcd_Set_Cursor@a,w
   938  0665  1D03               	btfss	3,2
   939  0666  2E88               	goto	l729
   940                           
   941                           ;lcd.h: 45: {
   942                           ;lcd.h: 46: temp = 0x80 + b - 1;
   943  0667  0874               	movf	Lcd_Set_Cursor@b,w
   944  0668  3E7F               	addlw	127
   945  0669  00F5               	movwf	??_Lcd_Set_Cursor
   946  066A  0875               	movf	??_Lcd_Set_Cursor,w
   947  066B  00FA               	movwf	Lcd_Set_Cursor@temp
   948                           
   949                           ;lcd.h: 47: z = temp>>4;
   950  066C  087A               	movf	Lcd_Set_Cursor@temp,w
   951  066D  00F5               	movwf	??_Lcd_Set_Cursor
   952  066E  3004               	movlw	4
   953  066F                     u215:	
   954  066F  1003               	clrc
   955  0670  0CF5               	rrf	??_Lcd_Set_Cursor,f
   956  0671  3EFF               	addlw	-1
   957  0672  1D03               	skipz
   958  0673  2E6F               	goto	u215
   959  0674  0875               	movf	??_Lcd_Set_Cursor,w
   960  0675  00F6               	movwf	??_Lcd_Set_Cursor+1
   961  0676  0876               	movf	??_Lcd_Set_Cursor+1,w
   962  0677  00F8               	movwf	Lcd_Set_Cursor@z
   963                           
   964                           ;lcd.h: 48: y = temp & 0x0F;
   965  0678  087A               	movf	Lcd_Set_Cursor@temp,w
   966  0679  390F               	andlw	15
   967  067A  00F5               	movwf	??_Lcd_Set_Cursor
   968  067B  0875               	movf	??_Lcd_Set_Cursor,w
   969  067C  00F9               	movwf	Lcd_Set_Cursor@y
   970                           
   971                           ;lcd.h: 49: Lcd_Cmd(z);
   972  067D  0878               	movf	Lcd_Set_Cursor@z,w
   973  067E  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
   974                           
   975                           ;lcd.h: 50: Lcd_Cmd(y);
   976  0683  0879               	movf	Lcd_Set_Cursor@y,w
   977  0684  120A  118A  25EE   	fcall	_Lcd_Cmd
   978                           
   979                           ;lcd.h: 51: }
   980  0687  0008               	return
   981  0688                     l729:	
   982                           
   983                           ;lcd.h: 52: else if(a == 2)
   984  0688  3002               	movlw	2
   985  0689  0677               	xorwf	Lcd_Set_Cursor@a,w
   986  068A  1D03               	btfss	3,2
   987  068B  0008               	return
   988                           
   989                           ;lcd.h: 53: {
   990                           ;lcd.h: 54: temp = 0xC0 + b - 1;
   991  068C  0874               	movf	Lcd_Set_Cursor@b,w
   992  068D  3EBF               	addlw	191
   993  068E  00F5               	movwf	??_Lcd_Set_Cursor
   994  068F  0875               	movf	??_Lcd_Set_Cursor,w
   995  0690  00FA               	movwf	Lcd_Set_Cursor@temp
   996                           
   997                           ;lcd.h: 55: z = temp>>4;
   998  0691  087A               	movf	Lcd_Set_Cursor@temp,w
   999  0692  00F5               	movwf	??_Lcd_Set_Cursor
  1000  0693  3004               	movlw	4
  1001  0694                     u235:	
  1002  0694  1003               	clrc
  1003  0695  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1004  0696  3EFF               	addlw	-1
  1005  0697  1D03               	skipz
  1006  0698  2E94               	goto	u235
  1007  0699  0875               	movf	??_Lcd_Set_Cursor,w
  1008  069A  00F6               	movwf	??_Lcd_Set_Cursor+1
  1009  069B  0876               	movf	??_Lcd_Set_Cursor+1,w
  1010  069C  00F8               	movwf	Lcd_Set_Cursor@z
  1011                           
  1012                           ;lcd.h: 56: y = temp & 0x0F;
  1013  069D  087A               	movf	Lcd_Set_Cursor@temp,w
  1014  069E  390F               	andlw	15
  1015  069F  00F5               	movwf	??_Lcd_Set_Cursor
  1016  06A0  0875               	movf	??_Lcd_Set_Cursor,w
  1017  06A1  00F9               	movwf	Lcd_Set_Cursor@y
  1018                           
  1019                           ;lcd.h: 57: Lcd_Cmd(z);
  1020  06A2  0878               	movf	Lcd_Set_Cursor@z,w
  1021  06A3  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1022                           
  1023                           ;lcd.h: 58: Lcd_Cmd(y);
  1024  06A8  0879               	movf	Lcd_Set_Cursor@y,w
  1025  06A9  120A  118A  25EE   	fcall	_Lcd_Cmd
  1026  06AC  0008               	return
  1027  06AD                     __end_of_Lcd_Set_Cursor:	
  1028                           
  1029                           	psect	text6
  1030  06AD                     __ptext6:	
  1031 ;; *************** function _Lcd_Init *****************
  1032 ;; Defined at:
  1033 ;;		line 62 in file "lcd.h"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          2       0       0       0       0
  1050 ;;      Totals:         2       0       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    2
  1054 ;; This function calls:
  1055 ;;		_Lcd_Cmd
  1056 ;;		_Lcd_Port
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _Lcd_Init
  1064  06AD                     _Lcd_Init:	
  1065                           
  1066                           ;lcd.h: 64: Lcd_Port(0x00);
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1070  06AD  3000               	movlw	0
  1071  06AE  120A  118A  25D4  120A  118A  	fcall	_Lcd_Port
  1072                           
  1073                           ;lcd.h: 65: _delay((unsigned long)((20)*(8000000/4000.0)));
  1074  06B3  3034               	movlw	52
  1075  06B4  00F5               	movwf	??_Lcd_Init+1
  1076  06B5  30F1               	movlw	241
  1077  06B6  00F4               	movwf	??_Lcd_Init
  1078  06B7                     u367:	
  1079  06B7  0BF4               	decfsz	??_Lcd_Init,f
  1080  06B8  2EB7               	goto	u367
  1081  06B9  0BF5               	decfsz	??_Lcd_Init+1,f
  1082  06BA  2EB7               	goto	u367
  1083  06BB  2EBC               	nop2
  1084                           
  1085                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1086  06BC  3003               	movlw	3
  1087  06BD  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1088                           
  1089                           ;lcd.h: 67: _delay((unsigned long)((5)*(8000000/4000.0)));
  1090  06C2  300D               	movlw	13
  1091  06C3  00F5               	movwf	??_Lcd_Init+1
  1092  06C4  30FB               	movlw	251
  1093  06C5  00F4               	movwf	??_Lcd_Init
  1094  06C6                     u377:	
  1095  06C6  0BF4               	decfsz	??_Lcd_Init,f
  1096  06C7  2EC6               	goto	u377
  1097  06C8  0BF5               	decfsz	??_Lcd_Init+1,f
  1098  06C9  2EC6               	goto	u377
  1099  06CA  2ECB               	nop2
  1100                           
  1101                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1102  06CB  3003               	movlw	3
  1103  06CC  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1104                           
  1105                           ;lcd.h: 69: _delay((unsigned long)((11)*(8000000/4000.0)));
  1106  06D1  301D               	movlw	29
  1107  06D2  00F5               	movwf	??_Lcd_Init+1
  1108  06D3  3091               	movlw	145
  1109  06D4  00F4               	movwf	??_Lcd_Init
  1110  06D5                     u387:	
  1111  06D5  0BF4               	decfsz	??_Lcd_Init,f
  1112  06D6  2ED5               	goto	u387
  1113  06D7  0BF5               	decfsz	??_Lcd_Init+1,f
  1114  06D8  2ED5               	goto	u387
  1115                           
  1116                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1117  06D9  3003               	movlw	3
  1118  06DA  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1119                           
  1120                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1121  06DF  3002               	movlw	2
  1122  06E0  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1123                           
  1124                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1125  06E5  3002               	movlw	2
  1126  06E6  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1127                           
  1128                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1129  06EB  3008               	movlw	8
  1130  06EC  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1131                           
  1132                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1133  06F1  3000               	movlw	0
  1134  06F2  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1135                           
  1136                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1137  06F7  300C               	movlw	12
  1138  06F8  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1139                           
  1140                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1141  06FD  3000               	movlw	0
  1142  06FE  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1143                           
  1144                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1145  0703  3006               	movlw	6
  1146  0704  120A  118A  25EE   	fcall	_Lcd_Cmd
  1147  0707  0008               	return
  1148  0708                     __end_of_Lcd_Init:	
  1149                           
  1150                           	psect	text7
  1151  05B3                     __ptext7:	
  1152 ;; *************** function _Lcd_Clear *****************
  1153 ;; Defined at:
  1154 ;;		line 35 in file "lcd.h"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  2   32[None  ] int 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		_Lcd_Cmd
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _Lcd_Clear
  1184  05B3                     _Lcd_Clear:	
  1185                           
  1186                           ;lcd.h: 37: Lcd_Cmd(0);
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1190  05B3  3000               	movlw	0
  1191  05B4  120A  118A  25EE  120A  118A  	fcall	_Lcd_Cmd
  1192                           
  1193                           ;lcd.h: 38: Lcd_Cmd(1);
  1194  05B9  3001               	movlw	1
  1195  05BA  120A  118A  25EE   	fcall	_Lcd_Cmd
  1196  05BD  0008               	return
  1197  05BE                     __end_of_Lcd_Clear:	
  1198                           
  1199                           	psect	text8
  1200  05EE                     __ptext8:	
  1201 ;; *************** function _Lcd_Cmd *****************
  1202 ;; Defined at:
  1203 ;;		line 26 in file "lcd.h"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  a               1    wreg     unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  a               1    3[COMMON] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;		None               void
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0
  1219 ;;      Temps:          2       0       0       0       0
  1220 ;;      Totals:         3       0       0       0       0
  1221 ;;Total ram usage:        3 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    1
  1224 ;; This function calls:
  1225 ;;		_Lcd_Port
  1226 ;; This function is called by:
  1227 ;;		_Lcd_Clear
  1228 ;;		_Lcd_Set_Cursor
  1229 ;;		_Lcd_Init
  1230 ;;		_Lcd_Shift_Right
  1231 ;;		_Lcd_Shift_Left
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _Lcd_Cmd
  1237  05EE                     _Lcd_Cmd:	
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1241                           ;Lcd_Cmd@a stored from wreg
  1242  05EE  00F3               	movwf	Lcd_Cmd@a
  1243                           
  1244                           ;lcd.h: 28: RD2 = 0;
  1245  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1246  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1247  05F1  1108               	bcf	8,2	;volatile
  1248                           
  1249                           ;lcd.h: 29: Lcd_Port(a);
  1250  05F2  0873               	movf	Lcd_Cmd@a,w
  1251  05F3  120A  118A  25D4  120A  118A  	fcall	_Lcd_Port
  1252                           
  1253                           ;lcd.h: 30: RD3 = 1;
  1254  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1255  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1256  05FA  1588               	bsf	8,3	;volatile
  1257                           
  1258                           ;lcd.h: 31: _delay((unsigned long)((4)*(8000000/4000.0)));
  1259  05FB  300B               	movlw	11
  1260  05FC  00F2               	movwf	??_Lcd_Cmd+1
  1261  05FD  3062               	movlw	98
  1262  05FE  00F1               	movwf	??_Lcd_Cmd
  1263  05FF                     u397:	
  1264  05FF  0BF1               	decfsz	??_Lcd_Cmd,f
  1265  0600  2DFF               	goto	u397
  1266  0601  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1267  0602  2DFF               	goto	u397
  1268  0603  0000               	nop
  1269                           
  1270                           ;lcd.h: 32: RD3 = 0;
  1271  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0606  1188               	bcf	8,3	;volatile
  1274  0607  0008               	return
  1275  0608                     __end_of_Lcd_Cmd:	
  1276                           
  1277                           	psect	text9
  1278  05D4                     __ptext9:	
  1279 ;; *************** function _Lcd_Port *****************
  1280 ;; Defined at:
  1281 ;;		line 4 in file "lcd.h"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  a               1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  a               1    0[COMMON] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         1       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0
  1298 ;;      Totals:         1       0       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_Lcd_Cmd
  1305 ;;		_Lcd_Init
  1306 ;;		_Lcd_Write_Char
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _Lcd_Port
  1312  05D4                     _Lcd_Port:	
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _Lcd_Port: [wreg]
  1316                           ;Lcd_Port@a stored from wreg
  1317  05D4  00F0               	movwf	Lcd_Port@a
  1318                           
  1319                           ;lcd.h: 6: if(a & 1)
  1320  05D5  1C70               	btfss	Lcd_Port@a,0
  1321  05D6  2DDB               	goto	l19
  1322                           
  1323                           ;lcd.h: 7: RD4 = 1;
  1324  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1325  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1326  05D9  1608               	bsf	8,4	;volatile
  1327  05DA  2DDE               	goto	l20
  1328  05DB                     l19:	
  1329                           
  1330                           ;lcd.h: 8: else
  1331                           ;lcd.h: 9: RD4 = 0;
  1332  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1333  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1334  05DD  1208               	bcf	8,4	;volatile
  1335  05DE                     l20:	
  1336                           
  1337                           ;lcd.h: 11: if(a & 2)
  1338  05DE  1CF0               	btfss	Lcd_Port@a,1
  1339  05DF  2DE2               	goto	l21
  1340                           
  1341                           ;lcd.h: 12: RD5 = 1;
  1342  05E0  1688               	bsf	8,5	;volatile
  1343  05E1  2DE3               	goto	l22
  1344  05E2                     l21:	
  1345                           
  1346                           ;lcd.h: 13: else
  1347                           ;lcd.h: 14: RD5 = 0;
  1348  05E2  1288               	bcf	8,5	;volatile
  1349  05E3                     l22:	
  1350                           
  1351                           ;lcd.h: 16: if(a & 4)
  1352  05E3  1D70               	btfss	Lcd_Port@a,2
  1353  05E4  2DE7               	goto	l23
  1354                           
  1355                           ;lcd.h: 17: RD6 = 1;
  1356  05E5  1708               	bsf	8,6	;volatile
  1357  05E6  2DE8               	goto	l24
  1358  05E7                     l23:	
  1359                           
  1360                           ;lcd.h: 18: else
  1361                           ;lcd.h: 19: RD6 = 0;
  1362  05E7  1308               	bcf	8,6	;volatile
  1363  05E8                     l24:	
  1364                           
  1365                           ;lcd.h: 21: if(a & 8)
  1366  05E8  1DF0               	btfss	Lcd_Port@a,3
  1367  05E9  2DEC               	goto	l25
  1368                           
  1369                           ;lcd.h: 22: RD7 = 1;
  1370  05EA  1788               	bsf	8,7	;volatile
  1371  05EB  0008               	return
  1372  05EC                     l25:	
  1373                           
  1374                           ;lcd.h: 23: else
  1375                           ;lcd.h: 24: RD7 = 0;
  1376  05EC  1388               	bcf	8,7	;volatile
  1377  05ED  0008               	return
  1378  05EE                     __end_of_Lcd_Port:	
  1379  007E                     btemp	set	126	;btemp
  1380  007E                     wtemp	set	126
  1381  007E                     wtemp0	set	126
  1382  0080                     wtemp1	set	128
  1383  0082                     wtemp2	set	130
  1384  0084                     wtemp3	set	132
  1385  0086                     wtemp4	set	134
  1386  0088                     wtemp5	set	136
  1387  007F                     wtemp6	set	127
  1388  007E                     ttemp	set	126
  1389  007E                     ttemp0	set	126
  1390  0081                     ttemp1	set	129
  1391  0084                     ttemp2	set	132
  1392  0087                     ttemp3	set	135
  1393  007F                     ttemp4	set	127
  1394  007E                     ltemp	set	126
  1395  007E                     ltemp0	set	126
  1396  0082                     ltemp1	set	130
  1397  0086                     ltemp2	set	134
  1398  0080                     ltemp3	set	128


Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1899
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     403
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     698
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 13 09:23:44 2015

                        pc 0002                __CFG_CP$OFF 0000                         l20 05DE  
                       l21 05E2                         l22 05E3                         l23 05E7  
                       l24 05E8                         l25 05EC                         l19 05DB  
                       fsr 0004                        l801 078A                        l823 07D5  
                      l815 07B4                        l729 0688                        l809 07AB  
                      l755 060B                        l765 0710                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u215 066F  
                      u235 0694                        u307 0765                        u317 0790  
                      u327 07BA                        u337 07F4               __CFG_CPD$OFF 0000  
                      u347 064B                        u195 063B                        u357 065C  
                      u367 06B7                        u377 06C6                        u297 0737  
                      u387 06D5                        u397 05FF                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       STR_1 001D  
                     STR_2 0046                       STR_3 002D                       STR_4 003A  
                     STR_5 0009               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0708                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0000                       ttemp 007E  
       ??_Lcd_Write_String 0075                       wtemp 007E            __end_of_Lcd_Cmd 0608  
                    ?_main 0070              __CFG_WDTE$OFF 0000    __size_of_Lcd_Set_Cursor 004A  
                    _TRISD 0088    __size_of_Lcd_Shift_Left 000B                      main@a 0020  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
         __end_of_Lcd_Init 0708           __end_of_Lcd_Port 05EE            __initialization 07FC  
             __end_of_main 07FC                     ??_main 007B         __size_of_Lcd_Clear 000B  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000  
 __size_of_Lcd_Shift_Right 000B            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 05BE             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0663  
           _Lcd_Shift_Left 05BE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 0708  __size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 06AD  
   __end_of_Lcd_Shift_Left 05C9          ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 062A  
                  _Lcd_Cmd 05EE            ?_Lcd_Set_Cursor 0074                    __ptext1 0608  
                  __ptext2 062A                    __ptext3 05C9                    __ptext4 05BE  
                  __ptext5 0663                    __ptext6 06AD                    __ptext7 05B3  
                  __ptext8 05EE                    __ptext9 05D4            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 0663       end_of_initialization 07FC                  Lcd_Port@a 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 05B3           _Lcd_Write_String 0608        start_initialization 07FC  
        __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 05C9            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074                  __pstrings 0003  
  __end_of_Lcd_Shift_Right 05D4                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06AD  
                 _Lcd_Port 05D4   __end_of_Lcd_Write_String 062A           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009              __size_of_main 00F4           ?_Lcd_Shift_Right 0070  
       Lcd_Write_Char@temp 0072                  stringcode 0003         Lcd_Set_Cursor@temp 007A  
                 stringdir 0003                   stringtab 0003  
